from math_formula.backends.main import DataType, BuiltinNode, NodeInstance


nodes = {
    'Principled Volume': BuiltinNode('ShaderNodeVolumePrincipled',
                                     [('color', DataType.RGBA), ('color_attribute', DataType.STRING), ('density', DataType.FLOAT), ('density_attribute', DataType.STRING), ('anisotropy', DataType.FLOAT), ('absorption_color', DataType.RGBA), (
                                         'emission_strength', DataType.FLOAT), ('emission_color', DataType.RGBA), ('blackbody_intensity', DataType.FLOAT), ('blackbody_tint', DataType.RGBA), ('temperature', DataType.FLOAT), ('temperature_attribute', DataType.STRING)],
                                     [('volume', DataType.SHADER)],
                                     []),
    'Triangulate': BuiltinNode('GeometryNodeTriangulate',
                               [('mesh', DataType.GEOMETRY), ('selection',
                                                              DataType.BOOL), ('minimum_vertices', DataType.INT)],
                               [('mesh', DataType.GEOMETRY)],
                               [('quad_method', ['BEAUTY', 'FIXED', 'FIXED_ALTERNATE', 'SHORTEST_DIAGONAL', 'LONGEST_DIAGONAL']), ('ngon_method', ['BEAUTY', 'CLIP'])]),
    'RGB Curves': BuiltinNode('ShaderNodeRGBCurve',
                              [('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                              [('color', DataType.RGBA)],
                              []),
    'Endpoint Selection': BuiltinNode('GeometryNodeCurveEndpointSelection',
                                      [('start_size', DataType.INT),
                                       ('end_size', DataType.INT)],
                                      [('selection', DataType.BOOL)],
                                      []),
    'Hair Info': BuiltinNode('ShaderNodeHairInfo',
                             [],
                             [('is_strand', DataType.FLOAT), ('intercept', DataType.FLOAT), ('length', DataType.FLOAT),
                              ('thickness', DataType.FLOAT), ('tangent_normal', DataType.VEC3), ('random', DataType.FLOAT)],
                             []),
    'Mapping': BuiltinNode('ShaderNodeMapping',
                           [('vector', DataType.VEC3), ('location', DataType.VEC3),
                            ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                           [('vector', DataType.VEC3)],
                           [('vector_type', ['POINT', 'TEXTURE', 'VECTOR', 'NORMAL'])]),
    'Transform': BuiltinNode('GeometryNodeTransform',
                             [('geometry', DataType.GEOMETRY), ('translation', DataType.VEC3),
                              ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                             [('geometry', DataType.GEOMETRY)],
                             []),
    'Displacement': BuiltinNode('ShaderNodeDisplacement',
                                [('height', DataType.FLOAT), ('midlevel', DataType.FLOAT),
                                 ('scale', DataType.FLOAT), ('normal', DataType.VEC3)],
                                [('displacement', DataType.VEC3)],
                                [('space', ['OBJECT', 'WORLD'])]),
    'String Length': BuiltinNode('FunctionNodeStringLength',
                                 [('string', DataType.STRING)],
                                 [('length', DataType.INT)],
                                 []),
    'Align Euler to Vector': BuiltinNode('FunctionNodeAlignEulerToVector',
                                         [('rotation', DataType.VEC3), ('factor',
                                                                        DataType.FLOAT), ('vector', DataType.VEC3)],
                                         [('rotation', DataType.VEC3)],
                                         [('axis', ['X', 'Y', 'Z']), ('pivot_axis', ['AUTO', 'X', 'Y', 'Z'])]),
    'Vector Math': BuiltinNode('ShaderNodeVectorMath',
                               [('vector', DataType.VEC3), ('vector', DataType.VEC3),
                                ('vector', DataType.VEC3), ('scale', DataType.FLOAT)],
                               [('vector', DataType.VEC3),
                                ('value', DataType.FLOAT)],
                               [('operation', ['ADD', 'SUBTRACT', 'MULTIPLY', 'DIVIDE', 'MULTIPLY_ADD', 'CROSS_PRODUCT', 'PROJECT', 'REFLECT', 'REFRACT', 'FACEFORWARD', 'DOT_PRODUCT', 'DISTANCE', 'LENGTH', 'SCALE', 'NORMALIZE', 'ABSOLUTE', 'MINIMUM', 'MAXIMUM', 'FLOOR', 'CEIL', 'FRACTION', 'MODULO', 'WRAP', 'SNAP', 'SINE', 'COSINE', 'TANGENT'])]),
    'Spline Length': BuiltinNode('GeometryNodeSplineLength',
                                 [],
                                 [('length', DataType.FLOAT),
                                  ('point_count', DataType.INT)],
                                 []),
    'Is Viewport': BuiltinNode('GeometryNodeIsViewport',
                               [],
                               [('is_viewport', DataType.BOOL)],
                               []),
    'Material': BuiltinNode('GeometryNodeInputMaterial',
                            [],
                            [('material', DataType.MATERIAL)],
                            []),
    'Curve Tilt': BuiltinNode('GeometryNodeInputCurveTilt',
                              [],
                              [('tilt', DataType.FLOAT)],
                              []),
    'Normal Map': BuiltinNode('ShaderNodeNormalMap',
                              [('strength', DataType.FLOAT),
                               ('color', DataType.RGBA)],
                              [('normal', DataType.VEC3)],
                              [('space', ['TANGENT', 'OBJECT', 'WORLD', 'BLENDER_OBJECT', 'BLENDER_WORLD'])]),
    'Special Characters': BuiltinNode('FunctionNodeInputSpecialCharacters',
                                      [],
                                      [('line_break', DataType.STRING),
                                       ('tab', DataType.STRING)],
                                      []),
    'Star': BuiltinNode('GeometryNodeCurveStar',
                        [('points', DataType.INT), ('inner_radius', DataType.FLOAT),
                         ('outer_radius', DataType.FLOAT), ('twist', DataType.FLOAT)],
                        [('curve', DataType.GEOMETRY),
                         ('outer_points', DataType.BOOL)],
                        []),
    'Sample Curve': BuiltinNode('GeometryNodeSampleCurve',
                                [('curve', DataType.GEOMETRY), ('factor',
                                                                DataType.FLOAT), ('length', DataType.FLOAT)],
                                [('position', DataType.VEC3), ('tangent',
                                                               DataType.VEC3), ('normal', DataType.VEC3)],
                                [('mode', ['FACTOR', 'LENGTH'])]),
    'ColorRamp': BuiltinNode('ShaderNodeValToRGB',
                             [('fac', DataType.FLOAT)],
                             [('color', DataType.RGBA),
                              ('alpha', DataType.FLOAT)],
                             []),
    'Attribute': BuiltinNode('ShaderNodeAttribute',
                             [],
                             [('color', DataType.RGBA), ('vector', DataType.VEC3),
                              ('fac', DataType.FLOAT), ('alpha', DataType.FLOAT)],
                             [('attribute_type', ['GEOMETRY', 'OBJECT', 'INSTANCER'])]),
    'Mesh Circle': BuiltinNode('GeometryNodeMeshCircle',
                               [('vertices', DataType.INT),
                                ('radius', DataType.FLOAT)],
                               [('mesh', DataType.GEOMETRY)],
                               [('fill_type', ['NONE', 'NGON', 'TRIANGLE_FAN'])]),
    'Bevel': BuiltinNode('ShaderNodeBevel',
                         [('radius', DataType.FLOAT), ('normal', DataType.VEC3)],
                         [('normal', DataType.VEC3)],
                         []),
    'Position': BuiltinNode('GeometryNodeInputPosition',
                            [],
                            [('position', DataType.VEC3)],
                            []),
    'Instance on Points': BuiltinNode('GeometryNodeInstanceOnPoints',
                                      [('points', DataType.GEOMETRY), ('selection', DataType.BOOL), ('instance', DataType.GEOMETRY), (
                                          'pick_instance', DataType.BOOL), ('instance_index', DataType.INT), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                      [('instances', DataType.GEOMETRY)],
                                      []),
    'UV Sphere': BuiltinNode('GeometryNodeMeshUVSphere',
                             [('segments', DataType.INT), ('rings',
                                                           DataType.INT), ('radius', DataType.FLOAT)],
                             [('mesh', DataType.GEOMETRY)],
                             []),
    'Separate RGB': BuiltinNode('ShaderNodeSeparateRGB',
                                [('image', DataType.RGBA)],
                                [('r', DataType.FLOAT), ('g', DataType.FLOAT),
                                 ('b', DataType.FLOAT)],
                                []),
    'Scene Time': BuiltinNode('GeometryNodeInputSceneTime',
                              [],
                              [('seconds', DataType.FLOAT),
                               ('frame', DataType.FLOAT)],
                              []),
    'Spiral': BuiltinNode('GeometryNodeCurveSpiral',
                          [('resolution', DataType.INT), ('rotations', DataType.FLOAT), ('start_radius', DataType.FLOAT), (
                              'end_radius', DataType.FLOAT), ('height', DataType.FLOAT), ('reverse', DataType.BOOL)],
                          [('curve', DataType.GEOMETRY)],
                          []),
    'Flip Faces': BuiltinNode('GeometryNodeFlipFaces',
                              [('mesh', DataType.GEOMETRY),
                               ('selection', DataType.BOOL)],
                              [('mesh', DataType.GEOMETRY)],
                              []),
    'Dual Mesh': BuiltinNode('GeometryNodeDualMesh',
                             [('mesh', DataType.GEOMETRY),
                              ('keep_boundaries', DataType.BOOL)],
                             [('dual_mesh', DataType.GEOMETRY)],
                             []),
    'Resample Curve': BuiltinNode('GeometryNodeResampleCurve',
                                  [('curve', DataType.GEOMETRY), ('selection', DataType.BOOL),
                                   ('count', DataType.INT), ('length', DataType.FLOAT)],
                                  [('curve', DataType.GEOMETRY)],
                                  [('mode', ['EVALUATED', 'COUNT', 'LENGTH'])]),
    'Curve Length.001': BuiltinNode('GeometryNodeCurveLength',
                                    [('curve', DataType.GEOMETRY)],
                                    [('length', DataType.FLOAT)],
                                    []),
    'Spline Resolution': BuiltinNode('GeometryNodeInputSplineResolution',
                                     [],
                                     [('resolution', DataType.INT)],
                                     []),
    'Geometry Proximity': BuiltinNode('GeometryNodeProximity',
                                      [('target', DataType.GEOMETRY),
                                       ('source_position', DataType.VEC3)],
                                      [('position', DataType.VEC3),
                                       ('distance', DataType.FLOAT)],
                                      [('target_element', ['POINTS', 'EDGES', 'FACES'])]),
    'Geometry': BuiltinNode('ShaderNodeNewGeometry',
                            [],
                            [('position', DataType.VEC3), ('normal', DataType.VEC3), ('tangent', DataType.VEC3), ('true_normal', DataType.VEC3), ('incoming', DataType.VEC3),
                             ('parametric', DataType.VEC3), ('backfacing', DataType.FLOAT), ('pointiness', DataType.FLOAT), ('random_per_island', DataType.FLOAT)],
                            []),
    'Random Value': BuiltinNode('FunctionNodeRandomValue',
                                [('min', DataType.VEC3), ('max', DataType.VEC3), ('min', DataType.FLOAT), ('max', DataType.FLOAT), ('min', DataType.INT), (
                                    'max', DataType.INT), ('probability', DataType.FLOAT), ('id', DataType.INT), ('seed', DataType.INT)],
                                [('value', DataType.VEC3), ('value', DataType.FLOAT),
                                 ('value', DataType.INT), ('value', DataType.BOOL)],
                                [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'Image Texture': BuiltinNode('GeometryNodeImageTexture',
                                 [('image', DataType.IMAGE), ('vector',
                                                              DataType.VEC3), ('frame', DataType.INT)],
                                 [('color', DataType.RGBA),
                                  ('alpha', DataType.FLOAT)],
                                 [('interpolation', ['Linear', 'Closest', 'Cubic']), ('extension', ['REPEAT', 'EXTEND', 'CLIP'])]),
    'Boolean Math': BuiltinNode('FunctionNodeBooleanMath',
                                [('boolean', DataType.BOOL),
                                 ('boolean', DataType.BOOL)],
                                [('boolean', DataType.BOOL)],
                                [('operation', ['AND', 'OR', 'NOT', 'NAND', 'NOR', 'XNOR', 'XOR', 'IMPLY', 'NIMPLY'])]),
    'Scale Elements': BuiltinNode('GeometryNodeScaleElements',
                                  [('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), (
                                      'scale', DataType.FLOAT), ('center', DataType.VEC3), ('axis', DataType.VEC3)],
                                  [('geometry', DataType.GEOMETRY)],
                                  [('domain', ['FACE', 'EDGE']), ('scale_mode', ['UNIFORM', 'SINGLE_AXIS'])]),
    'Subdivision Surface': BuiltinNode('GeometryNodeSubdivisionSurface',
                                       [('mesh', DataType.GEOMETRY), ('level',
                                                                      DataType.INT), ('crease', DataType.FLOAT)],
                                       [('mesh', DataType.GEOMETRY)],
                                       [('uv_smooth', ['NONE', 'PRESERVE_CORNERS', 'PRESERVE_CORNERS_AND_JUNCTIONS', 'PRESERVE_CORNERS_JUNCTIONS_AND_CONCAVE', 'PRESERVE_BOUNDARIES', 'SMOOTH_ALL']), ('boundary_smooth', ['PRESERVE_CORNERS', 'ALL'])]),
    'Grid': BuiltinNode('GeometryNodeMeshGrid',
                        [('size_x', DataType.FLOAT), ('size_y', DataType.FLOAT),
                         ('vertices_x', DataType.INT), ('vertices_y', DataType.INT)],
                        [('mesh', DataType.GEOMETRY)],
                        []),
    'Value to String': BuiltinNode('FunctionNodeValueToString',
                                   [('value', DataType.FLOAT),
                                    ('decimals', DataType.INT)],
                                   [('string', DataType.STRING)],
                                   []),
    'Material Selection': BuiltinNode('GeometryNodeMaterialSelection',
                                      [('material', DataType.MATERIAL)],
                                      [('selection', DataType.BOOL)],
                                      []),
    'Collection Info': BuiltinNode('GeometryNodeCollectionInfo',
                                   [('collection', DataType.COLLECTION), ('separate_children',
                                                                          DataType.BOOL), ('reset_children', DataType.BOOL)],
                                   [('geometry', DataType.GEOMETRY)],
                                   [('transform_space', ['ORIGINAL', 'RELATIVE'])]),
    'Texture Coordinate': BuiltinNode('ShaderNodeTexCoord',
                                      [],
                                      [('generated', DataType.VEC3), ('normal', DataType.VEC3), ('uv', DataType.VEC3), ('object',
                                                                                                                        DataType.VEC3), ('camera', DataType.VEC3), ('window', DataType.VEC3), ('reflection', DataType.VEC3)],
                                      []),
    'Distribute Points on Faces': BuiltinNode('GeometryNodeDistributePointsOnFaces',
                                              [('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('distance_min', DataType.FLOAT), (
                                                  'density_max', DataType.FLOAT), ('density', DataType.FLOAT), ('density_factor', DataType.FLOAT), ('seed', DataType.INT)],
                                              [('points', DataType.GEOMETRY), ('normal',
                                                                               DataType.VEC3), ('rotation', DataType.VEC3)],
                                              [('distribute_method', ['RANDOM', 'POISSON'])]),
    'Transfer Attribute': BuiltinNode('GeometryNodeAttributeTransfer',
                                      [('source', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), (
                                          'attribute', DataType.BOOL), ('attribute', DataType.INT), ('source_position', DataType.VEC3), ('index', DataType.INT)],
                                      [('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute',
                                                                                                     DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                      [('mapping', ['NEAREST_FACE_INTERPOLATED', 'NEAREST', 'INDEX']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'Set Shade Smooth': BuiltinNode('GeometryNodeSetShadeSmooth',
                                    [('geometry', DataType.GEOMETRY), ('selection',
                                                                       DataType.BOOL), ('shade_smooth', DataType.BOOL)],
                                    [('geometry', DataType.GEOMETRY)],
                                    []),
    'Points to Vertices': BuiltinNode('GeometryNodePointsToVertices',
                                      [('points', DataType.GEOMETRY),
                                       ('selection', DataType.BOOL)],
                                      [('mesh', DataType.GEOMETRY)],
                                      []),
    'Subdivide Mesh': BuiltinNode('GeometryNodeSubdivideMesh',
                                  [('mesh', DataType.GEOMETRY),
                                   ('level', DataType.INT)],
                                  [('mesh', DataType.GEOMETRY)],
                                  []),
    'Float to Integer': BuiltinNode('FunctionNodeFloatToInt',
                                    [('float', DataType.FLOAT)],
                                    [('integer', DataType.INT)],
                                    [('rounding_mode', ['ROUND', 'FLOOR', 'CEILING', 'TRUNCATE'])]),
    'Blackbody': BuiltinNode('ShaderNodeBlackbody',
                             [('temperature', DataType.FLOAT)],
                             [('color', DataType.RGBA)],
                             []),
    'Checker Texture': BuiltinNode('ShaderNodeTexChecker',
                                   [('vector', DataType.VEC3), ('color1', DataType.RGBA),
                                    ('color2', DataType.RGBA), ('scale', DataType.FLOAT)],
                                   [('color', DataType.RGBA),
                                    ('fac', DataType.FLOAT)],
                                   []),
    'Brick Texture': BuiltinNode('ShaderNodeTexBrick',
                                 [('vector', DataType.VEC3), ('color1', DataType.RGBA), ('color2', DataType.RGBA), ('mortar', DataType.RGBA), ('scale', DataType.FLOAT), (
                                     'mortar_size', DataType.FLOAT), ('mortar_smooth', DataType.FLOAT), ('bias', DataType.FLOAT), ('brick_width', DataType.FLOAT), ('row_height', DataType.FLOAT)],
                                 [('color', DataType.RGBA),
                                  ('fac', DataType.FLOAT)],
                                 []),
    'Image Texture': BuiltinNode('ShaderNodeTexImage',
                                 [('vector', DataType.VEC3)],
                                 [('color', DataType.RGBA),
                                  ('alpha', DataType.FLOAT)],
                                 [('projection', ['FLAT', 'BOX', 'SPHERE', 'TUBE']), ('interpolation', ['Linear', 'Closest', 'Cubic', 'Smart']), ('extension', ['REPEAT', 'EXTEND', 'CLIP'])]),
    'Integer': BuiltinNode('FunctionNodeInputInt',
                           [],
                           [('integer', DataType.INT)],
                           []),
    'Mesh to Points': BuiltinNode('GeometryNodeMeshToPoints',
                                  [('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL),
                                   ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                  [('points', DataType.GEOMETRY)],
                                  [('mode', ['VERTICES', 'EDGES', 'FACES', 'CORNERS'])]),
    'Set Curve Tilt': BuiltinNode('GeometryNodeSetCurveTilt',
                                  [('curve', DataType.GEOMETRY), ('selection',
                                                                  DataType.BOOL), ('tilt', DataType.FLOAT)],
                                  [('curve', DataType.GEOMETRY)],
                                  []),
    'Spline Parameter': BuiltinNode('GeometryNodeSplineParameter',
                                    [],
                                    [('factor', DataType.FLOAT), ('length',
                                                                  DataType.FLOAT), ('index', DataType.INT)],
                                    []),
    'Script': BuiltinNode('ShaderNodeScript',
                          [],
                          [],
                          [('mode', ['INTERNAL', 'EXTERNAL'])]),
    'Mesh Island': BuiltinNode('GeometryNodeInputMeshIsland',
                               [],
                               [('island_index', DataType.INT),
                                ('island_count', DataType.INT)],
                               []),
    'Split Edges': BuiltinNode('GeometryNodeSplitEdges',
                               [('mesh', DataType.GEOMETRY),
                                ('selection', DataType.BOOL)],
                               [('mesh', DataType.GEOMETRY)],
                               []),
    'Clamp': BuiltinNode('ShaderNodeClamp',
                         [('value', DataType.FLOAT),
                          ('min', DataType.FLOAT), ('max', DataType.FLOAT)],
                         [('result', DataType.FLOAT)],
                         [('clamp_type', ['MINMAX', 'RANGE'])]),
    'Slice String': BuiltinNode('FunctionNodeSliceString',
                                [('string', DataType.STRING), ('position',
                                                               DataType.INT), ('length', DataType.INT)],
                                [('string', DataType.STRING)],
                                []),
    'Fill Curve': BuiltinNode('GeometryNodeFillCurve',
                              [('curve', DataType.GEOMETRY)],
                              [('mesh', DataType.GEOMETRY)],
                              [('mode', ['TRIANGLES', 'NGONS'])]),
    'Cube': BuiltinNode('GeometryNodeMeshCube',
                        [('size', DataType.VEC3), ('vertices_x', DataType.INT),
                         ('vertices_y', DataType.INT), ('vertices_z', DataType.INT)],
                        [('mesh', DataType.GEOMETRY)],
                        []),
    'Viewer': BuiltinNode('GeometryNodeViewer',
                          [('geometry', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.VEC3), (
                              'value', DataType.RGBA), ('value', DataType.INT), ('value', DataType.BOOL)],
                          [],
                          [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'Bright/Contrast': BuiltinNode('ShaderNodeBrightContrast',
                                   [('color', DataType.RGBA), ('bright',
                                                               DataType.FLOAT), ('contrast', DataType.FLOAT)],
                                   [('color', DataType.RGBA)],
                                   []),
    'Vertex Color': BuiltinNode('ShaderNodeVertexColor',
                                [],
                                [('color', DataType.RGBA),
                                 ('alpha', DataType.FLOAT)],
                                []),
    'Handle Type Selection': BuiltinNode('GeometryNodeCurveHandleTypeSelection',
                                         [],
                                         [('selection', DataType.BOOL)],
                                         [('handle_type', ['FREE', 'AUTO', 'VECTOR', 'ALIGN']), ('mode', ['LEFT', 'RIGHT'])]),
    'Curve Tangent': BuiltinNode('GeometryNodeInputTangent',
                                 [],
                                 [('tangent', DataType.VEC3)],
                                 []),
    'Rotate Euler': BuiltinNode('FunctionNodeRotateEuler',
                                [('rotation', DataType.VEC3), ('rotate_by', DataType.VEC3),
                                 ('axis', DataType.VEC3), ('angle', DataType.FLOAT)],
                                [('rotation', DataType.VEC3)],
                                [('type', ['AXIS_ANGLE', 'EULER']), ('space', ['OBJECT', 'LOCAL'])]),
    'Vector Rotate': BuiltinNode('ShaderNodeVectorRotate',
                                 [('vector', DataType.VEC3), ('center', DataType.VEC3), ('axis', DataType.VEC3), (
                                     'angle', DataType.FLOAT), ('rotation', DataType.VEC3)],
                                 [('vector', DataType.VEC3)],
                                 [('rotation_type', ['AXIS_ANGLE', 'X_AXIS', 'Y_AXIS', 'Z_AXIS', 'EULER_XYZ'])]),
    'Bezier Segment': BuiltinNode('GeometryNodeCurvePrimitiveBezierSegment',
                                  [('resolution', DataType.INT), ('start', DataType.VEC3), ('start_handle',
                                                                                            DataType.VEC3), ('end_handle', DataType.VEC3), ('end', DataType.VEC3)],
                                  [('curve', DataType.GEOMETRY)],
                                  [('mode', ['POSITION', 'OFFSET'])]),
    'Reverse Curve': BuiltinNode('GeometryNodeReverseCurve',
                                 [('curve', DataType.GEOMETRY),
                                  ('selection', DataType.BOOL)],
                                 [('curve', DataType.GEOMETRY)],
                                 []),
    'Set Handle Positions': BuiltinNode('GeometryNodeSetCurveHandlePositions',
                                        [('curve', DataType.GEOMETRY), ('selection', DataType.BOOL),
                                         ('position', DataType.VEC3), ('offset', DataType.VEC3)],
                                        [('curve', DataType.GEOMETRY)],
                                        [('mode', ['LEFT', 'RIGHT'])]),
    'Edge Neighbors': BuiltinNode('GeometryNodeInputMeshEdgeNeighbors',
                                  [],
                                  [('face_count', DataType.INT)],
                                  []),
    'Normal': BuiltinNode('GeometryNodeInputNormal',
                          [],
                          [('normal', DataType.VEC3)],
                          []),
    'Index': BuiltinNode('GeometryNodeInputIndex',
                         [],
                         [('index', DataType.INT)],
                         []),
    'Rotate Instances': BuiltinNode('GeometryNodeRotateInstances',
                                    [('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('rotation',
                                                                                                      DataType.VEC3), ('pivot_point', DataType.VEC3), ('local_space', DataType.BOOL)],
                                    [('instances', DataType.GEOMETRY)],
                                    []),
    'Set Curve Radius': BuiltinNode('GeometryNodeSetCurveRadius',
                                    [('curve', DataType.GEOMETRY), ('selection',
                                                                    DataType.BOOL), ('radius', DataType.FLOAT)],
                                    [('curve', DataType.GEOMETRY)],
                                    []),
    'Musgrave Texture': BuiltinNode('ShaderNodeTexMusgrave',
                                    [('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('detail', DataType.FLOAT), (
                                        'dimension', DataType.FLOAT), ('lacunarity', DataType.FLOAT), ('offset', DataType.FLOAT), ('gain', DataType.FLOAT)],
                                    [('fac', DataType.FLOAT)],
                                    [('musgrave_dimensions', ['1D', '2D', '3D', '4D']), ('musgrave_type', ['MULTIFRACTAL', 'RIDGED_MULTIFRACTAL', 'HYBRID_MULTIFRACTAL', 'FBM', 'HETERO_TERRAIN'])]),
    'Set Handle Type': BuiltinNode('GeometryNodeCurveSetHandles',
                                   [('curve', DataType.GEOMETRY),
                                    ('selection', DataType.BOOL)],
                                   [('curve', DataType.GEOMETRY)],
                                   [('handle_type', ['FREE', 'AUTO', 'VECTOR', 'ALIGN']), ('mode', ['LEFT', 'RIGHT'])]),
    'Attribute Statistic': BuiltinNode('GeometryNodeAttributeStatistic',
                                       [('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL),
                                        ('attribute', DataType.FLOAT), ('attribute', DataType.VEC3)],
                                       [('mean', DataType.FLOAT), ('median', DataType.FLOAT), ('sum', DataType.FLOAT), ('min', DataType.FLOAT), ('max', DataType.FLOAT), ('range', DataType.FLOAT), ('standard_deviation', DataType.FLOAT), ('variance', DataType.FLOAT),
                                        ('mean', DataType.VEC3), ('median', DataType.VEC3), ('sum', DataType.VEC3), ('min', DataType.VEC3), ('max', DataType.VEC3), ('range', DataType.VEC3), ('standard_deviation', DataType.VEC3), ('variance', DataType.VEC3)],
                                       [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'Color': BuiltinNode('FunctionNodeInputColor',
                         [],
                         [('color', DataType.RGBA)],
                         []),
    'Store Named Attribute': BuiltinNode('GeometryNodeStoreNamedAttribute',
                                         [('geometry', DataType.GEOMETRY), ('name', DataType.STRING), ('value', DataType.VEC3), (
                                             'value', DataType.FLOAT), ('value', DataType.RGBA), ('value', DataType.BOOL), ('value', DataType.INT)],
                                         [('geometry', DataType.GEOMETRY)],
                                         [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'Is Spline Cyclic': BuiltinNode('GeometryNodeInputSplineCyclic',
                                    [],
                                    [('cyclic', DataType.BOOL)],
                                    []),
    'Realize Instances': BuiltinNode('GeometryNodeRealizeInstances',
                                     [('geometry', DataType.GEOMETRY)],
                                     [('geometry', DataType.GEOMETRY)],
                                     []),
    'Vertex Neighbors': BuiltinNode('GeometryNodeInputMeshVertexNeighbors',
                                    [],
                                    [('vertex_count', DataType.INT),
                                     ('face_count', DataType.INT)],
                                    []),
    'Sky Texture': BuiltinNode('ShaderNodeTexSky',
                               [('vector', DataType.VEC3)],
                               [('color', DataType.RGBA)],
                               [('sky_type', ['PREETHAM', 'HOSEK_WILKIE', 'NISHITA'])]),
    'Magic Texture': BuiltinNode('ShaderNodeTexMagic',
                                 [('vector', DataType.VEC3), ('scale',
                                                              DataType.FLOAT), ('distortion', DataType.FLOAT)],
                                 [('color', DataType.RGBA),
                                  ('fac', DataType.FLOAT)],
                                 []),
    'Scale Instances': BuiltinNode('GeometryNodeScaleInstances',
                                   [('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), (
                                       'scale', DataType.VEC3), ('center', DataType.VEC3), ('local_space', DataType.BOOL)],
                                   [('instances', DataType.GEOMETRY)],
                                   []),
    'Set Material Index': BuiltinNode('GeometryNodeSetMaterialIndex',
                                      [('geometry', DataType.GEOMETRY), ('selection',
                                                                         DataType.BOOL), ('material_index', DataType.INT)],
                                      [('geometry', DataType.GEOMETRY)],
                                      []),
    'Remove Attribute': BuiltinNode('GeometryNodeRemoveAttribute',
                                    [('geometry', DataType.GEOMETRY),
                                     ('name', DataType.STRING)],
                                    [('geometry', DataType.GEOMETRY)],
                                    []),
    'String': BuiltinNode('FunctionNodeInputString',
                          [],
                          [('string', DataType.STRING)],
                          []),
    'Capture Attribute': BuiltinNode('GeometryNodeCaptureAttribute',
                                     [('geometry', DataType.GEOMETRY), ('value', DataType.VEC3), ('value', DataType.FLOAT), (
                                         'value', DataType.RGBA), ('value', DataType.BOOL), ('value', DataType.INT)],
                                     [('geometry', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT),
                                      ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                     [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'Tangent': BuiltinNode('ShaderNodeTangent',
                           [],
                           [('tangent', DataType.VEC3)],
                           [('direction_type', ['RADIAL', 'UV_MAP']), ('axis', ['X', 'Y', 'Z'])]),
    'Ico Sphere': BuiltinNode('GeometryNodeMeshIcoSphere',
                              [('radius', DataType.FLOAT),
                               ('subdivisions', DataType.INT)],
                              [('mesh', DataType.GEOMETRY)],
                              []),
    'RGB to BW': BuiltinNode('ShaderNodeRGBToBW',
                             [('color', DataType.RGBA)],
                             [('val', DataType.FLOAT)],
                             []),
    'Volume Info': BuiltinNode('ShaderNodeVolumeInfo',
                               [],
                               [('color', DataType.RGBA), ('density', DataType.FLOAT),
                                ('flame', DataType.FLOAT), ('temperature', DataType.FLOAT)],
                               []),
    'Point Info': BuiltinNode('ShaderNodePointInfo',
                              [],
                              [('position', DataType.VEC3), ('radius',
                                                             DataType.FLOAT), ('random', DataType.FLOAT)],
                              []),
    'Edge Angle': BuiltinNode('GeometryNodeInputMeshEdgeAngle',
                              [],
                              [('unsigned_angle', DataType.FLOAT),
                               ('signed_angle', DataType.FLOAT)],
                              []),
    'Curve to Mesh': BuiltinNode('GeometryNodeCurveToMesh',
                                 [('curve', DataType.GEOMETRY), ('profile_curve',
                                                                 DataType.GEOMETRY), ('fill_caps', DataType.BOOL)],
                                 [('mesh', DataType.GEOMETRY)],
                                 []),
    'Delete Geometry': BuiltinNode('GeometryNodeDeleteGeometry',
                                   [('geometry', DataType.GEOMETRY),
                                    ('selection', DataType.BOOL)],
                                   [('geometry', DataType.GEOMETRY)],
                                   [('mode', ['ALL', 'EDGE_FACE', 'ONLY_FACE']), ('domain', ['POINT', 'EDGE', 'FACE', 'CURVE', 'INSTANCE'])]),
    'Cylinder': BuiltinNode('GeometryNodeMeshCylinder',
                            [('vertices', DataType.INT), ('side_segments', DataType.INT), ('fill_segments',
                                                                                           DataType.INT), ('radius', DataType.FLOAT), ('depth', DataType.FLOAT)],
                            [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL),
                             ('side', DataType.BOOL), ('bottom', DataType.BOOL)],
                            [('fill_type', ['NONE', 'NGON', 'TRIANGLE_FAN'])]),
    'Mesh Line': BuiltinNode('GeometryNodeMeshLine',
                             [('count', DataType.INT), ('resolution', DataType.FLOAT),
                              ('start_location', DataType.VEC3), ('offset', DataType.VEC3)],
                             [('mesh', DataType.GEOMETRY)],
                             [('mode', ['OFFSET', 'END_POINTS']), ('count_mode', ['TOTAL', 'RESOLUTION'])]),
    'Curve Circle': BuiltinNode('GeometryNodeCurvePrimitiveCircle',
                                [('resolution', DataType.INT), ('point_1', DataType.VEC3), ('point_2',
                                                                                            DataType.VEC3), ('point_3', DataType.VEC3), ('radius', DataType.FLOAT)],
                                [('curve', DataType.GEOMETRY),
                                 ('center', DataType.VEC3)],
                                [('mode', ['POINTS', 'RADIUS'])]),
    'Join Strings': BuiltinNode('GeometryNodeStringJoin',
                                [('delimiter', DataType.STRING),
                                 ('strings', DataType.STRING)],
                                [('string', DataType.STRING)],
                                []),
    'Field at Index': BuiltinNode('GeometryNodeFieldAtIndex',
                                  [('index', DataType.INT), ('value', DataType.FLOAT), ('value', DataType.INT), (
                                      'value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                  [('value', DataType.FLOAT), ('value', DataType.INT), ('value',
                                                                                        DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                  [('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'Trim Curve': BuiltinNode('GeometryNodeTrimCurve',
                              [('curve', DataType.GEOMETRY), ('start', DataType.FLOAT), ('end',
                                                                                         DataType.FLOAT), ('start', DataType.FLOAT), ('end', DataType.FLOAT)],
                              [('curve', DataType.GEOMETRY)],
                              [('mode', ['FACTOR', 'LENGTH'])]),
    'Light Falloff': BuiltinNode('ShaderNodeLightFalloff',
                                 [('strength', DataType.FLOAT),
                                  ('smooth', DataType.FLOAT)],
                                 [('quadratic', DataType.FLOAT), ('linear',
                                                                  DataType.FLOAT), ('constant', DataType.FLOAT)],
                                 []),
    'Replace String': BuiltinNode('FunctionNodeReplaceString',
                                  [('string', DataType.STRING), ('find',
                                                                 DataType.STRING), ('replace', DataType.STRING)],
                                  [('string', DataType.STRING)],
                                  []),
    'Set Position': BuiltinNode('GeometryNodeSetPosition',
                                [('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL),
                                 ('position', DataType.VEC3), ('offset', DataType.VEC3)],
                                [('geometry', DataType.GEOMETRY)],
                                []),
    'Curve Handle Positions': BuiltinNode('GeometryNodeInputCurveHandlePositions',
                                          [('relative', DataType.BOOL)],
                                          [('left', DataType.VEC3),
                                           ('right', DataType.VEC3)],
                                          []),
    'Vector': BuiltinNode('FunctionNodeInputVector',
                          [],
                          [('vector', DataType.VEC3)],
                          []),
    'Curve to Points': BuiltinNode('GeometryNodeCurveToPoints',
                                   [('curve', DataType.GEOMETRY), ('count',
                                                                   DataType.INT), ('length', DataType.FLOAT)],
                                   [('points', DataType.GEOMETRY), ('tangent', DataType.VEC3),
                                    ('normal', DataType.VEC3), ('rotation', DataType.VEC3)],
                                   [('mode', ['EVALUATED', 'COUNT', 'LENGTH'])]),
    'Hue Saturation Value': BuiltinNode('ShaderNodeHueSaturation',
                                        [('hue', DataType.FLOAT), ('saturation', DataType.FLOAT), (
                                            'value', DataType.FLOAT), ('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                        [('color', DataType.RGBA)],
                                        []),
    'Replace Material': BuiltinNode('GeometryNodeReplaceMaterial',
                                    [('geometry', DataType.GEOMETRY), ('old',
                                                                       DataType.MATERIAL), ('new', DataType.MATERIAL)],
                                    [('geometry', DataType.GEOMETRY)],
                                    []),
    'Noise Texture': BuiltinNode('ShaderNodeTexNoise',
                                 [('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), (
                                     'detail', DataType.FLOAT), ('roughness', DataType.FLOAT), ('distortion', DataType.FLOAT)],
                                 [('fac', DataType.FLOAT),
                                  ('color', DataType.RGBA)],
                                 [('noise_dimensions', ['1D', '2D', '3D', '4D'])]),
    'Wavelength': BuiltinNode('ShaderNodeWavelength',
                              [('wavelength', DataType.FLOAT)],
                              [('color', DataType.RGBA)],
                              []),
    'Voronoi Texture': BuiltinNode('ShaderNodeTexVoronoi',
                                   [('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), (
                                       'smoothness', DataType.FLOAT), ('exponent', DataType.FLOAT), ('randomness', DataType.FLOAT)],
                                   [('distance', DataType.FLOAT), ('color', DataType.RGBA), ('position',
                                                                                             DataType.VEC3), ('w', DataType.FLOAT), ('radius', DataType.FLOAT)],
                                   [('voronoi_dimensions', ['1D', '2D', '3D', '4D']), ('distance', ['EUCLIDEAN', 'MANHATTAN', 'CHEBYCHEV', 'MINKOWSKI']), ('feature', ['F1', 'F2', 'SMOOTH_F1', 'DISTANCE_TO_EDGE', 'N_SPHERE_RADIUS'])]),
    'Set Spline Cyclic': BuiltinNode('GeometryNodeSetSplineCyclic',
                                     [('geometry', DataType.GEOMETRY), ('selection',
                                                                        DataType.BOOL), ('cyclic', DataType.BOOL)],
                                     [('geometry', DataType.GEOMETRY)],
                                     []),
    'Fresnel': BuiltinNode('ShaderNodeFresnel',
                           [('ior', DataType.FLOAT), ('normal', DataType.VEC3)],
                           [('fac', DataType.FLOAT)],
                           []),
    'Environment Texture': BuiltinNode('ShaderNodeTexEnvironment',
                                       [('vector', DataType.VEC3)],
                                       [('color', DataType.RGBA)],
                                       [('projection', ['EQUIRECTANGULAR', 'MIRROR_BALL']), ('interpolation', ['Linear', 'Closest', 'Cubic', 'Smart'])]),
    'White Noise Texture': BuiltinNode('ShaderNodeTexWhiteNoise',
                                       [('vector', DataType.VEC3),
                                        ('w', DataType.FLOAT)],
                                       [('value', DataType.FLOAT),
                                        ('color', DataType.RGBA)],
                                       [('noise_dimensions', ['1D', '2D', '3D', '4D'])]),
    'Object Info': BuiltinNode('GeometryNodeObjectInfo',
                               [('object', DataType.OBJECT),
                                ('as_instance', DataType.BOOL)],
                               [('location', DataType.VEC3), ('rotation', DataType.VEC3),
                                ('scale', DataType.VEC3), ('geometry', DataType.GEOMETRY)],
                               [('transform_space', ['ORIGINAL', 'RELATIVE'])]),
    'Set Material': BuiltinNode('GeometryNodeSetMaterial',
                                [('geometry', DataType.GEOMETRY), ('selection',
                                                                   DataType.BOOL), ('material', DataType.MATERIAL)],
                                [('geometry', DataType.GEOMETRY)],
                                []),
    'Mesh Boolean': BuiltinNode('GeometryNodeMeshBoolean',
                                [('mesh_1', DataType.GEOMETRY), ('mesh_2', DataType.GEOMETRY), (
                                    'self_intersection', DataType.BOOL), ('hole_tolerant', DataType.BOOL)],
                                [('mesh', DataType.GEOMETRY)],
                                [('operation', ['INTERSECT', 'UNION', 'DIFFERENCE'])]),
    'Light Path': BuiltinNode('ShaderNodeLightPath',
                              [],
                              [('is_camera_ray', DataType.FLOAT), ('is_shadow_ray', DataType.FLOAT), ('is_diffuse_ray', DataType.FLOAT), ('is_glossy_ray', DataType.FLOAT), ('is_singular_ray', DataType.FLOAT), ('is_reflection_ray', DataType.FLOAT), ('is_transmission_ray',
                                                                                                                                                                                                                                                         DataType.FLOAT), ('ray_length', DataType.FLOAT), ('ray_depth', DataType.FLOAT), ('diffuse_depth', DataType.FLOAT), ('glossy_depth', DataType.FLOAT), ('transparent_depth', DataType.FLOAT), ('transmission_depth', DataType.FLOAT)],
                              []),
    'Mesh to Curve': BuiltinNode('GeometryNodeMeshToCurve',
                                 [('mesh', DataType.GEOMETRY),
                                  ('selection', DataType.BOOL)],
                                 [('curve', DataType.GEOMETRY)],
                                 []),
    'Combine HSV': BuiltinNode('ShaderNodeCombineHSV',
                               [('h', DataType.FLOAT), ('s', DataType.FLOAT),
                                ('v', DataType.FLOAT)],
                               [('color', DataType.RGBA)],
                               []),
    'Mix': BuiltinNode('ShaderNodeMixRGB',
                       [('fac', DataType.FLOAT), ('color1', DataType.RGBA),
                        ('color2', DataType.RGBA)],
                       [('color', DataType.RGBA)],
                       [('blend_type', ['MIX', 'DARKEN', 'MULTIPLY', 'BURN', 'LIGHTEN', 'SCREEN', 'DODGE', 'ADD', 'OVERLAY', 'SOFT_LIGHT', 'LINEAR_LIGHT', 'DIFFERENCE', 'SUBTRACT', 'DIVIDE', 'HUE', 'SATURATION', 'COLOR', 'VALUE'])]),
    'Camera Data': BuiltinNode('ShaderNodeCameraData',
                               [],
                               [('view_vector', DataType.VEC3), ('view_z_depth',
                                                                 DataType.FLOAT), ('view_distance', DataType.FLOAT)],
                               []),
    'Domain Size': BuiltinNode('GeometryNodeAttributeDomainSize',
                               [('geometry', DataType.GEOMETRY)],
                               [('point_count', DataType.INT), ('edge_count', DataType.INT), ('face_count', DataType.INT),
                                ('face_corner_count', DataType.INT), ('spline_count', DataType.INT), ('instance_count', DataType.INT)],
                               [('component', ['MESH', 'POINTCLOUD', 'CURVE', 'INSTANCES'])]),
    'Bounding Box': BuiltinNode('GeometryNodeBoundBox',
                                [('geometry', DataType.GEOMETRY)],
                                [('bounding_box', DataType.GEOMETRY),
                                 ('min', DataType.VEC3), ('max', DataType.VEC3)],
                                []),
    'Combine RGB': BuiltinNode('ShaderNodeCombineRGB',
                               [('r', DataType.FLOAT), ('g', DataType.FLOAT),
                                ('b', DataType.FLOAT)],
                               [('image', DataType.RGBA)],
                               []),
    'Quadratic Bezier': BuiltinNode('GeometryNodeCurveQuadraticBezier',
                                    [('resolution', DataType.INT), ('start', DataType.VEC3),
                                     ('middle', DataType.VEC3), ('end', DataType.VEC3)],
                                    [('curve', DataType.GEOMETRY)],
                                    []),
    'Set Point Radius': BuiltinNode('GeometryNodeSetPointRadius',
                                    [('points', DataType.GEOMETRY), ('selection',
                                                                     DataType.BOOL), ('radius', DataType.FLOAT)],
                                    [('points', DataType.GEOMETRY)],
                                    []),
    'Wave Texture': BuiltinNode('ShaderNodeTexWave',
                                [('vector', DataType.VEC3), ('scale', DataType.FLOAT), ('distortion', DataType.FLOAT), ('detail', DataType.FLOAT), (
                                    'detail_scale', DataType.FLOAT), ('detail_roughness', DataType.FLOAT), ('phase_offset', DataType.FLOAT)],
                                [('color', DataType.RGBA),
                                 ('fac', DataType.FLOAT)],
                                [('wave_type', ['BANDS', 'RINGS']), ('bands_direction', ['X', 'Y', 'Z', 'DIAGONAL']), ('rings_direction', ['X', 'Y', 'Z', 'SPHERICAL']), ('wave_profile', ['SIN', 'SAW', 'TRI'])]),
    'Layer Weight': BuiltinNode('ShaderNodeLayerWeight',
                                [('blend', DataType.FLOAT),
                                 ('normal', DataType.VEC3)],
                                [('fresnel', DataType.FLOAT),
                                 ('facing', DataType.FLOAT)],
                                []),
    'Face Area': BuiltinNode('GeometryNodeInputMeshFaceArea',
                             [],
                             [('area', DataType.FLOAT)],
                             []),
    'String to Curves': BuiltinNode('GeometryNodeStringToCurves',
                                    [('string', DataType.STRING), ('size', DataType.FLOAT), ('character_spacing', DataType.FLOAT), ('word_spacing', DataType.FLOAT), (
                                        'line_spacing', DataType.FLOAT), ('text_box_width', DataType.FLOAT), ('text_box_height', DataType.FLOAT)],
                                    [('curve_instances', DataType.GEOMETRY), ('remainder', DataType.STRING),
                                     ('line', DataType.INT), ('pivot_point', DataType.VEC3)],
                                    [('overflow', ['OVERFLOW', 'SCALE_TO_FIT', 'TRUNCATE']), ('align_x', ['LEFT', 'CENTER', 'RIGHT', 'JUSTIFY', 'FLUSH']), ('align_y', ['TOP_BASELINE', 'TOP', 'MIDDLE', 'BOTTOM_BASELINE', 'BOTTOM']), ('pivot_mode', ['MIDPOINT', 'TOP_LEFT', 'TOP_CENTER', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_CENTER', 'BOTTOM_RIGHT'])]),
    'Vector Transform': BuiltinNode('ShaderNodeVectorTransform',
                                    [('vector', DataType.VEC3)],
                                    [('vector', DataType.VEC3)],
                                    [('vector_type', ['POINT', 'VECTOR', 'NORMAL']), ('convert_from', ['WORLD', 'OBJECT', 'CAMERA']), ('convert_to', ['WORLD', 'OBJECT', 'CAMERA'])]),
    'Boolean': BuiltinNode('FunctionNodeInputBool',
                           [],
                           [('boolean', DataType.BOOL)],
                           []),
    'Point Density': BuiltinNode('ShaderNodeTexPointDensity',
                                 [('vector', DataType.VEC3)],
                                 [('color', DataType.RGBA),
                                  ('density', DataType.FLOAT)],
                                 [('point_source', ['PARTICLE_SYSTEM', 'OBJECT']), ('space', ['OBJECT', 'WORLD']), ('interpolation', ['Closest', 'Linear', 'Cubic']), ('particle_color_source', ['PARTICLE_AGE', 'PARTICLE_SPEED', 'PARTICLE_VELOCITY']), ('vertex_color_source', ['VERTEX_COLOR', 'VERTEX_WEIGHT', 'VERTEX_NORMAL'])]),
    'Gradient Texture': BuiltinNode('ShaderNodeTexGradient',
                                    [('vector', DataType.VEC3)],
                                    [('color', DataType.RGBA),
                                     ('fac', DataType.FLOAT)],
                                    [('gradient_type', ['LINEAR', 'QUADRATIC', 'EASING', 'DIAGONAL', 'SPHERICAL', 'QUADRATIC_SPHERE', 'RADIAL'])]),
    'ID': BuiltinNode('GeometryNodeInputID',
                      [],
                      [('id', DataType.INT)],
                      []),
    'Separate Components': BuiltinNode('GeometryNodeSeparateComponents',
                                       [('geometry', DataType.GEOMETRY)],
                                       [('mesh', DataType.GEOMETRY), ('point_cloud', DataType.GEOMETRY), ('curve',
                                                                                                          DataType.GEOMETRY), ('volume', DataType.GEOMETRY), ('instances', DataType.GEOMETRY)],
                                       []),
    'Switch': BuiltinNode('GeometryNodeSwitch',
                          [('switch', DataType.BOOL), ('switch', DataType.BOOL), ('false', DataType.FLOAT), ('true', DataType.FLOAT), ('false', DataType.INT), ('true', DataType.INT), ('false', DataType.BOOL), ('true', DataType.BOOL), ('false', DataType.VEC3), ('true', DataType.VEC3), ('false', DataType.RGBA), ('true', DataType.RGBA), ('false', DataType.STRING), ('true', DataType.STRING), (
                              'false', DataType.GEOMETRY), ('true', DataType.GEOMETRY), ('false', DataType.OBJECT), ('true', DataType.OBJECT), ('false', DataType.COLLECTION), ('true', DataType.COLLECTION), ('false', DataType.TEXTURE), ('true', DataType.TEXTURE), ('false', DataType.MATERIAL), ('true', DataType.MATERIAL), ('false', DataType.IMAGE), ('true', DataType.IMAGE)],
                          [('output', DataType.FLOAT), ('output', DataType.INT), ('output', DataType.BOOL), ('output', DataType.VEC3), ('output', DataType.RGBA), ('output', DataType.STRING), ('output',
                                                                                                                                                                                                DataType.GEOMETRY), ('output', DataType.OBJECT), ('output', DataType.COLLECTION), ('output', DataType.TEXTURE), ('output', DataType.MATERIAL), ('output', DataType.IMAGE)],
                          [('input_type', ['FLOAT', 'INT', 'BOOLEAN', 'VECTOR', 'STRING', 'RGBA', 'OBJECT', 'IMAGE', 'GEOMETRY', 'COLLECTION', 'TEXTURE', 'MATERIAL'])]),
    'Join Geometry': BuiltinNode('GeometryNodeJoinGeometry',
                                 [('geometry', DataType.GEOMETRY)],
                                 [('geometry', DataType.GEOMETRY)],
                                 []),
    'IES Texture': BuiltinNode('ShaderNodeTexIES',
                               [('vector', DataType.VEC3),
                                ('strength', DataType.FLOAT)],
                               [('fac', DataType.FLOAT)],
                               [('mode', ['INTERNAL', 'EXTERNAL'])]),
    'Particle Info': BuiltinNode('ShaderNodeParticleInfo',
                                 [],
                                 [('index', DataType.FLOAT), ('random', DataType.FLOAT), ('age', DataType.FLOAT), ('lifetime', DataType.FLOAT),
                                  ('location', DataType.VEC3), ('size', DataType.FLOAT), ('velocity', DataType.VEC3), ('angular_velocity', DataType.VEC3)],
                                 []),
    'Set Spline Resolution': BuiltinNode('GeometryNodeSetSplineResolution',
                                         [('geometry', DataType.GEOMETRY), ('selection',
                                                                            DataType.BOOL), ('resolution', DataType.INT)],
                                         [('geometry', DataType.GEOMETRY)],
                                         []),
    'UV Map': BuiltinNode('ShaderNodeUVMap',
                          [],
                          [('uv', DataType.VEC3)],
                          []),
    'Vector Displacement': BuiltinNode('ShaderNodeVectorDisplacement',
                                       [('vector', DataType.RGBA), ('midlevel',
                                                                    DataType.FLOAT), ('scale', DataType.FLOAT)],
                                       [('displacement', DataType.VEC3)],
                                       [('space', ['TANGENT', 'OBJECT', 'WORLD'])]),
    '': BuiltinNode('ShaderNodeOutputAOV',
                    [('color', DataType.RGBA), ('value', DataType.FLOAT)],
                    [],
                    []),
    'Bump': BuiltinNode('ShaderNodeBump',
                        [('strength', DataType.FLOAT), ('distance', DataType.FLOAT), ('height', DataType.FLOAT), (
                            'height_dx', DataType.FLOAT), ('height_dy', DataType.FLOAT), ('normal', DataType.VEC3)],
                        [('normal', DataType.VEC3)],
                        []),
    'Translate Instances': BuiltinNode('GeometryNodeTranslateInstances',
                                       [('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), (
                                           'translation', DataType.VEC3), ('local_space', DataType.BOOL)],
                                       [('instances', DataType.GEOMETRY)],
                                       []),
    'Is Shade Smooth': BuiltinNode('GeometryNodeInputShadeSmooth',
                                   [],
                                   [('smooth', DataType.BOOL)],
                                   []),
    'Accumulate Field': BuiltinNode('GeometryNodeAccumulateField',
                                    [('value', DataType.VEC3), ('value', DataType.FLOAT),
                                     ('value', DataType.INT), ('group_index', DataType.INT)],
                                    [('leading', DataType.VEC3), ('leading', DataType.FLOAT), ('leading', DataType.INT), ('trailing', DataType.VEC3), ('trailing',
                                                                                                                                                       DataType.FLOAT), ('trailing', DataType.INT), ('total', DataType.VEC3), ('total', DataType.FLOAT), ('total', DataType.INT)],
                                    [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'Volume to Mesh': BuiltinNode('GeometryNodeVolumeToMesh',
                                  [('volume', DataType.GEOMETRY), ('voxel_size', DataType.FLOAT), ('voxel_amount',
                                                                                                   DataType.FLOAT), ('threshold', DataType.FLOAT), ('adaptivity', DataType.FLOAT)],
                                  [('mesh', DataType.GEOMETRY)],
                                  [('resolution_mode', ['GRID', 'VOXEL_AMOUNT', 'VOXEL_SIZE'])]),
    'Subdivide Curve': BuiltinNode('GeometryNodeSubdivideCurve',
                                   [('curve', DataType.GEOMETRY),
                                    ('cuts', DataType.INT)],
                                   [('curve', DataType.GEOMETRY)],
                                   []),
    'Gamma': BuiltinNode('ShaderNodeGamma',
                         [('color', DataType.RGBA), ('gamma', DataType.FLOAT)],
                         [('color', DataType.RGBA)],
                         []),
    'Float Curve': BuiltinNode('ShaderNodeFloatCurve',
                               [('factor', DataType.FLOAT),
                                ('value', DataType.FLOAT)],
                               [('value', DataType.FLOAT)],
                               []),
    'Normal': BuiltinNode('ShaderNodeNormal',
                          [('normal', DataType.VEC3)],
                          [('normal', DataType.VEC3), ('dot', DataType.FLOAT)],
                          []),
    'Object Info': BuiltinNode('ShaderNodeObjectInfo',
                               [],
                               [('location', DataType.VEC3), ('color', DataType.RGBA), ('alpha', DataType.FLOAT),
                                ('object_index', DataType.FLOAT), ('material_index', DataType.FLOAT), ('random', DataType.FLOAT)],
                               []),
    'Value': BuiltinNode('ShaderNodeValue',
                         [],
                         [('value', DataType.FLOAT)],
                         []),
    'Merge by Distance': BuiltinNode('GeometryNodeMergeByDistance',
                                     [('geometry', DataType.GEOMETRY), ('selection',
                                                                        DataType.BOOL), ('distance', DataType.FLOAT)],
                                     [('geometry', DataType.GEOMETRY)],
                                     []),
    'Face is Planar': BuiltinNode('GeometryNodeInputMeshFaceIsPlanar',
                                  [('threshold', DataType.FLOAT)],
                                  [('planar', DataType.BOOL)],
                                  []),
    'Instances to Points': BuiltinNode('GeometryNodeInstancesToPoints',
                                       [('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), (
                                           'position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                       [('points', DataType.GEOMETRY)],
                                       []),
    'Face Neighbors': BuiltinNode('GeometryNodeInputMeshFaceNeighbors',
                                  [],
                                  [('vertex_count', DataType.INT),
                                   ('face_count', DataType.INT)],
                                  []),
    'Edge Vertices': BuiltinNode('GeometryNodeInputMeshEdgeVertices',
                                 [],
                                 [('vertex_index_1', DataType.INT), ('vertex_index_2', DataType.INT),
                                  ('position_1', DataType.VEC3), ('position_2', DataType.VEC3)],
                                 []),
    'Wireframe': BuiltinNode('ShaderNodeWireframe',
                             [('size', DataType.FLOAT)],
                             [('fac', DataType.FLOAT)],
                             []),
    'Set ID': BuiltinNode('GeometryNodeSetID',
                          [('geometry', DataType.GEOMETRY),
                           ('selection', DataType.BOOL), ('id', DataType.INT)],
                          [('geometry', DataType.GEOMETRY)],
                          []),
    'Duplicate Elements': BuiltinNode('GeometryNodeDuplicateElements',
                                      [('geometry', DataType.GEOMETRY), ('selection',
                                                                         DataType.BOOL), ('amount', DataType.INT)],
                                      [('geometry', DataType.GEOMETRY),
                                       ('duplicate_index', DataType.INT)],
                                      [('domain', ['POINT', 'EDGE', 'FACE', 'SPLINE', 'INSTANCE'])]),
    'Separate Geometry': BuiltinNode('GeometryNodeSeparateGeometry',
                                     [('geometry', DataType.GEOMETRY),
                                      ('selection', DataType.BOOL)],
                                     [('selection', DataType.GEOMETRY),
                                      ('inverted', DataType.GEOMETRY)],
                                     [('domain', ['POINT', 'EDGE', 'FACE', 'CURVE', 'INSTANCE'])]),
    'Cone': BuiltinNode('GeometryNodeMeshCone',
                        [('vertices', DataType.INT), ('side_segments', DataType.INT), ('fill_segments', DataType.INT),
                         ('radius_top', DataType.FLOAT), ('radius_bottom', DataType.FLOAT), ('depth', DataType.FLOAT)],
                        [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL),
                         ('bottom', DataType.BOOL), ('side', DataType.BOOL)],
                        [('fill_type', ['NONE', 'NGON', 'TRIANGLE_FAN'])]),
    'Separate HSV': BuiltinNode('ShaderNodeSeparateHSV',
                                [('color', DataType.RGBA)],
                                [('h', DataType.FLOAT), ('s', DataType.FLOAT),
                                 ('v', DataType.FLOAT)],
                                []),
    'Curve Line': BuiltinNode('GeometryNodeCurvePrimitiveLine',
                              [('start', DataType.VEC3), ('end', DataType.VEC3),
                               ('direction', DataType.VEC3), ('length', DataType.FLOAT)],
                              [('curve', DataType.GEOMETRY)],
                              [('mode', ['POINTS', 'DIRECTION'])]),
    'Raycast': BuiltinNode('GeometryNodeRaycast',
                           [('target_geometry', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute',
                                                                                                                                                                DataType.BOOL), ('attribute', DataType.INT), ('source_position', DataType.VEC3), ('ray_direction', DataType.VEC3), ('ray_length', DataType.FLOAT)],
                           [('is_hit', DataType.BOOL), ('hit_position', DataType.VEC3), ('hit_normal', DataType.VEC3), ('hit_distance', DataType.FLOAT), ('attribute',
                                                                                                                                                          DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                           [('mapping', ['INTERPOLATED', 'NEAREST']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'Radius': BuiltinNode('GeometryNodeInputRadius',
                          [],
                          [('radius', DataType.FLOAT)],
                          []),
    'Compare': BuiltinNode('FunctionNodeCompare',
                           [('a', DataType.FLOAT), ('b', DataType.FLOAT), ('a', DataType.INT), ('b', DataType.INT), ('a', DataType.VEC3), ('b', DataType.VEC3), ('a', DataType.RGBA), (
                               'b', DataType.RGBA), ('a', DataType.STRING), ('b', DataType.STRING), ('c', DataType.FLOAT), ('angle', DataType.FLOAT), ('epsilon', DataType.FLOAT)],
                           [('result', DataType.BOOL)],
                           [('operation', ['LESS_THAN', 'LESS_EQUAL', 'GREATER_THAN', 'GREATER_EQUAL', 'EQUAL', 'NOT_EQUAL', 'BRIGHTER', 'DARKER']), ('data_type', ['FLOAT', 'INT', 'BOOLEAN', 'VECTOR', 'STRING', 'RGBA', 'OBJECT', 'IMAGE', 'GEOMETRY', 'COLLECTION', 'TEXTURE', 'MATERIAL']), ('mode', ['ELEMENT', 'LENGTH', 'AVERAGE', 'DOT_PRODUCT', 'DIRECTION'])]),
    'Material Index': BuiltinNode('GeometryNodeInputMaterialIndex',
                                  [],
                                  [('material_index', DataType.INT)],
                                  []),
    'Quadrilateral': BuiltinNode('GeometryNodeCurvePrimitiveQuadrilateral',
                                 [('width', DataType.FLOAT), ('height', DataType.FLOAT), ('bottom_width', DataType.FLOAT), ('top_width', DataType.FLOAT), ('offset', DataType.FLOAT), ('bottom_height',
                                                                                                                                                                                       DataType.FLOAT), ('top_height', DataType.FLOAT), ('point_1', DataType.VEC3), ('point_2', DataType.VEC3), ('point_3', DataType.VEC3), ('point_4', DataType.VEC3)],
                                 [('curve', DataType.GEOMETRY)],
                                 [('mode', ['RECTANGLE', 'PARALLELOGRAM', 'TRAPEZOID', 'KITE', 'POINTS'])]),
    'Fillet Curve': BuiltinNode('GeometryNodeFilletCurve',
                                [('curve', DataType.GEOMETRY), ('count', DataType.INT),
                                 ('radius', DataType.FLOAT), ('limit_radius', DataType.BOOL)],
                                [('curve', DataType.GEOMETRY)],
                                [('mode', ['BEZIER', 'POLY'])]),
    'Named Attribute': BuiltinNode('GeometryNodeInputNamedAttribute',
                                   [('name', DataType.STRING)],
                                   [('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute',
                                                                                                  DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                   [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'Ambient Occlusion': BuiltinNode('ShaderNodeAmbientOcclusion',
                                     [('color', DataType.RGBA), ('distance',
                                                                 DataType.FLOAT), ('normal', DataType.VEC3)],
                                     [('color', DataType.RGBA),
                                      ('ao', DataType.FLOAT)],
                                     []),
    'Invert': BuiltinNode('ShaderNodeInvert',
                          [('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                          [('color', DataType.RGBA)],
                          []),
    'Arc': BuiltinNode('GeometryNodeCurveArc',
                       [('resolution', DataType.INT), ('start', DataType.VEC3), ('middle', DataType.VEC3), ('end', DataType.VEC3), ('radius', DataType.FLOAT), ('start_angle',
                                                                                                                                                                DataType.FLOAT), ('sweep_angle', DataType.FLOAT), ('offset_angle', DataType.FLOAT), ('connect_center', DataType.BOOL), ('invert_arc', DataType.BOOL)],
                       [('curve', DataType.GEOMETRY), ('center', DataType.VEC3),
                        ('normal', DataType.VEC3), ('radius', DataType.FLOAT)],
                       [('mode', ['POINTS', 'RADIUS'])]),
    'Points to Volume': BuiltinNode('GeometryNodePointsToVolume',
                                    [('points', DataType.GEOMETRY), ('density', DataType.FLOAT), ('voxel_size',
                                                                                                  DataType.FLOAT), ('voxel_amount', DataType.FLOAT), ('radius', DataType.FLOAT)],
                                    [('volume', DataType.GEOMETRY)],
                                    [('resolution_mode', ['VOXEL_AMOUNT', 'VOXEL_SIZE'])]),
    'Extrude Mesh': BuiltinNode('GeometryNodeExtrudeMesh',
                                [('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('offset', DataType.VEC3), (
                                    'offset_scale', DataType.FLOAT), ('individual', DataType.BOOL)],
                                [('mesh', DataType.GEOMETRY), ('top',
                                                               DataType.BOOL), ('side', DataType.BOOL)],
                                [('mode', ['VERTICES', 'EDGES', 'FACES'])]),
    'RGB': BuiltinNode('ShaderNodeRGB',
                       [],
                       [('color', DataType.RGBA)],
                       []),
    'Geometry to Instance': BuiltinNode('GeometryNodeGeometryToInstance',
                                        [('geometry', DataType.GEOMETRY)],
                                        [('instances', DataType.GEOMETRY)],
                                        []),
    'Math': BuiltinNode('ShaderNodeMath',
                        [('value', DataType.FLOAT), ('value',
                                                     DataType.FLOAT), ('value', DataType.FLOAT)],
                        [('value', DataType.FLOAT)],
                        [('operation', ['ADD', 'SUBTRACT', 'MULTIPLY', 'DIVIDE', 'MULTIPLY_ADD', 'POWER', 'LOGARITHM', 'SQRT', 'INVERSE_SQRT', 'ABSOLUTE', 'EXPONENT', 'MINIMUM', 'MAXIMUM', 'LESS_THAN', 'GREATER_THAN', 'SIGN', 'COMPARE', 'SMOOTH_MIN', 'SMOOTH_MAX', 'ROUND', 'FLOOR', 'CEIL', 'TRUNC', 'FRACT', 'MODULO', 'WRAP', 'SNAP', 'PINGPONG', 'SINE', 'COSINE', 'TANGENT', 'ARCSINE', 'ARCCOSINE', 'ARCTANGENT', 'ARCTAN2', 'SINH', 'COSH', 'TANH', 'RADIANS', 'DEGREES'])]),
    'Map Range': BuiltinNode('ShaderNodeMapRange',
                             [('value', DataType.FLOAT), ('from_min', DataType.FLOAT), ('from_max', DataType.FLOAT), ('to_min', DataType.FLOAT), ('to_max', DataType.FLOAT), ('steps', DataType.FLOAT), (
                                 'vector', DataType.VEC3), ('from_min', DataType.VEC3), ('from_max', DataType.VEC3), ('to_min', DataType.VEC3), ('to_max', DataType.VEC3), ('steps', DataType.VEC3)],
                             [('result', DataType.FLOAT),
                              ('vector', DataType.VEC3)],
                             [('interpolation_type', ['LINEAR', 'STEPPED', 'SMOOTHSTEP', 'SMOOTHERSTEP']), ('data_type', ['FLOAT', 'FLOAT_VECTOR'])]),
    'Convex Hull': BuiltinNode('GeometryNodeConvexHull',
                               [('geometry', DataType.GEOMETRY)],
                               [('convex_hull', DataType.GEOMETRY)],
                               []),
    'Combine XYZ': BuiltinNode('ShaderNodeCombineXYZ',
                               [('x', DataType.FLOAT), ('y', DataType.FLOAT),
                                ('z', DataType.FLOAT)],
                               [('vector', DataType.VEC3)],
                               []),
    'Vector Curves': BuiltinNode('ShaderNodeVectorCurve',
                                 [('fac', DataType.FLOAT),
                                  ('vector', DataType.VEC3)],
                                 [('vector', DataType.VEC3)],
                                 []),
    'Set Spline Type': BuiltinNode('GeometryNodeCurveSplineType',
                                   [('curve', DataType.GEOMETRY),
                                    ('selection', DataType.BOOL)],
                                   [('curve', DataType.GEOMETRY)],
                                   [('spline_type', ['BEZIER', 'NURBS', 'POLY'])]),
    'Separate XYZ': BuiltinNode('ShaderNodeSeparateXYZ',
                                [('vector', DataType.VEC3)],
                                [('x', DataType.FLOAT), ('y', DataType.FLOAT),
                                 ('z', DataType.FLOAT)],
                                []),

}


instances = {
    'add': [NodeInstance('Math', [0, 1], [0], [('operation', 'ADD')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'ADD')])],
    'sub': [NodeInstance('Math', [0, 1], [0], [('operation', 'SUBTRACT')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'SUBTRACT')])],
    'mul': [NodeInstance('Math', [0, 1], [0], [('operation', 'MULTIPLY')]),
            NodeInstance('Vector Math', [0, 3], [0], [('operation', 'SCALE')]),
            NodeInstance('Vector Math', [3, 0], [0], [('operation', 'SCALE')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'MULTIPLY')])],
    'div': [NodeInstance('Math', [0, 1], [0], [('operation', 'DIVIDE')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'DIVIDE')])],
    'mul_add': [NodeInstance('Math', [0, 1, 2], [0], [('operation', 'MULTIPLY_ADD')]),
                NodeInstance('Vector Math', [0, 1, 2], [0], [('operation', 'MULTIPLY_ADD')])],
    'pow': [NodeInstance('Math', [0, 1], [0], [('operation', 'POWER')])],
    'log': [NodeInstance('Math', [0, 1], [0], [('operation', 'LOGARITHM')])],
    'sqrt': [NodeInstance('Math', [0], [0], [('operation', 'SQRT')])],
    'inv_sqrt': [NodeInstance('Math', [0], [0], [('operation', 'INVERSE_SQRT')])],
    'abs': [NodeInstance('Math', [0], [0], [('operation', 'ABSOLUTE')]),
            NodeInstance('Vector Math', [0], [0], [('operation', 'ABSOLUTE')])],
    'exp': [NodeInstance('Math', [0, 1], [0], [('operation', 'EXPONENT')])],
    'min': [NodeInstance('Math', [0, 1], [0], [('operation', 'MINIMUM')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'MINIMUM')])],
    'max': [NodeInstance('Math', [0, 1], [0], [('operation', 'MAXIMUM')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'MAXIMUM')])],
    'less_than': [NodeInstance('Math', [0, 1], [0], [('operation', 'LESS_THAN')])],
    'greater_than': [NodeInstance('Math', [0, 1], [0], [('operation', 'GREATER_THAN')])],
    'sign': [NodeInstance('Math', [0], [0], [('operation', 'SIGN')])],
    'compare': [NodeInstance('Math', [0, 1, 2], [0], [('operation', 'COMPARE')])],
    'smin': [NodeInstance('Math', [0, 1, 2], [0], [('operation', 'SMOOTH_MIN')])],
    'smax': [NodeInstance('Math', [0, 1, 2], [0], [('operation', 'SMOOTH_MAX')])],
    'round': [NodeInstance('Math', [0], [0], [('operation', 'ROUND')])],
    'floor': [NodeInstance('Math', [0], [0], [('operation', 'FLOOR')]),
              NodeInstance('Vector Math', [0], [0], [('operation', 'FLOOR')])],
    'ceil': [NodeInstance('Math', [0], [0], [('operation', 'CEIL')]),
             NodeInstance('Vector Math', [0], [0], [('operation', 'CEIL')])],
    'trunc': [NodeInstance('Math', [0], [0], [('operation', 'TRUNC')])],
    'fract': [NodeInstance('Math', [0], [0], [('operation', 'FRACT')]),
              NodeInstance('Vector Math', [0], [0], [('operation', 'FRACTION')])],
    'mod': [NodeInstance('Math', [0, 1], [0], [('operation', 'MODULO')]),
            NodeInstance('Vector Math', [0, 1], [0], [('operation', 'MODULO')])],
    'wrap': [NodeInstance('Math', [0, 1, 2], [0], [('operation', 'WRAP')]),
             NodeInstance('Vector Math', [0, 1, 2], [0], [('operation', 'WRAP')])],
    'snap': [NodeInstance('Math', [0, 1], [0], [('operation', 'SNAP')]),
             NodeInstance('Vector Math', [0, 1], [0], [('operation', 'SNAP')])],
    'pingpong': [NodeInstance('Math', [0, 1], [0], [('operation', 'PINGPONG')])],
    'sin': [NodeInstance('Math', [0], [0], [('operation', 'SINE')]),
            NodeInstance('Vector Math', [0], [0], [('operation', 'SINE')])],
    'cos': [NodeInstance('Math', [0], [0], [('operation', 'COSINE')]),
            NodeInstance('Vector Math', [0], [0], [('operation', 'COSINE')])],
    'tan': [NodeInstance('Math', [0], [0], [('operation', 'TANGENT')]),
            NodeInstance('Vector Math', [0], [0], [('operation', 'TANGENT')])],
    'asin': [NodeInstance('Math', [0], [0], [('operation', 'ARCSINE')])],
    'acos': [NodeInstance('Math', [0], [0], [('operation', 'ARCCOSINE')])],
    'atan': [NodeInstance('Math', [0], [0], [('operation', 'ARCTANGENT')])],
    'atan2': [NodeInstance('Math', [0, 1], [0], [('operation', 'ARCTAN2')])],
    'sinh': [NodeInstance('Math', [0], [0], [('operation', 'SINH')])],
    'cosh': [NodeInstance('Math', [0], [0], [('operation', 'COSH')])],
    'tanh': [NodeInstance('Math', [0], [0], [('operation', 'TANH')])],
    'radians': [NodeInstance('Math', [0], [0], [('operation', 'RADIANS')])],
    'degrees': [NodeInstance('Math', [0], [0], [('operation', 'DEGREES')])],
    'vec3': [NodeInstance('Combine XYZ', [0, 1, 2], [0], [])],
    'sep_xyz': [NodeInstance('Separate XYZ', [0], [0, 1, 2], [])],
    'cross': [NodeInstance('Vector Math', [0, 1], [0], [('operation', 'CROSS_PRODUCT')])],
    'project': [NodeInstance('Vector Math', [0, 1], [0], [('operation', 'PROJECT')])],
    'reflect': [NodeInstance('Vector Math', [0, 1], [0], [('operation', 'REFLECT')])],
    'refract': [NodeInstance('Vector Math', [0, 1, 3], [0], [('operation', 'REFRACT')])],
    'face_forward': [NodeInstance('Vector Math', [0, 1, 2], [0], [('operation', 'FACE_FORWARD')])],
    'dot': [NodeInstance('Vector Math', [0, 1], [1], [('operation', 'DOT_PRODUCT')])],
    'dist': [NodeInstance('Vector Math', [0, 1], [1], [('operation', 'DISTANCE')])],
    'length': [NodeInstance('Vector Math', [0], [1], [('operation', 'LENGTH')])],
    'scale': [NodeInstance('Vector Math', [0, 3], [0], [('operation', 'SCALE')])],
    'normalize': [NodeInstance('Vector Math', [0], [0], [('operation', 'NORMALIZE')])],
    'map': [NodeInstance('Map Range', [0, 1, 2, 3, 4], [0], []),
            NodeInstance('Map Range', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR')])],
    'map_stepped': [NodeInstance('Map Range', [0, 1, 2, 3, 4, 5], [0], [('interpolation_type', 'STEPPED')]),
                    NodeInstance('Map Range', [0, 6, 7, 8, 9, 5], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'STEPPED')])],
    'smoothstep': [NodeInstance('Map Range', [0, 1, 2, 3, 4], [0], [('interpolation_type', 'SMOOTHSTEP')]),
                   NodeInstance('Map Range', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'SMOOTHSTEP')])],
    'smootherstep': [NodeInstance('Map Range', [0, 1, 2, 3, 4], [0], [('interpolation_type', 'SMOOTHERSTEP')]),
                     NodeInstance('Map Range', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'SMOOTHERSTEP')])],
    'clamp': [NodeInstance('Clamp', [0, 1, 2], [0], [])],
    'clamp_range': [NodeInstance('Clamp', [0, 1, 2], [0], [('clamp_type', 'RANGE')])],
    'mix': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'mix')])],
    'darken': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'DARKEN')])],
    'burn': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'BURN')])],
    'lighten': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'LIGHTEN')])],
    'screen': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'SCREEN')])],
    'dodge': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'DODGE')])],
    'overlay': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'OVERLAY')])],
    'soft_light': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'SOFT_LIGHT')])],
    'lin_light': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'LINEAR_LIGHT')])],
    'mix_hue': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'HUE')])],
    'mix_saturation': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'SATURATION')])],
    'mix_color': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'COLOR')])],
    'mix_value': [NodeInstance('Mix', [0, 1, 2], [0], [('blend_type', 'VALUE')])],
    'rotate_axis': [NodeInstance('Vector Rotate', [0, 1, 2, 3], [0], [('rotation_type', ['AXIS_ANGLE'])])],
    'rotate_x': [NodeInstance('Vector Rotate', [0, 1, 3], [0], [('rotation_type', ['X_AXIS'])])],
    'rotate_y': [NodeInstance('Vector Rotate', [0, 1, 3], [0], [('rotation_type', ['Y_AXIS'])])],
    'rotate_z': [NodeInstance('Vector Rotate', [0, 1, 3], [0], [('rotation_type', ['Z_AXIS'])])],
    'rotate_euler': [NodeInstance('Vector Rotate', [0, 1, 4], [0], [('rotation_type', ['EULER_XYZ'])])],
    'white_noise': [NodeInstance('White Noise Texture', [0], [0, 1], [('noise_dimensions', '3D')]),
                    NodeInstance('White Noise Texture', [1], [0, 1], [('noise_dimensions', '1D')]), ],
    'white_noise_2d': [NodeInstance('White Noise Texture', [0], [0, 1], [('noise_dimensions', '2D')])],
    'white_noise_4d': [NodeInstance('White Noise Texture', [0, 1], [0, 1], [('noise_dimensions', '4D')])],
    'noise': [NodeInstance('Noise Texture', [0, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '3D')]),
              NodeInstance('Noise Texture', [1, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '1D')]), ],
    'noise_2d': [NodeInstance('Noise Texture', [0, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '2D')])],
    'noise_4d': [NodeInstance('Noise Texture', [0, 1, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '4D')])],
    'voronoi': [NodeInstance('Voronoi Texture', [0, 2, 5], [0, 1], [('voronoi_dimensions', '3D')]),
                NodeInstance('Voronoi Texture', [1, 2, 5], [0, 1], [('voronoi_dimensions', '1D')]), ],
    'voronoi_2d': [NodeInstance('Voronoi Texture', [0, 2, 5], [0, 1], [('voronoi_dimensions', '2D')])],
    'voronoi_4d': [NodeInstance('Voronoi Texture', [0, 1, 2, 5], [0, 1], [('voronoi_dimensions', '4D')])],
}
