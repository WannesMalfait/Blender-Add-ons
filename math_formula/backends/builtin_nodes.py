from .type_defs import DataType, BuiltinNode, NodeInstance


def levenshtein_distance(x: str, y: str) -> int:
    '''Find the amount of inserts deletes and replaces needed to get from x to y.'''
    n = len(x)
    m = len(y)

    A = [[i + j for j in range(m + 1)] for i in range(n + 1)]

    for i in range(n):
        for j in range(m):
            A[i + 1][j + 1] = min(A[i][j + 1] + 1,              # insert
                                  A[i + 1][j] + 1,              # delete
                                  A[i][j] + int(x[i] != y[j]))  # replace

    return A[n][m]


nodes = {
    'GeometryNodePointsToVolume': BuiltinNode([('points', DataType.GEOMETRY), ('density', DataType.FLOAT), ('voxel_size', DataType.FLOAT), ('voxel_amount', DataType.FLOAT), ('radius', DataType.FLOAT)],
                                              [('volume', DataType.GEOMETRY)],
                                              [('resolution_mode', ['VOXEL_AMOUNT', 'VOXEL_SIZE'])]),
    'GeometryNodeSplineParameter': BuiltinNode([],
                                               [('factor', DataType.FLOAT), ('length',
                                                                             DataType.FLOAT), ('index', DataType.INT)],
                                               []),
    'GeometryNodeCurvePrimitiveBezierSegment': BuiltinNode([('resolution', DataType.INT), ('start', DataType.VEC3), ('start_handle', DataType.VEC3), ('end_handle', DataType.VEC3), ('end', DataType.VEC3)],
                                                           [('curve', DataType.GEOMETRY)],
                                                           [('mode', ['POSITION', 'OFFSET'])]),
    'GeometryNodeSampleCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('factor', DataType.FLOAT), ('length', DataType.FLOAT)],
                                           [('position', DataType.VEC3), ('tangent',
                                                                          DataType.VEC3), ('normal', DataType.VEC3)],
                                           [('mode', ['FACTOR', 'LENGTH'])]),
    'FunctionNodeReplaceString': BuiltinNode([('string', DataType.STRING), ('find', DataType.STRING), ('replace', DataType.STRING)],
                                             [('string', DataType.STRING)],
                                             []),
    'FunctionNodeStringLength': BuiltinNode([('string', DataType.STRING)],
                                            [('length', DataType.INT)],
                                            []),
    'ShaderNodeTexChecker': BuiltinNode([('vector', DataType.VEC3), ('color1', DataType.RGBA), ('color2', DataType.RGBA), ('scale', DataType.FLOAT)],
                                        [('color', DataType.RGBA),
                                         ('fac', DataType.FLOAT)],
                                        []),
    'GeometryNodeCollectionInfo': BuiltinNode([('collection', DataType.COLLECTION), ('separate_children', DataType.BOOL), ('reset_children', DataType.BOOL)],
                                              [('geometry', DataType.GEOMETRY)],
                                              [('transform_space', ['ORIGINAL', 'RELATIVE'])]),
    'GeometryNodeObjectInfo': BuiltinNode([('object', DataType.OBJECT), ('as_instance', DataType.BOOL)],
                                          [('location', DataType.VEC3), ('rotation', DataType.VEC3),
                                           ('scale', DataType.VEC3), ('geometry', DataType.GEOMETRY)],
                                          [('transform_space', ['ORIGINAL', 'RELATIVE'])]),
    'ShaderNodeAttribute': BuiltinNode([],
                                       [('color', DataType.RGBA), ('vector', DataType.VEC3),
                                        ('fac', DataType.FLOAT), ('alpha', DataType.FLOAT)],
                                       [('attribute_type', ['GEOMETRY', 'OBJECT', 'INSTANCER'])]),
    'ShaderNodeCameraData': BuiltinNode([],
                                        [('view_vector', DataType.VEC3), ('view_z_depth',
                                                                          DataType.FLOAT), ('view_distance', DataType.FLOAT)],
                                        []),
    'ShaderNodePointInfo': BuiltinNode([],
                                       [('position', DataType.VEC3), ('radius',
                                                                      DataType.FLOAT), ('random', DataType.FLOAT)],
                                       []),
    'GeometryNodeFillCurve': BuiltinNode([('curve', DataType.GEOMETRY)],
                                         [('mesh', DataType.GEOMETRY)],
                                         [('mode', ['TRIANGLES', 'NGONS'])]),
    'FunctionNodeAlignEulerToVector': BuiltinNode([('rotation', DataType.VEC3), ('factor', DataType.FLOAT), ('vector', DataType.VEC3)],
                                                  [('rotation', DataType.VEC3)],
                                                  [('axis', ['X', 'Y', 'Z']), ('pivot_axis', ['AUTO', 'X', 'Y', 'Z'])]),
    'ShaderNodeParticleInfo': BuiltinNode([],
                                          [('index', DataType.FLOAT), ('random', DataType.FLOAT), ('age', DataType.FLOAT), ('lifetime', DataType.FLOAT), (
                                              'location', DataType.VEC3), ('size', DataType.FLOAT), ('velocity', DataType.VEC3), ('angular_velocity', DataType.VEC3)],
                                          []),
    'ShaderNodeTexPointDensity': BuiltinNode([('vector', DataType.VEC3)],
                                             [('color', DataType.RGBA),
                                              ('density', DataType.FLOAT)],
                                             [('point_source', ['PARTICLE_SYSTEM', 'OBJECT']), ('space', ['OBJECT', 'WORLD']), ('interpolation', ['Closest', 'Linear', 'Cubic']), ('particle_color_source', ['PARTICLE_AGE', 'PARTICLE_SPEED', 'PARTICLE_VELOCITY']), ('vertex_color_source', ['VERTEX_COLOR', 'VERTEX_WEIGHT', 'VERTEX_NORMAL'])]),
    'ShaderNodeBrightContrast': BuiltinNode([('color', DataType.RGBA), ('bright', DataType.FLOAT), ('contrast', DataType.FLOAT)],
                                            [('color', DataType.RGBA)],
                                            []),
    'ShaderNodeSeparateColor': BuiltinNode([('color', DataType.RGBA)],
                                           [('red', DataType.FLOAT), ('green',
                                                                      DataType.FLOAT), ('blue', DataType.FLOAT)],
                                           [('mode', ['RGB', 'HSV', 'HSL'])]),
    'GeometryNodeInputID': BuiltinNode([],
                                       [('id', DataType.INT)],
                                       []),
    'GeometryNodeStoreNamedAttribute': BuiltinNode([('geometry', DataType.GEOMETRY), ('name', DataType.STRING), ('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.RGBA), ('value', DataType.BOOL), ('value', DataType.INT)],
                                                   [('geometry', DataType.GEOMETRY)],
                                                   [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'FunctionNodeCombineColor': BuiltinNode([('red', DataType.FLOAT), ('green', DataType.FLOAT), ('blue', DataType.FLOAT), ('alpha', DataType.FLOAT)],
                                            [('color', DataType.RGBA)],
                                            [('mode', ['RGB', 'HSV', 'HSL'])]),
    'GeometryNodeSplineLength': BuiltinNode([],
                                            [('length', DataType.FLOAT),
                                             ('point_count', DataType.INT)],
                                            []),
    'GeometryNodeReverseCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                            [('curve', DataType.GEOMETRY)],
                                            []),
    'GeometryNodeInputSceneTime': BuiltinNode([],
                                              [('seconds', DataType.FLOAT),
                                               ('frame', DataType.FLOAT)],
                                              []),
    'GeometryNodeAttributeStatistic': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('attribute', DataType.FLOAT), ('attribute', DataType.VEC3)],
                                                  [('mean', DataType.FLOAT), ('median', DataType.FLOAT), ('sum', DataType.FLOAT), ('min', DataType.FLOAT), ('max', DataType.FLOAT), ('range', DataType.FLOAT), ('standard_deviation', DataType.FLOAT), ('variance', DataType.FLOAT), (
                                                      'mean', DataType.VEC3), ('median', DataType.VEC3), ('sum', DataType.VEC3), ('min', DataType.VEC3), ('max', DataType.VEC3), ('range', DataType.VEC3), ('standard_deviation', DataType.VEC3), ('variance', DataType.VEC3)],
                                                  [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'GeometryNodeCurveQuadraticBezier': BuiltinNode([('resolution', DataType.INT), ('start', DataType.VEC3), ('middle', DataType.VEC3), ('end', DataType.VEC3)],
                                                    [('curve', DataType.GEOMETRY)],
                                                    []),
    'FunctionNodeInputSpecialCharacters': BuiltinNode([],
                                                      [('line_break', DataType.STRING),
                                                       ('tab', DataType.STRING)],
                                                      []),
    'GeometryNodeInputMeshEdgeAngle': BuiltinNode([],
                                                  [('unsigned_angle', DataType.FLOAT),
                                                   ('signed_angle', DataType.FLOAT)],
                                                  []),
    'GeometryNodeFieldAtIndex': BuiltinNode([('index', DataType.INT), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                            [('value', DataType.FLOAT), ('value', DataType.INT), (
                                                'value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                            [('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'GeometryNodeJoinGeometry': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                            [('geometry', DataType.GEOMETRY)],
                                            []),
    'GeometryNodeCaptureAttribute': BuiltinNode([('geometry', DataType.GEOMETRY), ('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.RGBA), ('value', DataType.BOOL), ('value', DataType.INT)],
                                                [('geometry', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), (
                                                    'attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                                [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'ShaderNodeValToRGB': BuiltinNode([('fac', DataType.FLOAT)],
                                      [('color', DataType.RGBA),
                                       ('alpha', DataType.FLOAT)],
                                      []),
    'FunctionNodeBooleanMath': BuiltinNode([('boolean', DataType.BOOL), ('boolean', DataType.BOOL)],
                                           [('boolean', DataType.BOOL)],
                                           [('operation', ['AND', 'OR', 'NOT', 'NAND', 'NOR', 'XNOR', 'XOR', 'IMPLY', 'NIMPLY'])]),
    'ShaderNodeTexWhiteNoise': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT)],
                                           [('value', DataType.FLOAT),
                                            ('color', DataType.RGBA)],
                                           [('noise_dimensions', ['1D', '2D', '3D', '4D'])]),
    'ShaderNodeBevel': BuiltinNode([('radius', DataType.FLOAT), ('normal', DataType.VEC3)],
                                   [('normal', DataType.VEC3)],
                                   []),
    'ShaderNodeVectorRotate': BuiltinNode([('vector', DataType.VEC3), ('center', DataType.VEC3), ('axis', DataType.VEC3), ('angle', DataType.FLOAT), ('rotation', DataType.VEC3)],
                                          [('vector', DataType.VEC3)],
                                          [('rotation_type', ['AXIS_ANGLE', 'X_AXIS', 'Y_AXIS', 'Z_AXIS', 'EULER_XYZ'])]),
    'GeometryNodeMeshUVSphere': BuiltinNode([('segments', DataType.INT), ('rings', DataType.INT), ('radius', DataType.FLOAT)],
                                            [('mesh', DataType.GEOMETRY)],
                                            []),
    'ShaderNodeVolumePrincipled': BuiltinNode([('color', DataType.RGBA), ('color_attribute', DataType.STRING), ('density', DataType.FLOAT), ('density_attribute', DataType.STRING), ('anisotropy', DataType.FLOAT), ('absorption_color', DataType.RGBA), ('emission_strength', DataType.FLOAT), ('emission_color', DataType.RGBA), ('blackbody_intensity', DataType.FLOAT), ('blackbody_tint', DataType.RGBA), ('temperature', DataType.FLOAT), ('temperature_attribute', DataType.STRING), ('weight', DataType.FLOAT)],
                                              [('volume', DataType.SHADER)],
                                              []),
    'GeometryNodeAccumulateField': BuiltinNode([('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.INT), ('group_index', DataType.INT)],
                                               [('leading', DataType.VEC3), ('leading', DataType.FLOAT), ('leading', DataType.INT), ('trailing', DataType.VEC3), (
                                                   'trailing', DataType.FLOAT), ('trailing', DataType.INT), ('total', DataType.VEC3), ('total', DataType.FLOAT), ('total', DataType.INT)],
                                               [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'FunctionNodeInputBool': BuiltinNode([],
                                         [('boolean', DataType.BOOL)],
                                         []),
    'GeometryNodeIsViewport': BuiltinNode([],
                                          [('is_viewport', DataType.BOOL)],
                                          []),
    'ShaderNodeCombineColor': BuiltinNode([('red', DataType.FLOAT), ('green', DataType.FLOAT), ('blue', DataType.FLOAT)],
                                          [('color', DataType.RGBA)],
                                          [('mode', ['RGB', 'HSV', 'HSL'])]),
    'GeometryNodeCurveSplineType': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                               [('curve', DataType.GEOMETRY)],
                                               [('spline_type', ['CATMULL_ROM', 'POLY', 'BEZIER', 'NURBS'])]),
    'GeometryNodeFieldOnDomain': BuiltinNode([('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                             [('value', DataType.FLOAT), ('value', DataType.INT), (
                                                 'value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                             [('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'GeometryNodeInputTangent': BuiltinNode([],
                                            [('tangent', DataType.VEC3)],
                                            []),
    'GeometryNodeInputPosition': BuiltinNode([],
                                             [('position', DataType.VEC3)],
                                             []),
    'GeometryNodeStringJoin': BuiltinNode([('delimiter', DataType.STRING), ('strings', DataType.STRING)],
                                          [('string', DataType.STRING)],
                                          []),
    'ShaderNodeNormal': BuiltinNode([('normal', DataType.VEC3)],
                                    [('normal', DataType.VEC3),
                                     ('dot', DataType.FLOAT)],
                                    []),
    'GeometryNodeInputSplineCyclic': BuiltinNode([],
                                                 [('cyclic', DataType.BOOL)],
                                                 []),
    'ShaderNodeMapping': BuiltinNode([('vector', DataType.VEC3), ('location', DataType.VEC3), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                     [('vector', DataType.VEC3)],
                                     [('vector_type', ['POINT', 'TEXTURE', 'VECTOR', 'NORMAL'])]),
    'ShaderNodeScript': BuiltinNode([],
                                    [],
                                    [('mode', ['INTERNAL', 'EXTERNAL'])]),
    'ShaderNodeMixRGB': BuiltinNode([('fac', DataType.FLOAT), ('color1', DataType.RGBA), ('color2', DataType.RGBA)],
                                    [('color', DataType.RGBA)],
                                    [('blend_type', ['MIX', 'DARKEN', 'MULTIPLY', 'BURN', 'LIGHTEN', 'SCREEN', 'DODGE', 'ADD', 'OVERLAY', 'SOFT_LIGHT', 'LINEAR_LIGHT', 'DIFFERENCE', 'SUBTRACT', 'DIVIDE', 'HUE', 'SATURATION', 'COLOR', 'VALUE'])]),
    'GeometryNodeMergeByDistance': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('distance', DataType.FLOAT)],
                                               [('geometry', DataType.GEOMETRY)],
                                               [('mode', ['ALL', 'CONNECTED'])]),
    'GeometryNodeSetShadeSmooth': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('shade_smooth', DataType.BOOL)],
                                              [('geometry', DataType.GEOMETRY)],
                                              []),
    'ShaderNodeUVMap': BuiltinNode([],
                                   [('uv', DataType.VEC3)],
                                   []),
    'GeometryNodeSetMaterial': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('material', DataType.MATERIAL)],
                                           [('geometry', DataType.GEOMETRY)],
                                           []),
    'GeometryNodeInputMaterial': BuiltinNode([],
                                             [('material', DataType.MATERIAL)],
                                             []),
    'GeometryNodeSetMaterialIndex': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('material_index', DataType.INT)],
                                                [('geometry', DataType.GEOMETRY)],
                                                []),
    'GeometryNodeMeshToCurve': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                           [('curve', DataType.GEOMETRY)],
                                           []),
    'ShaderNodeTexNoise': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('detail', DataType.FLOAT), ('roughness', DataType.FLOAT), ('distortion', DataType.FLOAT)],
                                      [('fac', DataType.FLOAT),
                                       ('color', DataType.RGBA)],
                                      [('noise_dimensions', ['1D', '2D', '3D', '4D'])]),
    'ShaderNodeSeparateXYZ': BuiltinNode([('vector', DataType.VEC3)],
                                         [('x', DataType.FLOAT), ('y',
                                                                  DataType.FLOAT), ('z', DataType.FLOAT)],
                                         []),
    'FunctionNodeInputInt': BuiltinNode([],
                                        [('integer', DataType.INT)],
                                        []),
    'GeometryNodeVolumeCube': BuiltinNode([('density', DataType.FLOAT), ('background', DataType.FLOAT), ('min', DataType.VEC3), ('max', DataType.VEC3), ('resolution_x', DataType.INT), ('resolution_y', DataType.INT), ('resolution_z', DataType.INT)],
                                          [('volume', DataType.GEOMETRY)],
                                          []),
    'GeometryNodeRealizeInstances': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                [('geometry', DataType.GEOMETRY)],
                                                []),
    'GeometryNodeMeshIcoSphere': BuiltinNode([('radius', DataType.FLOAT), ('subdivisions', DataType.INT)],
                                             [('mesh', DataType.GEOMETRY)],
                                             []),
    'ShaderNodeWireframe': BuiltinNode([('size', DataType.FLOAT)],
                                       [('fac', DataType.FLOAT)],
                                       []),
    'GeometryNodeInputMeshVertexNeighbors': BuiltinNode([],
                                                        [('vertex_count', DataType.INT),
                                                         ('face_count', DataType.INT)],
                                                        []),
    'FunctionNodeInputColor': BuiltinNode([],
                                          [('color', DataType.RGBA)],
                                          []),
    'ShaderNodeAmbientOcclusion': BuiltinNode([('color', DataType.RGBA), ('distance', DataType.FLOAT), ('normal', DataType.VEC3)],
                                              [('color', DataType.RGBA),
                                               ('ao', DataType.FLOAT)],
                                              []),
    'GeometryNodeInputNormal': BuiltinNode([],
                                           [('normal', DataType.VEC3)],
                                           []),
    'GeometryNodeVolumeToMesh': BuiltinNode([('volume', DataType.GEOMETRY), ('voxel_size', DataType.FLOAT), ('voxel_amount', DataType.FLOAT), ('threshold', DataType.FLOAT), ('adaptivity', DataType.FLOAT)],
                                            [('mesh', DataType.GEOMETRY)],
                                            [('resolution_mode', ['GRID', 'VOXEL_AMOUNT', 'VOXEL_SIZE'])]),
    'ShaderNodeTexWave': BuiltinNode([('vector', DataType.VEC3), ('scale', DataType.FLOAT), ('distortion', DataType.FLOAT), ('detail', DataType.FLOAT), ('detail_scale', DataType.FLOAT), ('detail_roughness', DataType.FLOAT), ('phase_offset', DataType.FLOAT)],
                                     [('color', DataType.RGBA),
                                      ('fac', DataType.FLOAT)],
                                     [('wave_type', ['BANDS', 'RINGS']), ('bands_direction', ['X', 'Y', 'Z', 'DIAGONAL']), ('rings_direction', ['X', 'Y', 'Z', 'SPHERICAL']), ('wave_profile', ['SIN', 'SAW', 'TRI'])]),
    'ShaderNodeVectorDisplacement': BuiltinNode([('vector', DataType.RGBA), ('midlevel', DataType.FLOAT), ('scale', DataType.FLOAT)],
                                                [('displacement', DataType.VEC3)],
                                                [('space', ['TANGENT', 'OBJECT', 'WORLD'])]),
    'ShaderNodeOutputAOV': BuiltinNode([('color', DataType.RGBA), ('value', DataType.FLOAT)],
                                       [],
                                       []),
    'ShaderNodeClamp': BuiltinNode([('value', DataType.FLOAT), ('min', DataType.FLOAT), ('max', DataType.FLOAT)],
                                   [('result', DataType.FLOAT)],
                                   [('clamp_type', ['MINMAX', 'RANGE'])]),
    'GeometryNodeCurvePrimitiveLine': BuiltinNode([('start', DataType.VEC3), ('end', DataType.VEC3), ('direction', DataType.VEC3), ('length', DataType.FLOAT)],
                                                  [('curve', DataType.GEOMETRY)],
                                                  [('mode', ['POINTS', 'DIRECTION'])]),
    'ShaderNodeLayerWeight': BuiltinNode([('blend', DataType.FLOAT), ('normal', DataType.VEC3)],
                                         [('fresnel', DataType.FLOAT),
                                          ('facing', DataType.FLOAT)],
                                         []),
    'GeometryNodeInputMeshFaceArea': BuiltinNode([],
                                                 [('area', DataType.FLOAT)],
                                                 []),
    'GeometryNodePoints': BuiltinNode([('count', DataType.INT), ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                      [('geometry', DataType.GEOMETRY)],
                                      []),
    'GeometryNodeExtrudeMesh': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('offset', DataType.VEC3), ('offset_scale', DataType.FLOAT), ('individual', DataType.BOOL)],
                                           [('mesh', DataType.GEOMETRY), ('top',
                                                                          DataType.BOOL), ('side', DataType.BOOL)],
                                           [('mode', ['VERTICES', 'EDGES', 'FACES'])]),
    'GeometryNodeInputSplineResolution': BuiltinNode([],
                                                     [('resolution', DataType.INT)],
                                                     []),
    'GeometryNodeSwitch': BuiltinNode([('switch', DataType.BOOL), ('switch', DataType.BOOL), ('false', DataType.FLOAT), ('true', DataType.FLOAT), ('false', DataType.INT), ('true', DataType.INT), ('false', DataType.BOOL), ('true', DataType.BOOL), ('false', DataType.VEC3), ('true', DataType.VEC3), ('false', DataType.RGBA), ('true', DataType.RGBA), ('false', DataType.STRING), ('true', DataType.STRING), ('false', DataType.GEOMETRY), ('true', DataType.GEOMETRY), ('false', DataType.OBJECT), ('true', DataType.OBJECT), ('false', DataType.COLLECTION), ('true', DataType.COLLECTION), ('false', DataType.TEXTURE), ('true', DataType.TEXTURE), ('false', DataType.MATERIAL), ('true', DataType.MATERIAL), ('false', DataType.IMAGE), ('true', DataType.IMAGE)],
                                      [('output', DataType.FLOAT), ('output', DataType.INT), ('output', DataType.BOOL), ('output', DataType.VEC3), ('output', DataType.RGBA), ('output', DataType.STRING), (
                                          'output', DataType.GEOMETRY), ('output', DataType.OBJECT), ('output', DataType.COLLECTION), ('output', DataType.TEXTURE), ('output', DataType.MATERIAL), ('output', DataType.IMAGE)],
                                      [('input_type', ['FLOAT', 'INT', 'BOOLEAN', 'VECTOR', 'STRING', 'RGBA', 'OBJECT', 'IMAGE', 'GEOMETRY', 'COLLECTION', 'TEXTURE', 'MATERIAL'])]),
    'ShaderNodeFloatCurve': BuiltinNode([('factor', DataType.FLOAT), ('value', DataType.FLOAT)],
                                        [('value', DataType.FLOAT)],
                                        []),
    'ShaderNodeNewGeometry': BuiltinNode([],
                                         [('position', DataType.VEC3), ('normal', DataType.VEC3), ('tangent', DataType.VEC3), ('true_normal', DataType.VEC3), ('incoming', DataType.VEC3), (
                                             'parametric', DataType.VEC3), ('backfacing', DataType.FLOAT), ('pointiness', DataType.FLOAT), ('random_per_island', DataType.FLOAT)],
                                         []),
    'GeometryNodeMeshToPoints': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                            [('points', DataType.GEOMETRY)],
                                            [('mode', ['VERTICES', 'EDGES', 'FACES', 'CORNERS'])]),
    'GeometryNodeSetCurveHandlePositions': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('offset', DataType.VEC3)],
                                                       [('curve', DataType.GEOMETRY)],
                                                       [('mode', ['LEFT', 'RIGHT'])]),
    'ShaderNodeVectorCurve': BuiltinNode([('fac', DataType.FLOAT), ('vector', DataType.VEC3)],
                                         [('vector', DataType.VEC3)],
                                         []),
    'FunctionNodeRotateEuler': BuiltinNode([('rotation', DataType.VEC3), ('rotate_by', DataType.VEC3), ('axis', DataType.VEC3), ('angle', DataType.FLOAT)],
                                           [('rotation', DataType.VEC3)],
                                           [('type', ['AXIS_ANGLE', 'EULER']), ('space', ['OBJECT', 'LOCAL'])]),
    'GeometryNodeInstancesToPoints': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                                 [('points', DataType.GEOMETRY)],
                                                 []),
    'GeometryNodeMeshCube': BuiltinNode([('size', DataType.VEC3), ('vertices_x', DataType.INT), ('vertices_y', DataType.INT), ('vertices_z', DataType.INT)],
                                        [('mesh', DataType.GEOMETRY)],
                                        []),
    'GeometryNodeTransform': BuiltinNode([('geometry', DataType.GEOMETRY), ('translation', DataType.VEC3), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                         [('geometry', DataType.GEOMETRY)],
                                         []),
    'GeometryNodeRotateInstances': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('rotation', DataType.VEC3), ('pivot_point', DataType.VEC3), ('local_space', DataType.BOOL)],
                                               [('instances', DataType.GEOMETRY)],
                                               []),
    'ShaderNodeTangent': BuiltinNode([],
                                     [('tangent', DataType.VEC3)],
                                     [('direction_type', ['RADIAL', 'UV_MAP']), ('axis', ['X', 'Y', 'Z'])]),
    'ShaderNodeTexMagic': BuiltinNode([('vector', DataType.VEC3), ('scale', DataType.FLOAT), ('distortion', DataType.FLOAT)],
                                      [('color', DataType.RGBA),
                                       ('fac', DataType.FLOAT)],
                                      []),
    'GeometryNodeRemoveAttribute': BuiltinNode([('geometry', DataType.GEOMETRY), ('name', DataType.STRING)],
                                               [('geometry', DataType.GEOMETRY)],
                                               []),
    'GeometryNodeSetSplineCyclic': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('cyclic', DataType.BOOL)],
                                               [('geometry', DataType.GEOMETRY)],
                                               []),
    'GeometryNodeInputMeshFaceIsPlanar': BuiltinNode([('threshold', DataType.FLOAT)],
                                                     [('planar', DataType.BOOL)],
                                                     []),
    'GeometryNodeDeleteGeometry': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                              [('geometry', DataType.GEOMETRY)],
                                              [('mode', ['ALL', 'EDGE_FACE', 'ONLY_FACE']), ('domain', ['POINT', 'EDGE', 'FACE', 'CURVE', 'INSTANCE'])]),
    'GeometryNodeMeshBoolean': BuiltinNode([('mesh_1', DataType.GEOMETRY), ('mesh_2', DataType.GEOMETRY), ('self_intersection', DataType.BOOL), ('hole_tolerant', DataType.BOOL)],
                                           [('mesh', DataType.GEOMETRY),
                                            ('intersecting_edges', DataType.BOOL)],
                                           [('operation', ['INTERSECT', 'UNION', 'DIFFERENCE'])]),
    'ShaderNodeWavelength': BuiltinNode([('wavelength', DataType.FLOAT)],
                                        [('color', DataType.RGBA)],
                                        []),
    'ShaderNodeDisplacement': BuiltinNode([('height', DataType.FLOAT), ('midlevel', DataType.FLOAT), ('scale', DataType.FLOAT), ('normal', DataType.VEC3)],
                                          [('displacement', DataType.VEC3)],
                                          [('space', ['OBJECT', 'WORLD'])]),
    'GeometryNodeDuplicateElements': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('amount', DataType.INT)],
                                                 [('geometry', DataType.GEOMETRY),
                                                  ('duplicate_index', DataType.INT)],
                                                 [('domain', ['POINT', 'EDGE', 'FACE', 'SPLINE', 'INSTANCE'])]),
    'GeometryNodeCurveLength': BuiltinNode([('curve', DataType.GEOMETRY)],
                                           [('length', DataType.FLOAT)],
                                           []),
    'GeometryNodeSetCurveTilt': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('tilt', DataType.FLOAT)],
                                            [('curve', DataType.GEOMETRY)],
                                            []),
    'ShaderNodeBump': BuiltinNode([('strength', DataType.FLOAT), ('distance', DataType.FLOAT), ('height', DataType.FLOAT), ('normal', DataType.VEC3)],
                                  [('normal', DataType.VEC3)],
                                  []),
    'GeometryNodeConvexHull': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                          [('convex_hull', DataType.GEOMETRY)],
                                          []),
    'GeometryNodeInputNamedAttribute': BuiltinNode([('name', DataType.STRING)],
                                                   [('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), (
                                                       'attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                                   [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'GeometryNodeTriangulate': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('minimum_vertices', DataType.INT)],
                                           [('mesh', DataType.GEOMETRY)],
                                           [('quad_method', ['BEAUTY', 'FIXED', 'FIXED_ALTERNATE', 'SHORTEST_DIAGONAL', 'LONGEST_DIAGONAL']), ('ngon_method', ['BEAUTY', 'CLIP'])]),
    'FunctionNodeInputVector': BuiltinNode([],
                                           [('vector', DataType.VEC3)],
                                           []),
    'GeometryNodeMeshCircle': BuiltinNode([('vertices', DataType.INT), ('radius', DataType.FLOAT)],
                                          [('mesh', DataType.GEOMETRY)],
                                          [('fill_type', ['NONE', 'NGON', 'TRIANGLE_FAN'])]),
    'ShaderNodeTexIES': BuiltinNode([('vector', DataType.VEC3), ('strength', DataType.FLOAT)],
                                    [('fac', DataType.FLOAT)],
                                    [('mode', ['INTERNAL', 'EXTERNAL'])]),
    'ShaderNodeTexEnvironment': BuiltinNode([('vector', DataType.VEC3)],
                                            [('color', DataType.RGBA)],
                                            [('projection', ['EQUIRECTANGULAR', 'MIRROR_BALL']), ('interpolation', ['Linear', 'Closest', 'Cubic', 'Smart'])]),
    'GeometryNodeSetPosition': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('offset', DataType.VEC3)],
                                           [('geometry', DataType.GEOMETRY)],
                                           []),
    'ShaderNodeInvert': BuiltinNode([('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                    [('color', DataType.RGBA)],
                                    []),
    'GeometryNodeImageTexture': BuiltinNode([('image', DataType.IMAGE), ('vector', DataType.VEC3), ('frame', DataType.INT)],
                                            [('color', DataType.RGBA),
                                             ('alpha', DataType.FLOAT)],
                                            [('interpolation', ['Linear', 'Closest', 'Cubic']), ('extension', ['REPEAT', 'EXTEND', 'CLIP'])]),
    'GeometryNodeCurveEndpointSelection': BuiltinNode([('start_size', DataType.INT), ('end_size', DataType.INT)],
                                                      [('selection', DataType.BOOL)],
                                                      []),
    'ShaderNodeCombineXYZ': BuiltinNode([('x', DataType.FLOAT), ('y', DataType.FLOAT), ('z', DataType.FLOAT)],
                                        [('vector', DataType.VEC3)],
                                        []),
    'ShaderNodeVectorMath': BuiltinNode([('vector', DataType.VEC3), ('vector', DataType.VEC3), ('vector', DataType.VEC3), ('scale', DataType.FLOAT)],
                                        [('vector', DataType.VEC3),
                                         ('value', DataType.FLOAT)],
                                        [('operation', ['ADD', 'SUBTRACT', 'MULTIPLY', 'DIVIDE', 'MULTIPLY_ADD', 'CROSS_PRODUCT', 'PROJECT', 'REFLECT', 'REFRACT', 'FACEFORWARD', 'DOT_PRODUCT', 'DISTANCE', 'LENGTH', 'SCALE', 'NORMALIZE', 'ABSOLUTE', 'MINIMUM', 'MAXIMUM', 'FLOOR', 'CEIL', 'FRACTION', 'MODULO', 'WRAP', 'SNAP', 'SINE', 'COSINE', 'TANGENT'])]),
    'GeometryNodeSeparateGeometry': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                                [('selection', DataType.GEOMETRY),
                                                 ('inverted', DataType.GEOMETRY)],
                                                [('domain', ['POINT', 'EDGE', 'FACE', 'CURVE', 'INSTANCE'])]),
    'GeometryNodeCurveSetHandles': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                               [('curve', DataType.GEOMETRY)],
                                               [('handle_type', ['FREE', 'AUTO', 'VECTOR', 'ALIGN']), ('mode', ['LEFT', 'RIGHT'])]),
    'ShaderNodeTexSky': BuiltinNode([('vector', DataType.VEC3)],
                                    [('color', DataType.RGBA)],
                                    [('sky_type', ['PREETHAM', 'HOSEK_WILKIE', 'NISHITA'])]),
    'GeometryNodeInputRadius': BuiltinNode([],
                                           [('radius', DataType.FLOAT)],
                                           []),
    'GeometryNodeDualMesh': BuiltinNode([('mesh', DataType.GEOMETRY), ('keep_boundaries', DataType.BOOL)],
                                        [('dual_mesh', DataType.GEOMETRY)],
                                        []),
    'GeometryNodeMeshCylinder': BuiltinNode([('vertices', DataType.INT), ('side_segments', DataType.INT), ('fill_segments', DataType.INT), ('radius', DataType.FLOAT), ('depth', DataType.FLOAT)],
                                            [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL),
                                             ('side', DataType.BOOL), ('bottom', DataType.BOOL)],
                                            [('fill_type', ['NONE', 'NGON', 'TRIANGLE_FAN'])]),
    'GeometryNodeSetCurveRadius': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('radius', DataType.FLOAT)],
                                              [('curve', DataType.GEOMETRY)],
                                              []),
    'GeometryNodeCurvePrimitiveCircle': BuiltinNode([('resolution', DataType.INT), ('point_1', DataType.VEC3), ('point_2', DataType.VEC3), ('point_3', DataType.VEC3), ('radius', DataType.FLOAT)],
                                                    [('curve', DataType.GEOMETRY),
                                                     ('center', DataType.VEC3)],
                                                    [('mode', ['POINTS', 'RADIUS'])]),
    'GeometryNodeTrimCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('start', DataType.FLOAT), ('end', DataType.FLOAT), ('start', DataType.FLOAT), ('end', DataType.FLOAT)],
                                         [('curve', DataType.GEOMETRY)],
                                         [('mode', ['FACTOR', 'LENGTH'])]),
    'GeometryNodeSubdivideCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('cuts', DataType.INT)],
                                              [('curve', DataType.GEOMETRY)],
                                              []),
    'GeometryNodeInputCurveHandlePositions': BuiltinNode([('relative', DataType.BOOL)],
                                                         [('left', DataType.VEC3),
                                                          ('right', DataType.VEC3)],
                                                         []),
    'GeometryNodeInputShadeSmooth': BuiltinNode([],
                                                [('smooth', DataType.BOOL)],
                                                []),
    'GeometryNodeInputCurveTilt': BuiltinNode([],
                                              [('tilt', DataType.FLOAT)],
                                              []),
    'GeometryNodeSubdivisionSurface': BuiltinNode([('mesh', DataType.GEOMETRY), ('level', DataType.INT), ('edge_crease', DataType.FLOAT), ('vertex_crease', DataType.FLOAT)],
                                                  [('mesh', DataType.GEOMETRY)],
                                                  [('uv_smooth', ['NONE', 'PRESERVE_CORNERS', 'PRESERVE_CORNERS_AND_JUNCTIONS', 'PRESERVE_CORNERS_JUNCTIONS_AND_CONCAVE', 'PRESERVE_BOUNDARIES', 'SMOOTH_ALL']), ('boundary_smooth', ['PRESERVE_CORNERS', 'ALL'])]),
    'ShaderNodeTexBrick': BuiltinNode([('vector', DataType.VEC3), ('color1', DataType.RGBA), ('color2', DataType.RGBA), ('mortar', DataType.RGBA), ('scale', DataType.FLOAT), ('mortar_size', DataType.FLOAT), ('mortar_smooth', DataType.FLOAT), ('bias', DataType.FLOAT), ('brick_width', DataType.FLOAT), ('row_height', DataType.FLOAT)],
                                      [('color', DataType.RGBA),
                                       ('fac', DataType.FLOAT)],
                                      []),
    'ShaderNodeRGBCurve': BuiltinNode([('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                      [('color', DataType.RGBA)],
                                      []),
    'ShaderNodeLightPath': BuiltinNode([],
                                       [('is_camera_ray', DataType.FLOAT), ('is_shadow_ray', DataType.FLOAT), ('is_diffuse_ray', DataType.FLOAT), ('is_glossy_ray', DataType.FLOAT), ('is_singular_ray', DataType.FLOAT), ('is_reflection_ray', DataType.FLOAT), (
                                           'is_transmission_ray', DataType.FLOAT), ('ray_length', DataType.FLOAT), ('ray_depth', DataType.FLOAT), ('diffuse_depth', DataType.FLOAT), ('glossy_depth', DataType.FLOAT), ('transparent_depth', DataType.FLOAT), ('transmission_depth', DataType.FLOAT)],
                                       []),
    'GeometryNodeMaterialSelection': BuiltinNode([('material', DataType.MATERIAL)],
                                                 [('selection', DataType.BOOL)],
                                                 []),
    'ShaderNodeTexCoord': BuiltinNode([],
                                      [('generated', DataType.VEC3), ('normal', DataType.VEC3), ('uv', DataType.VEC3), ('object', DataType.VEC3), (
                                          'camera', DataType.VEC3), ('window', DataType.VEC3), ('reflection', DataType.VEC3)],
                                      []),
    'GeometryNodeGeometryToInstance': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                  [('instances', DataType.GEOMETRY)],
                                                  []),
    'ShaderNodeHairInfo': BuiltinNode([],
                                      [('is_strand', DataType.FLOAT), ('intercept', DataType.FLOAT), ('length', DataType.FLOAT), (
                                          'thickness', DataType.FLOAT), ('tangent_normal', DataType.VEC3), ('random', DataType.FLOAT)],
                                      []),
    'GeometryNodeFilletCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('count', DataType.INT), ('radius', DataType.FLOAT), ('limit_radius', DataType.BOOL)],
                                           [('curve', DataType.GEOMETRY)],
                                           [('mode', ['BEZIER', 'POLY'])]),
    'GeometryNodeResampleCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('count', DataType.INT), ('length', DataType.FLOAT)],
                                             [('curve', DataType.GEOMETRY)],
                                             [('mode', ['EVALUATED', 'COUNT', 'LENGTH'])]),
    'GeometryNodeStringToCurves': BuiltinNode([('string', DataType.STRING), ('size', DataType.FLOAT), ('character_spacing', DataType.FLOAT), ('word_spacing', DataType.FLOAT), ('line_spacing', DataType.FLOAT), ('text_box_width', DataType.FLOAT), ('text_box_height', DataType.FLOAT)],
                                              [('curve_instances', DataType.GEOMETRY), ('remainder', DataType.STRING), (
                                                  'line', DataType.INT), ('pivot_point', DataType.VEC3)],
                                              [('overflow', ['OVERFLOW', 'SCALE_TO_FIT', 'TRUNCATE']), ('align_x', ['LEFT', 'CENTER', 'RIGHT', 'JUSTIFY', 'FLUSH']), ('align_y', ['TOP_BASELINE', 'TOP', 'MIDDLE', 'BOTTOM_BASELINE', 'BOTTOM']), ('pivot_mode', ['MIDPOINT', 'TOP_LEFT', 'TOP_CENTER', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_CENTER', 'BOTTOM_RIGHT'])]),
    'GeometryNodeInputMeshEdgeVertices': BuiltinNode([],
                                                     [('vertex_index_1', DataType.INT), ('vertex_index_2', DataType.INT), (
                                                         'position_1', DataType.VEC3), ('position_2', DataType.VEC3)],
                                                     []),
    'GeometryNodeRaycast': BuiltinNode([('target_geometry', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT), ('source_position', DataType.VEC3), ('ray_direction', DataType.VEC3), ('ray_length', DataType.FLOAT)],
                                       [('is_hit', DataType.BOOL), ('hit_position', DataType.VEC3), ('hit_normal', DataType.VEC3), ('hit_distance', DataType.FLOAT), (
                                           'attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                       [('mapping', ['INTERPOLATED', 'NEAREST']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'ShaderNodeVertexColor': BuiltinNode([],
                                         [('color', DataType.RGBA),
                                          ('alpha', DataType.FLOAT)],
                                         []),
    'GeometryNodeInstanceOnPoints': BuiltinNode([('points', DataType.GEOMETRY), ('selection', DataType.BOOL), ('instance', DataType.GEOMETRY), ('pick_instance', DataType.BOOL), ('instance_index', DataType.INT), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                                [('instances', DataType.GEOMETRY)],
                                                []),
    'ShaderNodeMapRange': BuiltinNode([('value', DataType.FLOAT), ('from_min', DataType.FLOAT), ('from_max', DataType.FLOAT), ('to_min', DataType.FLOAT), ('to_max', DataType.FLOAT), ('steps', DataType.FLOAT), ('vector', DataType.VEC3), ('from_min', DataType.VEC3), ('from_max', DataType.VEC3), ('to_min', DataType.VEC3), ('to_max', DataType.VEC3), ('steps', DataType.VEC3)],
                                      [('result', DataType.FLOAT),
                                       ('vector', DataType.VEC3)],
                                      [('interpolation_type', ['LINEAR', 'STEPPED', 'SMOOTHSTEP', 'SMOOTHERSTEP']), ('data_type', ['FLOAT', 'FLOAT_VECTOR'])]),
    'FunctionNodeSeparateColor': BuiltinNode([('color', DataType.RGBA)],
                                             [('red', DataType.FLOAT), ('green', DataType.FLOAT),
                                              ('blue', DataType.FLOAT), ('alpha', DataType.FLOAT)],
                                             [('mode', ['RGB', 'HSV', 'HSL'])]),
    'GeometryNodeMeshLine': BuiltinNode([('count', DataType.INT), ('resolution', DataType.FLOAT), ('start_location', DataType.VEC3), ('offset', DataType.VEC3)],
                                        [('mesh', DataType.GEOMETRY)],
                                        [('mode', ['OFFSET', 'END_POINTS']), ('count_mode', ['TOTAL', 'RESOLUTION'])]),
    'ShaderNodeVectorTransform': BuiltinNode([('vector', DataType.VEC3)],
                                             [('vector', DataType.VEC3)],
                                             [('vector_type', ['POINT', 'VECTOR', 'NORMAL']), ('convert_from', ['WORLD', 'OBJECT', 'CAMERA']), ('convert_to', ['WORLD', 'OBJECT', 'CAMERA'])]),
    'GeometryNodeCurveSpiral': BuiltinNode([('resolution', DataType.INT), ('rotations', DataType.FLOAT), ('start_radius', DataType.FLOAT), ('end_radius', DataType.FLOAT), ('height', DataType.FLOAT), ('reverse', DataType.BOOL)],
                                           [('curve', DataType.GEOMETRY)],
                                           []),
    'GeometryNodePointsToVertices': BuiltinNode([('points', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                                [('mesh', DataType.GEOMETRY)],
                                                []),
    'GeometryNodeAttributeTransfer': BuiltinNode([('source', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT), ('source_position', DataType.VEC3), ('index', DataType.INT)],
                                                 [('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), (
                                                     'attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)],
                                                 [('mapping', ['NEAREST_FACE_INTERPOLATED', 'NEAREST', 'INDEX']), ('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8']), ('domain', ['POINT', 'EDGE', 'FACE', 'CORNER', 'CURVE', 'INSTANCE'])]),
    'GeometryNodeSeparateComponents': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                  [('mesh', DataType.GEOMETRY), ('point_cloud', DataType.GEOMETRY), (
                                                      'curve', DataType.GEOMETRY), ('volume', DataType.GEOMETRY), ('instances', DataType.GEOMETRY)],
                                                  []),
    'GeometryNodeCurveStar': BuiltinNode([('points', DataType.INT), ('inner_radius', DataType.FLOAT), ('outer_radius', DataType.FLOAT), ('twist', DataType.FLOAT)],
                                         [('curve', DataType.GEOMETRY),
                                          ('outer_points', DataType.BOOL)],
                                         []),
    'GeometryNodeSetPointRadius': BuiltinNode([('points', DataType.GEOMETRY), ('selection', DataType.BOOL), ('radius', DataType.FLOAT)],
                                              [('points', DataType.GEOMETRY)],
                                              []),
    'ShaderNodeGamma': BuiltinNode([('color', DataType.RGBA), ('gamma', DataType.FLOAT)],
                                   [('color', DataType.RGBA)],
                                   []),
    'ShaderNodeValue': BuiltinNode([],
                                   [('value', DataType.FLOAT)],
                                   []),
    'ShaderNodeHueSaturation': BuiltinNode([('hue', DataType.FLOAT), ('saturation', DataType.FLOAT), ('value', DataType.FLOAT), ('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                           [('color', DataType.RGBA)],
                                           []),
    'ShaderNodeVolumeInfo': BuiltinNode([],
                                        [('color', DataType.RGBA), ('density', DataType.FLOAT),
                                         ('flame', DataType.FLOAT), ('temperature', DataType.FLOAT)],
                                        []),
    'FunctionNodeSliceString': BuiltinNode([('string', DataType.STRING), ('position', DataType.INT), ('length', DataType.INT)],
                                           [('string', DataType.STRING)],
                                           []),
    'ShaderNodeRGBToBW': BuiltinNode([('color', DataType.RGBA)],
                                     [('val', DataType.FLOAT)],
                                     []),
    'ShaderNodeBlackbody': BuiltinNode([('temperature', DataType.FLOAT)],
                                       [('color', DataType.RGBA)],
                                       []),
    'GeometryNodeCurvePrimitiveQuadrilateral': BuiltinNode([('width', DataType.FLOAT), ('height', DataType.FLOAT), ('bottom_width', DataType.FLOAT), ('top_width', DataType.FLOAT), ('offset', DataType.FLOAT), ('bottom_height', DataType.FLOAT), ('top_height', DataType.FLOAT), ('point_1', DataType.VEC3), ('point_2', DataType.VEC3), ('point_3', DataType.VEC3), ('point_4', DataType.VEC3)],
                                                           [('curve', DataType.GEOMETRY)],
                                                           [('mode', ['RECTANGLE', 'PARALLELOGRAM', 'TRAPEZOID', 'KITE', 'POINTS'])]),
    'GeometryNodeInputMeshFaceNeighbors': BuiltinNode([],
                                                      [('vertex_count', DataType.INT),
                                                       ('face_count', DataType.INT)],
                                                      []),
    'ShaderNodeObjectInfo': BuiltinNode([],
                                        [('location', DataType.VEC3), ('color', DataType.RGBA), ('alpha', DataType.FLOAT), (
                                            'object_index', DataType.FLOAT), ('material_index', DataType.FLOAT), ('random', DataType.FLOAT)],
                                        []),
    'GeometryNodeInputInstanceRotation': BuiltinNode([],
                                                     [('rotation', DataType.VEC3)],
                                                     []),
    'ShaderNodeTexGradient': BuiltinNode([('vector', DataType.VEC3)],
                                         [('color', DataType.RGBA),
                                          ('fac', DataType.FLOAT)],
                                         [('gradient_type', ['LINEAR', 'QUADRATIC', 'EASING', 'DIAGONAL', 'SPHERICAL', 'QUADRATIC_SPHERE', 'RADIAL'])]),
    'FunctionNodeInputString': BuiltinNode([],
                                           [('string', DataType.STRING)],
                                           []),
    'FunctionNodeCompare': BuiltinNode([('a', DataType.FLOAT), ('b', DataType.FLOAT), ('a', DataType.INT), ('b', DataType.INT), ('a', DataType.VEC3), ('b', DataType.VEC3), ('a', DataType.RGBA), ('b', DataType.RGBA), ('a', DataType.STRING), ('b', DataType.STRING), ('c', DataType.FLOAT), ('angle', DataType.FLOAT), ('epsilon', DataType.FLOAT)],
                                       [('result', DataType.BOOL)],
                                       [('operation', ['LESS_THAN', 'LESS_EQUAL', 'GREATER_THAN', 'GREATER_EQUAL', 'EQUAL', 'NOT_EQUAL', 'BRIGHTER', 'DARKER']), ('data_type', ['FLOAT', 'INT', 'BOOLEAN', 'VECTOR', 'STRING', 'RGBA', 'OBJECT', 'IMAGE', 'GEOMETRY', 'COLLECTION', 'TEXTURE', 'MATERIAL']), ('mode', ['ELEMENT', 'LENGTH', 'AVERAGE', 'DOT_PRODUCT', 'DIRECTION'])]),
    'ShaderNodeTexMusgrave': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('detail', DataType.FLOAT), ('dimension', DataType.FLOAT), ('lacunarity', DataType.FLOAT), ('offset', DataType.FLOAT), ('gain', DataType.FLOAT)],
                                         [('fac', DataType.FLOAT)],
                                         [('musgrave_dimensions', ['1D', '2D', '3D', '4D']), ('musgrave_type', ['MULTIFRACTAL', 'RIDGED_MULTIFRACTAL', 'HYBRID_MULTIFRACTAL', 'FBM', 'HETERO_TERRAIN'])]),
    'ShaderNodeTexImage': BuiltinNode([('vector', DataType.VEC3)],
                                      [('color', DataType.RGBA),
                                       ('alpha', DataType.FLOAT)],
                                      [('projection', ['FLAT', 'BOX', 'SPHERE', 'TUBE']), ('interpolation', ['Linear', 'Closest', 'Cubic', 'Smart']), ('extension', ['REPEAT', 'EXTEND', 'CLIP'])]),
    'ShaderNodeNormalMap': BuiltinNode([('strength', DataType.FLOAT), ('color', DataType.RGBA)],
                                       [('normal', DataType.VEC3)],
                                       [('space', ['TANGENT', 'OBJECT', 'WORLD', 'BLENDER_OBJECT', 'BLENDER_WORLD'])]),
    'ShaderNodeMath': BuiltinNode([('value', DataType.FLOAT), ('value', DataType.FLOAT), ('value', DataType.FLOAT)],
                                  [('value', DataType.FLOAT)],
                                  [('operation', ['ADD', 'SUBTRACT', 'MULTIPLY', 'DIVIDE', 'MULTIPLY_ADD', 'POWER', 'LOGARITHM', 'SQRT', 'INVERSE_SQRT', 'ABSOLUTE', 'EXPONENT', 'MINIMUM', 'MAXIMUM', 'LESS_THAN', 'GREATER_THAN', 'SIGN', 'COMPARE', 'SMOOTH_MIN', 'SMOOTH_MAX', 'ROUND', 'FLOOR', 'CEIL', 'TRUNC', 'FRACT', 'MODULO', 'WRAP', 'SNAP', 'PINGPONG', 'SINE', 'COSINE', 'TANGENT', 'ARCSINE', 'ARCCOSINE', 'ARCTANGENT', 'ARCTAN2', 'SINH', 'COSH', 'TANH', 'RADIANS', 'DEGREES'])]),
    'GeometryNodeScaleElements': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('scale', DataType.FLOAT), ('center', DataType.VEC3), ('axis', DataType.VEC3)],
                                             [('geometry', DataType.GEOMETRY)],
                                             [('domain', ['FACE', 'EDGE']), ('scale_mode', ['UNIFORM', 'SINGLE_AXIS'])]),
    'ShaderNodeRGB': BuiltinNode([],
                                 [('color', DataType.RGBA)],
                                 []),
    'GeometryNodeCurveToMesh': BuiltinNode([('curve', DataType.GEOMETRY), ('profile_curve', DataType.GEOMETRY), ('fill_caps', DataType.BOOL)],
                                           [('mesh', DataType.GEOMETRY)],
                                           []),
    'FunctionNodeRandomValue': BuiltinNode([('min', DataType.VEC3), ('max', DataType.VEC3), ('min', DataType.FLOAT), ('max', DataType.FLOAT), ('min', DataType.INT), ('max', DataType.INT), ('probability', DataType.FLOAT), ('id', DataType.INT), ('seed', DataType.INT)],
                                           [('value', DataType.VEC3), ('value', DataType.FLOAT),
                                            ('value', DataType.INT), ('value', DataType.BOOL)],
                                           [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'GeometryNodeInputInstanceScale': BuiltinNode([],
                                                  [('scale', DataType.VEC3)],
                                                  []),
    'ShaderNodeLightFalloff': BuiltinNode([('strength', DataType.FLOAT), ('smooth', DataType.FLOAT)],
                                          [('quadratic', DataType.FLOAT), ('linear',
                                                                           DataType.FLOAT), ('constant', DataType.FLOAT)],
                                          []),
    'GeometryNodeFlipFaces': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                         [('mesh', DataType.GEOMETRY)],
                                         []),
    'GeometryNodeSubdivideMesh': BuiltinNode([('mesh', DataType.GEOMETRY), ('level', DataType.INT)],
                                             [('mesh', DataType.GEOMETRY)],
                                             []),
    'GeometryNodeMeshCone': BuiltinNode([('vertices', DataType.INT), ('side_segments', DataType.INT), ('fill_segments', DataType.INT), ('radius_top', DataType.FLOAT), ('radius_bottom', DataType.FLOAT), ('depth', DataType.FLOAT)],
                                        [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL),
                                         ('bottom', DataType.BOOL), ('side', DataType.BOOL)],
                                        [('fill_type', ['NONE', 'NGON', 'TRIANGLE_FAN'])]),
    'GeometryNodeInputMeshEdgeNeighbors': BuiltinNode([],
                                                      [('face_count', DataType.INT)],
                                                      []),
    'FunctionNodeFloatToInt': BuiltinNode([('float', DataType.FLOAT)],
                                          [('integer', DataType.INT)],
                                          [('rounding_mode', ['ROUND', 'FLOOR', 'CEILING', 'TRUNCATE'])]),
    'GeometryNodeInputIndex': BuiltinNode([],
                                          [('index', DataType.INT)],
                                          []),
    'GeometryNodeCurveToPoints': BuiltinNode([('curve', DataType.GEOMETRY), ('count', DataType.INT), ('length', DataType.FLOAT)],
                                             [('points', DataType.GEOMETRY), ('tangent', DataType.VEC3), (
                                                 'normal', DataType.VEC3), ('rotation', DataType.VEC3)],
                                             [('mode', ['EVALUATED', 'COUNT', 'LENGTH'])]),
    'GeometryNodeAttributeDomainSize': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                   [('point_count', DataType.INT), ('edge_count', DataType.INT), ('face_count', DataType.INT), (
                                                       'face_corner_count', DataType.INT), ('spline_count', DataType.INT), ('instance_count', DataType.INT)],
                                                   [('component', ['MESH', 'POINTCLOUD', 'CURVE', 'INSTANCES'])]),
    'GeometryNodeBoundBox': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                        [('bounding_box', DataType.GEOMETRY), ('min',
                                                                               DataType.VEC3), ('max', DataType.VEC3)],
                                        []),
    'GeometryNodeCurveArc': BuiltinNode([('resolution', DataType.INT), ('start', DataType.VEC3), ('middle', DataType.VEC3), ('end', DataType.VEC3), ('radius', DataType.FLOAT), ('start_angle', DataType.FLOAT), ('sweep_angle', DataType.FLOAT), ('offset_angle', DataType.FLOAT), ('connect_center', DataType.BOOL), ('invert_arc', DataType.BOOL)],
                                        [('curve', DataType.GEOMETRY), ('center', DataType.VEC3),
                                         ('normal', DataType.VEC3), ('radius', DataType.FLOAT)],
                                        [('mode', ['POINTS', 'RADIUS'])]),
    'GeometryNodeScaleInstances': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('scale', DataType.VEC3), ('center', DataType.VEC3), ('local_space', DataType.BOOL)],
                                              [('instances', DataType.GEOMETRY)],
                                              []),
    'GeometryNodeTranslateInstances': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('translation', DataType.VEC3), ('local_space', DataType.BOOL)],
                                                  [('instances', DataType.GEOMETRY)],
                                                  []),
    'ShaderNodeTexVoronoi': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('smoothness', DataType.FLOAT), ('exponent', DataType.FLOAT), ('randomness', DataType.FLOAT)],
                                        [('distance', DataType.FLOAT), ('color', DataType.RGBA), (
                                            'position', DataType.VEC3), ('w', DataType.FLOAT), ('radius', DataType.FLOAT)],
                                        [('voronoi_dimensions', ['1D', '2D', '3D', '4D']), ('distance', ['EUCLIDEAN', 'MANHATTAN', 'CHEBYCHEV', 'MINKOWSKI']), ('feature', ['F1', 'F2', 'SMOOTH_F1', 'DISTANCE_TO_EDGE', 'N_SPHERE_RADIUS'])]),
    'GeometryNodeSplitEdges': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                          [('mesh', DataType.GEOMETRY)],
                                          []),
    'GeometryNodeSetSplineResolution': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('resolution', DataType.INT)],
                                                   [('geometry', DataType.GEOMETRY)],
                                                   []),
    'GeometryNodeInputMeshIsland': BuiltinNode([],
                                               [('island_index', DataType.INT),
                                                ('island_count', DataType.INT)],
                                               []),
    'GeometryNodeSetID': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('id', DataType.INT)],
                                     [('geometry', DataType.GEOMETRY)],
                                     []),
    'GeometryNodeReplaceMaterial': BuiltinNode([('geometry', DataType.GEOMETRY), ('old', DataType.MATERIAL), ('new', DataType.MATERIAL)],
                                               [('geometry', DataType.GEOMETRY)],
                                               []),
    'GeometryNodeMeshGrid': BuiltinNode([('size_x', DataType.FLOAT), ('size_y', DataType.FLOAT), ('vertices_x', DataType.INT), ('vertices_y', DataType.INT)],
                                        [('mesh', DataType.GEOMETRY)],
                                        []),
    'GeometryNodeProximity': BuiltinNode([('target', DataType.GEOMETRY), ('source_position', DataType.VEC3)],
                                         [('position', DataType.VEC3),
                                          ('distance', DataType.FLOAT)],
                                         [('target_element', ['POINTS', 'EDGES', 'FACES'])]),
    'GeometryNodeCurveHandleTypeSelection': BuiltinNode([],
                                                        [('selection', DataType.BOOL)],
                                                        [('handle_type', ['FREE', 'AUTO', 'VECTOR', 'ALIGN']), ('mode', ['LEFT', 'RIGHT'])]),
    'GeometryNodeViewer': BuiltinNode([('geometry', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.INT), ('value', DataType.BOOL)],
                                      [],
                                      [('data_type', ['FLOAT', 'INT', 'FLOAT_VECTOR', 'FLOAT_COLOR', 'BYTE_COLOR', 'STRING', 'BOOLEAN', 'FLOAT2', 'INT8'])]),
    'GeometryNodeDistributePointsOnFaces': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('distance_min', DataType.FLOAT), ('density_max', DataType.FLOAT), ('density', DataType.FLOAT), ('density_factor', DataType.FLOAT), ('seed', DataType.INT)],
                                                       [('points', DataType.GEOMETRY), ('normal',
                                                                                        DataType.VEC3), ('rotation', DataType.VEC3)],
                                                       [('distribute_method', ['RANDOM', 'POISSON'])]),
    'FunctionNodeValueToString': BuiltinNode([('value', DataType.FLOAT), ('decimals', DataType.INT)],
                                             [('string', DataType.STRING)],
                                             []),
    'GeometryNodeInputMaterialIndex': BuiltinNode([],
                                                  [('material_index', DataType.INT)],
                                                  []),
    'ShaderNodeFresnel': BuiltinNode([('ior', DataType.FLOAT), ('normal', DataType.VEC3)],
                                     [('fac', DataType.FLOAT)],
                                     []),
}


instances = {
    'add': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'ADD')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'ADD')])],
    'sub': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'SUBTRACT')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'SUBTRACT')])],
    'mul': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MULTIPLY')]),
            NodeInstance('ShaderNodeVectorMath', [0, 3], [
                         0], [('operation', 'SCALE')]),
            NodeInstance('ShaderNodeVectorMath', [3, 0], [
                         0], [('operation', 'SCALE')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MULTIPLY')])],
    'div': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'DIVIDE')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'DIVIDE')])],
    'mul_add': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'MULTIPLY_ADD')]),
                NodeInstance('ShaderNodeVectorMath', [0, 1, 2], [0], [('operation', 'MULTIPLY_ADD')])],
    'pow': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'POWER')])],
    'log': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'LOGARITHM')])],
    'sqrt': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SQRT')])],
    'inv_sqrt': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'INVERSE_SQRT')])],
    'abs': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ABSOLUTE')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'ABSOLUTE')])],
    'exp': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'EXPONENT')])],
    'min': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MINIMUM')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MINIMUM')])],
    'max': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MAXIMUM')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MAXIMUM')])],
    'less_than': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'LESS_THAN')])],
    'greater_than': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'GREATER_THAN')])],
    'sign': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SIGN')])],
    'compare': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'COMPARE')])],
    'smin': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'SMOOTH_MIN')])],
    'smax': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'SMOOTH_MAX')])],
    'round': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ROUND')])],
    'floor': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'FLOOR')]),
              NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'FLOOR')])],
    'ceil': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'CEIL')]),
             NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'CEIL')])],
    'trunc': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'TRUNC')])],
    'fract': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'FRACT')]),
              NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'FRACTION')])],
    'mod': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MODULO')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MODULO')])],
    'wrap': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'WRAP')]),
             NodeInstance('ShaderNodeVectorMath', [0, 1, 2], [0], [('operation', 'WRAP')])],
    'snap': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'SNAP')]),
             NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'SNAP')])],
    'pingpong': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'PINGPONG')])],
    'sin': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SINE')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'SINE')])],
    'cos': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'COSINE')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'COSINE')])],
    'tan': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'TANGENT')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'TANGENT')])],
    'asin': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ARCSINE')])],
    'acos': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ARCCOSINE')])],
    'atan': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ARCTANGENT')])],
    'atan2': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'ARCTAN2')])],
    'sinh': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SINH')])],
    'cosh': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'COSH')])],
    'tanh': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'TANH')])],
    'radians': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'RADIANS')])],
    'degrees': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'DEGREES')])],
    'vec3': [NodeInstance('ShaderNodeCombineXYZ', [0, 1, 2], [0], [])],
    'sep_xyz': [NodeInstance('ShaderNodeSeparateXYZ', [0], [0, 1, 2], [])],
    'cross': [NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'CROSS_PRODUCT')])],
    'project': [NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'PROJECT')])],
    'reflect': [NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'REFLECT')])],
    'refract': [NodeInstance('ShaderNodeVectorMath', [0, 1, 3], [0], [('operation', 'REFRACT')])],
    'face_forward': [NodeInstance('ShaderNodeVectorMath', [0, 1, 2], [0], [('operation', 'FACE_FORWARD')])],
    'dot': [NodeInstance('ShaderNodeVectorMath', [0, 1], [1], [('operation', 'DOT_PRODUCT')])],
    'dist': [NodeInstance('ShaderNodeVectorMath', [0, 1], [1], [('operation', 'DISTANCE')])],
    'length': [NodeInstance('ShaderNodeVectorMath', [0], [1], [('operation', 'LENGTH')])],
    'scale': [NodeInstance('ShaderNodeVectorMath', [0, 3], [0], [('operation', 'SCALE')])],
    'normalize': [NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'NORMALIZE')])],
    'map': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4], [0], []),
            NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR')])],
    'map_stepped': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4, 5], [0], [('interpolation_type', 'STEPPED')]),
                    NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9, 5], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'STEPPED')])],
    'smoothstep': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4], [0], [('interpolation_type', 'SMOOTHSTEP')]),
                   NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'SMOOTHSTEP')])],
    'smootherstep': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4], [0], [('interpolation_type', 'SMOOTHERSTEP')]),
                     NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'SMOOTHERSTEP')])],
    'clamp': [NodeInstance('ShaderNodeClamp', [0, 1, 2], [0], [])],
    'clamp_range': [NodeInstance('ShaderNodeClamp', [0, 1, 2], [0], [('clamp_type', 'RANGE')])],
    'mix': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'mix')])],
    'darken': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'DARKEN')])],
    'burn': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'BURN')])],
    'lighten': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'LIGHTEN')])],
    'screen': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'SCREEN')])],
    'dodge': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'DODGE')])],
    'overlay': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'OVERLAY')])],
    'soft_light': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'SOFT_LIGHT')])],
    'lin_light': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'LINEAR_LIGHT')])],
    'mix_hue': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'HUE')])],
    'mix_saturation': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'SATURATION')])],
    'mix_color': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'COLOR')])],
    'mix_value': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'VALUE')])],
    'rotate_axis': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 2, 3], [0], [('rotation_type', 'AXIS_ANGLE')])],
    'rotate_x': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 3], [0], [('rotation_type', 'X_AXIS')])],
    'rotate_y': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 3], [0], [('rotation_type', 'Y_AXIS')])],
    'rotate_z': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 3], [0], [('rotation_type', 'Z_AXIS')])],
    'rotate_euler': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 4], [0], [('rotation_type', 'EULER_XYZ')])],
    'white_noise': [NodeInstance('ShaderNodeTexWhiteNoise', [0], [0, 1], [('noise_dimensions', '3D')]),
                    NodeInstance('ShaderNodeTexWhiteNoise', [1], [0, 1], [('noise_dimensions', '1D')]), ],
    'white_noise_2d': [NodeInstance('ShaderNodeTexWhiteNoise', [0], [0, 1], [('noise_dimensions', '2D')])],
    'white_noise_4d': [NodeInstance('ShaderNodeTexWhiteNoise', [0, 1], [0, 1], [('noise_dimensions', '4D')])],
    'noise': [NodeInstance('ShaderNodeTexNoise', [0, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '3D')]),
              NodeInstance('ShaderNodeTexNoise', [1, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '1D')]), ],
    'noise_2d': [NodeInstance('ShaderNodeTexNoise', [0, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '2D')])],
    'noise_4d': [NodeInstance('ShaderNodeTexNoise', [0, 1, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '4D')])],
    'voronoi': [NodeInstance('ShaderNodeTexVoronoi', [0, 2, 5], [0, 1, 2], [('voronoi_dimensions', '3D')]),
                NodeInstance('ShaderNodeTexVoronoi', [1, 2, 5], [0, 1, 3], [('voronoi_dimensions', '1D')]), ],
    'voronoi_2d': [NodeInstance('ShaderNodeTexVoronoi', [0, 2, 5], [0, 1, 2], [('voronoi_dimensions', '2D')])],
    'voronoi_4d': [NodeInstance('ShaderNodeTexVoronoi', [0, 1, 2, 5], [0, 1, 3], [('voronoi_dimensions', '4D')])],
}
