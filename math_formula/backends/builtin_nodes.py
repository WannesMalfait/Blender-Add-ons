from .type_defs import DataType, BuiltinNode, NodeInstance


def levenshtein_distance(x: str, y: str) -> int:
    '''Find the amount of inserts deletes and replaces needed to get from x to y.'''
    n = len(x)
    m = len(y)

    A = [[i + j for j in range(m + 1)] for i in range(n + 1)]

    for i in range(n):
        for j in range(m):
            A[i + 1][j + 1] = min(A[i][j + 1] + 1,              # insert
                                  A[i + 1][j] + 1,              # delete
                                  A[i][j] + int(x[i] != y[j]))  # replace

    return A[n][m]


nodes = {
    'FunctionNodeSeparateColor': BuiltinNode([('color', DataType.RGBA)],
                                             [('red', DataType.FLOAT), ('green', DataType.FLOAT), ('blue', DataType.FLOAT), ('alpha', DataType.FLOAT)]),
    'GeometryNodeStoreNamedAttribute': BuiltinNode([('geometry', DataType.GEOMETRY), ('name', DataType.STRING), ('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.RGBA), ('value', DataType.BOOL), ('value', DataType.INT)],
                                                   [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeTexImage': BuiltinNode([('vector', DataType.VEC3)],
                                      [('color', DataType.RGBA), ('alpha', DataType.FLOAT)]),
    'GeometryNodeSplineLength': BuiltinNode([],
                                            [('length', DataType.FLOAT), ('point_count', DataType.INT)]),
    'GeometryNodeCurveToPoints': BuiltinNode([('curve', DataType.GEOMETRY), ('count', DataType.INT), ('length', DataType.FLOAT)],
                                             [('points', DataType.GEOMETRY), ('tangent', DataType.VEC3), ('normal', DataType.VEC3), ('rotation', DataType.VEC3)]),
    'GeometryNodeImageInfo': BuiltinNode([('image', DataType.IMAGE), ('frame', DataType.INT)],
                                         [('width', DataType.INT), ('height', DataType.INT), ('has_alpha', DataType.BOOL), ('frame_count', DataType.INT), ('fps', DataType.FLOAT)]),
    'GeometryNodeInputTangent': BuiltinNode([],
                                            [('tangent', DataType.VEC3)]),
    'GeometryNodeTranslateInstances': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('translation', DataType.VEC3), ('local_space', DataType.BOOL)],
                                                  [('instances', DataType.GEOMETRY)]),
    'ShaderNodeClamp': BuiltinNode([('value', DataType.FLOAT), ('min', DataType.FLOAT), ('max', DataType.FLOAT)],
                                   [('result', DataType.FLOAT)]),
    'GeometryNodeInputMeshFaceArea': BuiltinNode([],
                                                 [('area', DataType.FLOAT)]),
    'GeometryNodeSetShadeSmooth': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('shade_smooth', DataType.BOOL)],
                                              [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeSetCurveRadius': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('radius', DataType.FLOAT)],
                                              [('curve', DataType.GEOMETRY)]),
    'GeometryNodeDistributePointsInVolume': BuiltinNode([('volume', DataType.GEOMETRY), ('density', DataType.FLOAT), ('seed', DataType.INT), ('spacing', DataType.VEC3), ('threshold', DataType.FLOAT)],
                                                        [('points', DataType.GEOMETRY)]),
    'GeometryNodeStringJoin': BuiltinNode([('delimiter', DataType.STRING), ('strings', DataType.STRING)],
                                          [('string', DataType.STRING)]),
    'GeometryNodeMeshToVolume': BuiltinNode([('mesh', DataType.GEOMETRY), ('density', DataType.FLOAT), ('voxel_size', DataType.FLOAT), ('voxel_amount', DataType.FLOAT), ('exterior_band_width', DataType.FLOAT), ('interior_band_width', DataType.FLOAT), ('fill_volume', DataType.BOOL)],
                                            [('volume', DataType.GEOMETRY)]),
    'ShaderNodeTexEnvironment': BuiltinNode([('vector', DataType.VEC3)],
                                            [('color', DataType.RGBA)]),
    'GeometryNodeCornersOfFace': BuiltinNode([('face_index', DataType.INT), ('weights', DataType.FLOAT), ('sort_index', DataType.INT)],
                                             [('corner_index', DataType.INT), ('total', DataType.INT)]),
    'GeometryNodeInputIndex': BuiltinNode([],
                                          [('index', DataType.INT)]),
    'ShaderNodeBsdfDiffuse': BuiltinNode([('color', DataType.RGBA), ('roughness', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                         [('bsdf', DataType.SHADER)]),
    'GeometryNodeTransform': BuiltinNode([('geometry', DataType.GEOMETRY), ('translation', DataType.VEC3), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                         [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeCurveOfPoint': BuiltinNode([('point_index', DataType.INT)],
                                            [('curve_index', DataType.INT), ('index_in_curve', DataType.INT)]),
    'GeometryNodeInputSceneTime': BuiltinNode([],
                                              [('seconds', DataType.FLOAT), ('frame', DataType.FLOAT)]),
    'GeometryNodeInputMeshEdgeVertices': BuiltinNode([],
                                                     [('vertex_index_1', DataType.INT), ('vertex_index_2', DataType.INT), ('position_1', DataType.VEC3), ('position_2', DataType.VEC3)]),
    'ShaderNodeScript': BuiltinNode([],
                                    []),
    'ShaderNodeMixShader': BuiltinNode([('fac', DataType.FLOAT), ('shader', DataType.SHADER), ('shader', DataType.SHADER)],
                                       [('shader', DataType.SHADER)]),
    'FunctionNodeInputInt': BuiltinNode([],
                                        [('integer', DataType.INT)]),
    'GeometryNodeDeformCurvesOnSurface': BuiltinNode([('curves', DataType.GEOMETRY)],
                                                     [('curves', DataType.GEOMETRY)]),
    'FunctionNodeReplaceString': BuiltinNode([('string', DataType.STRING), ('find', DataType.STRING), ('replace', DataType.STRING)],
                                             [('string', DataType.STRING)]),
    'FunctionNodeAlignEulerToVector': BuiltinNode([('rotation', DataType.VEC3), ('factor', DataType.FLOAT), ('vector', DataType.VEC3)],
                                                  [('rotation', DataType.VEC3)]),
    'GeometryNodeInputMeshEdgeNeighbors': BuiltinNode([],
                                                      [('face_count', DataType.INT)]),
    'GeometryNodeInputShortestEdgePaths': BuiltinNode([('end_vertex', DataType.BOOL), ('edge_cost', DataType.FLOAT)],
                                                      [('next_vertex_index', DataType.INT), ('total_cost', DataType.FLOAT)]),
    'GeometryNodeInputNamedAttribute': BuiltinNode([('name', DataType.STRING)],
                                                   [('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT), ('exists', DataType.BOOL)]),
    'GeometryNodeIsViewport': BuiltinNode([],
                                          [('is_viewport', DataType.BOOL)]),
    'GeometryNodeInputShadeSmooth': BuiltinNode([],
                                                [('smooth', DataType.BOOL)]),
    'GeometryNodeReverseCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                            [('curve', DataType.GEOMETRY)]),
    'FunctionNodeCompare': BuiltinNode([('a', DataType.FLOAT), ('b', DataType.FLOAT), ('a', DataType.INT), ('b', DataType.INT), ('a', DataType.VEC3), ('b', DataType.VEC3), ('a', DataType.RGBA), ('b', DataType.RGBA), ('a', DataType.STRING), ('b', DataType.STRING), ('c', DataType.FLOAT), ('angle', DataType.FLOAT), ('epsilon', DataType.FLOAT)],
                                       [('result', DataType.BOOL)]),
    'GeometryNodeMeshCylinder': BuiltinNode([('vertices', DataType.INT), ('side_segments', DataType.INT), ('fill_segments', DataType.INT), ('radius', DataType.FLOAT), ('depth', DataType.FLOAT)],
                                            [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL), ('side', DataType.BOOL), ('bottom', DataType.BOOL), ('uv_map', DataType.VEC3)]),
    'GeometryNodePointsToVertices': BuiltinNode([('points', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                                [('mesh', DataType.GEOMETRY)]),
    'ShaderNodeSubsurfaceScattering': BuiltinNode([('color', DataType.RGBA), ('scale', DataType.FLOAT), ('radius', DataType.VEC3), ('ior', DataType.FLOAT), ('anisotropy', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                                  [('bssrdf', DataType.SHADER)]),
    'GeometryNodeMeshCube': BuiltinNode([('size', DataType.VEC3), ('vertices_x', DataType.INT), ('vertices_y', DataType.INT), ('vertices_z', DataType.INT)],
                                        [('mesh', DataType.GEOMETRY), ('uv_map', DataType.VEC3)]),
    'ShaderNodeSeparateColor': BuiltinNode([('color', DataType.RGBA)],
                                           [('red', DataType.FLOAT), ('green', DataType.FLOAT), ('blue', DataType.FLOAT)]),
    'GeometryNodeEdgesOfCorner': BuiltinNode([('corner_index', DataType.INT)],
                                             [('next_edge_index', DataType.INT), ('previous_edge_index', DataType.INT)]),
    'GeometryNodeCurveStar': BuiltinNode([('points', DataType.INT), ('inner_radius', DataType.FLOAT), ('outer_radius', DataType.FLOAT), ('twist', DataType.FLOAT)],
                                         [('curve', DataType.GEOMETRY), ('outer_points', DataType.BOOL)]),
    'GeometryNodeMeshUVSphere': BuiltinNode([('segments', DataType.INT), ('rings', DataType.INT), ('radius', DataType.FLOAT)],
                                            [('mesh', DataType.GEOMETRY), ('uv_map', DataType.VEC3)]),
    'ShaderNodeFloatCurve': BuiltinNode([('factor', DataType.FLOAT), ('value', DataType.FLOAT)],
                                        [('value', DataType.FLOAT)]),
    'ShaderNodeOutputMaterial': BuiltinNode([('surface', DataType.SHADER), ('volume', DataType.SHADER), ('displacement', DataType.VEC3), ('thickness', DataType.FLOAT)],
                                            []),
    'GeometryNodeMergeByDistance': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('distance', DataType.FLOAT)],
                                               [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeAccumulateField': BuiltinNode([('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.INT), ('group_index', DataType.INT)],
                                               [('leading', DataType.VEC3), ('leading', DataType.FLOAT), ('leading', DataType.INT), ('trailing', DataType.VEC3), ('trailing', DataType.FLOAT), ('trailing', DataType.INT), ('total', DataType.VEC3), ('total', DataType.FLOAT), ('total', DataType.INT)]),
    'GeometryNodeCurveHandleTypeSelection': BuiltinNode([],
                                                        [('selection', DataType.BOOL)]),
    'ShaderNodeSeparateRGB': BuiltinNode([('image', DataType.RGBA)],
                                         [('r', DataType.FLOAT), ('g', DataType.FLOAT), ('b', DataType.FLOAT)]),
    'GeometryNodeSampleCurve': BuiltinNode([('curves', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL), ('factor', DataType.FLOAT), ('length', DataType.FLOAT), ('curve_index', DataType.INT)],
                                           [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL), ('position', DataType.VEC3), ('tangent', DataType.VEC3), ('normal', DataType.VEC3)]),
    'ShaderNodeTexWave': BuiltinNode([('vector', DataType.VEC3), ('scale', DataType.FLOAT), ('distortion', DataType.FLOAT), ('detail', DataType.FLOAT), ('detail_scale', DataType.FLOAT), ('detail_roughness', DataType.FLOAT), ('phase_offset', DataType.FLOAT)],
                                     [('color', DataType.RGBA), ('fac', DataType.FLOAT)]),
    'GeometryNodeScaleInstances': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('scale', DataType.VEC3), ('center', DataType.VEC3), ('local_space', DataType.BOOL)],
                                              [('instances', DataType.GEOMETRY)]),
    'GeometryNodeFilletCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('count', DataType.INT), ('radius', DataType.FLOAT), ('limit_radius', DataType.BOOL)],
                                           [('curve', DataType.GEOMETRY)]),
    'ShaderNodeAddShader': BuiltinNode([('shader', DataType.SHADER), ('shader', DataType.SHADER)],
                                       [('shader', DataType.SHADER)]),
    'GeometryNodeInputID': BuiltinNode([],
                                       [('id', DataType.INT)]),
    'ShaderNodeCombineRGB': BuiltinNode([('r', DataType.FLOAT), ('g', DataType.FLOAT), ('b', DataType.FLOAT)],
                                        [('image', DataType.RGBA)]),
    'ShaderNodeMix': BuiltinNode([('factor', DataType.FLOAT), ('factor', DataType.VEC3), ('a', DataType.FLOAT), ('b', DataType.FLOAT), ('a', DataType.VEC3), ('b', DataType.VEC3), ('a', DataType.RGBA), ('b', DataType.RGBA)],
                                 [('result', DataType.FLOAT), ('result', DataType.VEC3), ('result', DataType.RGBA)]),
    'ShaderNodeTexChecker': BuiltinNode([('vector', DataType.VEC3), ('color1', DataType.RGBA), ('color2', DataType.RGBA), ('scale', DataType.FLOAT)],
                                        [('color', DataType.RGBA), ('fac', DataType.FLOAT)]),
    'GeometryNodeSubdivideMesh': BuiltinNode([('mesh', DataType.GEOMETRY), ('level', DataType.INT)],
                                             [('mesh', DataType.GEOMETRY)]),
    'GeometryNodeInputMeshIsland': BuiltinNode([],
                                               [('island_index', DataType.INT), ('island_count', DataType.INT)]),
    'ShaderNodeCombineXYZ': BuiltinNode([('x', DataType.FLOAT), ('y', DataType.FLOAT), ('z', DataType.FLOAT)],
                                        [('vector', DataType.VEC3)]),
    'GeometryNodeCurveLength': BuiltinNode([('curve', DataType.GEOMETRY)],
                                           [('length', DataType.FLOAT)]),
    'GeometryNodeCurveSetHandles': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                               [('curve', DataType.GEOMETRY)]),
    'ShaderNodeTexMagic': BuiltinNode([('vector', DataType.VEC3), ('scale', DataType.FLOAT), ('distortion', DataType.FLOAT)],
                                      [('color', DataType.RGBA), ('fac', DataType.FLOAT)]),
    'ShaderNodeTexBrick': BuiltinNode([('vector', DataType.VEC3), ('color1', DataType.RGBA), ('color2', DataType.RGBA), ('mortar', DataType.RGBA), ('scale', DataType.FLOAT), ('mortar_size', DataType.FLOAT), ('mortar_smooth', DataType.FLOAT), ('bias', DataType.FLOAT), ('brick_width', DataType.FLOAT), ('row_height', DataType.FLOAT)],
                                      [('color', DataType.RGBA), ('fac', DataType.FLOAT)]),
    'GeometryNodeUVUnwrap': BuiltinNode([('selection', DataType.BOOL), ('seam', DataType.BOOL), ('margin', DataType.FLOAT), ('fill_holes', DataType.BOOL)],
                                        [('uv', DataType.VEC3)]),
    'GeometryNodeCurvePrimitiveBezierSegment': BuiltinNode([('resolution', DataType.INT), ('start', DataType.VEC3), ('start_handle', DataType.VEC3), ('end_handle', DataType.VEC3), ('end', DataType.VEC3)],
                                                           [('curve', DataType.GEOMETRY)]),
    'GeometryNodeInputPosition': BuiltinNode([],
                                             [('position', DataType.VEC3)]),
    'ShaderNodeLightFalloff': BuiltinNode([('strength', DataType.FLOAT), ('smooth', DataType.FLOAT)],
                                          [('quadratic', DataType.FLOAT), ('linear', DataType.FLOAT), ('constant', DataType.FLOAT)]),
    'ShaderNodeCombineHSV': BuiltinNode([('h', DataType.FLOAT), ('s', DataType.FLOAT), ('v', DataType.FLOAT)],
                                        [('color', DataType.RGBA)]),
    'GeometryNodeVolumeToMesh': BuiltinNode([('volume', DataType.GEOMETRY), ('voxel_size', DataType.FLOAT), ('voxel_amount', DataType.FLOAT), ('threshold', DataType.FLOAT), ('adaptivity', DataType.FLOAT)],
                                            [('mesh', DataType.GEOMETRY)]),
    'GeometryNodeStringToCurves': BuiltinNode([('string', DataType.STRING), ('size', DataType.FLOAT), ('character_spacing', DataType.FLOAT), ('word_spacing', DataType.FLOAT), ('line_spacing', DataType.FLOAT), ('text_box_width', DataType.FLOAT), ('text_box_height', DataType.FLOAT)],
                                              [('curve_instances', DataType.GEOMETRY), ('remainder', DataType.STRING), ('line', DataType.INT), ('pivot_point', DataType.VEC3)]),
    'GeometryNodeUVPackIslands': BuiltinNode([('uv', DataType.VEC3), ('selection', DataType.BOOL), ('margin', DataType.FLOAT), ('rotate', DataType.BOOL)],
                                             [('uv', DataType.VEC3)]),
    'GeometryNodeCurvePrimitiveQuadrilateral': BuiltinNode([('width', DataType.FLOAT), ('height', DataType.FLOAT), ('bottom_width', DataType.FLOAT), ('top_width', DataType.FLOAT), ('offset', DataType.FLOAT), ('bottom_height', DataType.FLOAT), ('top_height', DataType.FLOAT), ('point_1', DataType.VEC3), ('point_2', DataType.VEC3), ('point_3', DataType.VEC3), ('point_4', DataType.VEC3)],
                                                           [('curve', DataType.GEOMETRY)]),
    'ShaderNodeBsdfGlossy': BuiltinNode([('color', DataType.RGBA), ('roughness', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                        [('bsdf', DataType.SHADER)]),
    'ShaderNodeRGBCurve': BuiltinNode([('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                      [('color', DataType.RGBA)]),
    'ShaderNodeTexSky': BuiltinNode([('vector', DataType.VEC3)],
                                    [('color', DataType.RGBA)]),
    'GeometryNodeSelfObject': BuiltinNode([],
                                          [('self_object', DataType.OBJECT)]),
    'GeometryNodeFlipFaces': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                         [('mesh', DataType.GEOMETRY)]),
    'GeometryNodeSubdivideCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('cuts', DataType.INT)],
                                              [('curve', DataType.GEOMETRY)]),
    'GeometryNodeBlurAttribute': BuiltinNode([('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('iterations', DataType.INT), ('weight', DataType.FLOAT)],
                                             [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA)]),
    'GeometryNodePointsToVolume': BuiltinNode([('points', DataType.GEOMETRY), ('density', DataType.FLOAT), ('voxel_size', DataType.FLOAT), ('voxel_amount', DataType.FLOAT), ('radius', DataType.FLOAT)],
                                              [('volume', DataType.GEOMETRY)]),
    'GeometryNodeAttributeStatistic': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('attribute', DataType.FLOAT), ('attribute', DataType.VEC3)],
                                                  [('mean', DataType.FLOAT), ('median', DataType.FLOAT), ('sum', DataType.FLOAT), ('min', DataType.FLOAT), ('max', DataType.FLOAT), ('range', DataType.FLOAT), ('standard_deviation', DataType.FLOAT), ('variance', DataType.FLOAT), ('mean', DataType.VEC3), ('median', DataType.VEC3), ('sum', DataType.VEC3), ('min', DataType.VEC3), ('max', DataType.VEC3), ('range', DataType.VEC3), ('standard_deviation', DataType.VEC3), ('variance', DataType.VEC3)]),
    'ShaderNodeRGBToBW': BuiltinNode([('color', DataType.RGBA)],
                                     [('val', DataType.FLOAT)]),
    'ShaderNodeTexIES': BuiltinNode([('vector', DataType.VEC3), ('strength', DataType.FLOAT)],
                                    [('fac', DataType.FLOAT)]),
    'ShaderNodeBsdfTransparent': BuiltinNode([('color', DataType.RGBA), ('weight', DataType.FLOAT)],
                                             [('bsdf', DataType.SHADER)]),
    'ShaderNodeBevel': BuiltinNode([('radius', DataType.FLOAT), ('normal', DataType.VEC3)],
                                   [('normal', DataType.VEC3)]),
    'ShaderNodeNormal': BuiltinNode([('normal', DataType.VEC3)],
                                    [('normal', DataType.VEC3), ('dot', DataType.FLOAT)]),
    'GeometryNodeMeshToPoints': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                            [('points', DataType.GEOMETRY)]),
    'GeometryNodeExtrudeMesh': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('offset', DataType.VEC3), ('offset_scale', DataType.FLOAT), ('individual', DataType.BOOL)],
                                           [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL), ('side', DataType.BOOL)]),
    'GeometryNodePointsOfCurve': BuiltinNode([('curve_index', DataType.INT), ('weights', DataType.FLOAT), ('sort_index', DataType.INT)],
                                             [('point_index', DataType.INT), ('total', DataType.INT)]),
    'ShaderNodeAmbientOcclusion': BuiltinNode([('color', DataType.RGBA), ('distance', DataType.FLOAT), ('normal', DataType.VEC3)],
                                              [('color', DataType.RGBA), ('ao', DataType.FLOAT)]),
    'GeometryNodeInputRadius': BuiltinNode([],
                                           [('radius', DataType.FLOAT)]),
    'GeometryNodeObjectInfo': BuiltinNode([('object', DataType.OBJECT), ('as_instance', DataType.BOOL)],
                                          [('location', DataType.VEC3), ('rotation', DataType.VEC3), ('scale', DataType.VEC3), ('geometry', DataType.GEOMETRY)]),
    'GeometryNodeSetPointRadius': BuiltinNode([('points', DataType.GEOMETRY), ('selection', DataType.BOOL), ('radius', DataType.FLOAT)],
                                              [('points', DataType.GEOMETRY)]),
    'GeometryNodeMeshFaceSetBoundaries': BuiltinNode([('face_set', DataType.INT)],
                                                     [('boundary_edges', DataType.BOOL)]),
    'ShaderNodeDisplacement': BuiltinNode([('height', DataType.FLOAT), ('midlevel', DataType.FLOAT), ('scale', DataType.FLOAT), ('normal', DataType.VEC3)],
                                          [('displacement', DataType.VEC3)]),
    'GeometryNodeEdgesOfVertex': BuiltinNode([('vertex_index', DataType.INT), ('weights', DataType.FLOAT), ('sort_index', DataType.INT)],
                                             [('edge_index', DataType.INT), ('total', DataType.INT)]),
    'GeometryNodeSetMaterial': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('material', DataType.MATERIAL)],
                                           [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeInstancesToPoints': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                                 [('points', DataType.GEOMETRY)]),
    'ShaderNodeHueSaturation': BuiltinNode([('hue', DataType.FLOAT), ('saturation', DataType.FLOAT), ('value', DataType.FLOAT), ('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                           [('color', DataType.RGBA)]),
    'GeometryNodeInputImage': BuiltinNode([],
                                          [('image', DataType.IMAGE)]),
    'ShaderNodeTexGradient': BuiltinNode([('vector', DataType.VEC3)],
                                         [('color', DataType.RGBA), ('fac', DataType.FLOAT)]),
    'GeometryNodeInputMaterial': BuiltinNode([],
                                             [('material', DataType.MATERIAL)]),
    'GeometryNodeSampleNearestSurface': BuiltinNode([('mesh', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL), ('sample_position', DataType.VEC3)],
                                                    [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)]),
    'ShaderNodeVolumeAbsorption': BuiltinNode([('color', DataType.RGBA), ('density', DataType.FLOAT), ('weight', DataType.FLOAT)],
                                              [('volume', DataType.SHADER)]),
    'ShaderNodeUVMap': BuiltinNode([],
                                   [('uv', DataType.VEC3)]),
    'FunctionNodeBooleanMath': BuiltinNode([('boolean', DataType.BOOL), ('boolean', DataType.BOOL)],
                                           [('boolean', DataType.BOOL)]),
    'GeometryNodeCurveSplineType': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                               [('curve', DataType.GEOMETRY)]),
    'GeometryNodeInputNormal': BuiltinNode([],
                                           [('normal', DataType.VEC3)]),
    'ShaderNodeBsdfVelvet': BuiltinNode([('color', DataType.RGBA), ('sigma', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                        [('bsdf', DataType.SHADER)]),
    'GeometryNodeMeshLine': BuiltinNode([('count', DataType.INT), ('resolution', DataType.FLOAT), ('start_location', DataType.VEC3), ('offset', DataType.VEC3)],
                                        [('mesh', DataType.GEOMETRY)]),
    'GeometryNodeConvexHull': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                          [('convex_hull', DataType.GEOMETRY)]),
    'GeometryNodeCurveQuadraticBezier': BuiltinNode([('resolution', DataType.INT), ('start', DataType.VEC3), ('middle', DataType.VEC3), ('end', DataType.VEC3)],
                                                    [('curve', DataType.GEOMETRY)]),
    'ShaderNodeVectorMath': BuiltinNode([('vector', DataType.VEC3), ('vector', DataType.VEC3), ('vector', DataType.VEC3), ('scale', DataType.FLOAT)],
                                        [('vector', DataType.VEC3), ('value', DataType.FLOAT)]),
    'GeometryNodeSetCurveTilt': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('tilt', DataType.FLOAT)],
                                            [('curve', DataType.GEOMETRY)]),
    'GeometryNodeCollectionInfo': BuiltinNode([('collection', DataType.COLLECTION), ('separate_children', DataType.BOOL), ('reset_children', DataType.BOOL)],
                                              [('instances', DataType.GEOMETRY)]),
    'FunctionNodeStringLength': BuiltinNode([('string', DataType.STRING)],
                                            [('length', DataType.INT)]),
    'ShaderNodeWireframe': BuiltinNode([('size', DataType.FLOAT)],
                                       [('fac', DataType.FLOAT)]),
    'GeometryNodeDeleteGeometry': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                              [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeVolumeInfo': BuiltinNode([],
                                        [('color', DataType.RGBA), ('density', DataType.FLOAT), ('flame', DataType.FLOAT), ('temperature', DataType.FLOAT)]),
    'ShaderNodeVolumePrincipled': BuiltinNode([('color', DataType.RGBA), ('color_attribute', DataType.STRING), ('density', DataType.FLOAT), ('density_attribute', DataType.STRING), ('anisotropy', DataType.FLOAT), ('absorption_color', DataType.RGBA), ('emission_strength', DataType.FLOAT), ('emission_color', DataType.RGBA), ('blackbody_intensity', DataType.FLOAT), ('blackbody_tint', DataType.RGBA), ('temperature', DataType.FLOAT), ('temperature_attribute', DataType.STRING), ('weight', DataType.FLOAT)],
                                              [('volume', DataType.SHADER)]),
    'GeometryNodeGeometryToInstance': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                  [('instances', DataType.GEOMETRY)]),
    'GeometryNodeInputCurveTilt': BuiltinNode([],
                                              [('tilt', DataType.FLOAT)]),
    'GeometryNodeMeshCircle': BuiltinNode([('vertices', DataType.INT), ('radius', DataType.FLOAT)],
                                          [('mesh', DataType.GEOMETRY)]),
    'GeometryNodeSampleIndex': BuiltinNode([('geometry', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL), ('index', DataType.INT)],
                                           [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)]),
    'ShaderNodeTexPointDensity': BuiltinNode([('vector', DataType.VEC3)],
                                             [('color', DataType.RGBA), ('density', DataType.FLOAT)]),
    'GeometryNodeCurvePrimitiveCircle': BuiltinNode([('resolution', DataType.INT), ('point_1', DataType.VEC3), ('point_2', DataType.VEC3), ('point_3', DataType.VEC3), ('radius', DataType.FLOAT)],
                                                    [('curve', DataType.GEOMETRY), ('center', DataType.VEC3)]),
    'GeometryNodeFillCurve': BuiltinNode([('curve', DataType.GEOMETRY)],
                                         [('mesh', DataType.GEOMETRY)]),
    'ShaderNodeLightPath': BuiltinNode([],
                                       [('is_camera_ray', DataType.FLOAT), ('is_shadow_ray', DataType.FLOAT), ('is_diffuse_ray', DataType.FLOAT), ('is_glossy_ray', DataType.FLOAT), ('is_singular_ray', DataType.FLOAT), ('is_reflection_ray', DataType.FLOAT), ('is_transmission_ray', DataType.FLOAT), ('ray_length', DataType.FLOAT), ('ray_depth', DataType.FLOAT), ('diffuse_depth', DataType.FLOAT), ('glossy_depth', DataType.FLOAT), ('transparent_depth', DataType.FLOAT), ('transmission_depth', DataType.FLOAT)]),
    'ShaderNodeHoldout': BuiltinNode([('weight', DataType.FLOAT)],
                                     [('holdout', DataType.SHADER)]),
    'ShaderNodeUVAlongStroke': BuiltinNode([],
                                           [('uv', DataType.VEC3)]),
    'GeometryNodeInputInstanceRotation': BuiltinNode([],
                                                     [('rotation', DataType.VEC3)]),
    'GeometryNodeScaleElements': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('scale', DataType.FLOAT), ('center', DataType.VEC3), ('axis', DataType.VEC3)],
                                             [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeNewGeometry': BuiltinNode([],
                                         [('position', DataType.VEC3), ('normal', DataType.VEC3), ('tangent', DataType.VEC3), ('true_normal', DataType.VEC3), ('incoming', DataType.VEC3), ('parametric', DataType.VEC3), ('backfacing', DataType.FLOAT), ('pointiness', DataType.FLOAT), ('random_per_island', DataType.FLOAT)]),
    'ShaderNodeValToRGB': BuiltinNode([('fac', DataType.FLOAT)],
                                      [('color', DataType.RGBA), ('alpha', DataType.FLOAT)]),
    'GeometryNodeSetSplineResolution': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('resolution', DataType.INT)],
                                                   [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeVectorDisplacement': BuiltinNode([('vector', DataType.RGBA), ('midlevel', DataType.FLOAT), ('scale', DataType.FLOAT)],
                                                [('displacement', DataType.VEC3)]),
    'GeometryNodeVolumeCube': BuiltinNode([('density', DataType.FLOAT), ('background', DataType.FLOAT), ('min', DataType.VEC3), ('max', DataType.VEC3), ('resolution_x', DataType.INT), ('resolution_y', DataType.INT), ('resolution_z', DataType.INT)],
                                          [('volume', DataType.GEOMETRY)]),
    'FunctionNodeInputVector': BuiltinNode([],
                                           [('vector', DataType.VEC3)]),
    'GeometryNodeSwitch': BuiltinNode([('switch', DataType.BOOL), ('switch', DataType.BOOL), ('false', DataType.FLOAT), ('true', DataType.FLOAT), ('false', DataType.INT), ('true', DataType.INT), ('false', DataType.BOOL), ('true', DataType.BOOL), ('false', DataType.VEC3), ('true', DataType.VEC3), ('false', DataType.RGBA), ('true', DataType.RGBA), ('false', DataType.STRING), ('true', DataType.STRING), ('false', DataType.GEOMETRY), ('true', DataType.GEOMETRY), ('false', DataType.OBJECT), ('true', DataType.OBJECT), ('false', DataType.COLLECTION), ('true', DataType.COLLECTION), ('false', DataType.TEXTURE), ('true', DataType.TEXTURE), ('false', DataType.MATERIAL), ('true', DataType.MATERIAL), ('false', DataType.IMAGE), ('true', DataType.IMAGE)],
                                      [('output', DataType.FLOAT), ('output', DataType.INT), ('output', DataType.BOOL), ('output', DataType.VEC3), ('output', DataType.RGBA), ('output', DataType.STRING), ('output', DataType.GEOMETRY), ('output', DataType.OBJECT), ('output', DataType.COLLECTION), ('output', DataType.TEXTURE), ('output', DataType.MATERIAL), ('output', DataType.IMAGE)]),
    'ShaderNodeInvert': BuiltinNode([('fac', DataType.FLOAT), ('color', DataType.RGBA)],
                                    [('color', DataType.RGBA)]),
    'ShaderNodeBump': BuiltinNode([('strength', DataType.FLOAT), ('distance', DataType.FLOAT), ('height', DataType.FLOAT), ('normal', DataType.VEC3)],
                                  [('normal', DataType.VEC3)]),
    'ShaderNodeSeparateHSV': BuiltinNode([('color', DataType.RGBA)],
                                         [('h', DataType.FLOAT), ('s', DataType.FLOAT), ('v', DataType.FLOAT)]),
    'GeometryNodeTriangulate': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('minimum_vertices', DataType.INT)],
                                           [('mesh', DataType.GEOMETRY)]),
    'ShaderNodeSqueeze': BuiltinNode([('value', DataType.FLOAT), ('width', DataType.FLOAT), ('center', DataType.FLOAT)],
                                     [('value', DataType.FLOAT)]),
    'ShaderNodeBrightContrast': BuiltinNode([('color', DataType.RGBA), ('bright', DataType.FLOAT), ('contrast', DataType.FLOAT)],
                                            [('color', DataType.RGBA)]),
    'ShaderNodeOutputLight': BuiltinNode([('surface', DataType.SHADER)],
                                         []),
    'ShaderNodeBsdfPrincipled': BuiltinNode([('base_color', DataType.RGBA), ('subsurface', DataType.FLOAT), ('subsurface_radius', DataType.VEC3), ('subsurface_color', DataType.RGBA), ('subsurface_ior', DataType.FLOAT), ('subsurface_anisotropy', DataType.FLOAT), ('metallic', DataType.FLOAT), ('specular', DataType.FLOAT), ('specular_tint', DataType.FLOAT), ('roughness', DataType.FLOAT), ('anisotropic', DataType.FLOAT), ('anisotropic_rotation', DataType.FLOAT), ('sheen', DataType.FLOAT), ('sheen_tint', DataType.FLOAT), ('clearcoat', DataType.FLOAT), ('clearcoat_roughness', DataType.FLOAT), ('ior', DataType.FLOAT), ('transmission', DataType.FLOAT), ('transmission_roughness', DataType.FLOAT), ('emission', DataType.RGBA), ('emission_strength', DataType.FLOAT), ('alpha', DataType.FLOAT), ('normal', DataType.VEC3), ('clearcoat_normal', DataType.VEC3), ('tangent', DataType.VEC3), ('weight', DataType.FLOAT)],
                                            [('bsdf', DataType.SHADER)]),
    'GeometryNodeCornersOfVertex': BuiltinNode([('vertex_index', DataType.INT), ('weights', DataType.FLOAT), ('sort_index', DataType.INT)],
                                               [('corner_index', DataType.INT), ('total', DataType.INT)]),
    'GeometryNodeRealizeInstances': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeBsdfTranslucent': BuiltinNode([('color', DataType.RGBA), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                             [('bsdf', DataType.SHADER)]),
    'FunctionNodeRandomValue': BuiltinNode([('min', DataType.VEC3), ('max', DataType.VEC3), ('min', DataType.FLOAT), ('max', DataType.FLOAT), ('min', DataType.INT), ('max', DataType.INT), ('probability', DataType.FLOAT), ('id', DataType.INT), ('seed', DataType.INT)],
                                           [('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.BOOL)]),
    'GeometryNodeInputMeshVertexNeighbors': BuiltinNode([],
                                                        [('vertex_count', DataType.INT), ('face_count', DataType.INT)]),
    'ShaderNodeNormalMap': BuiltinNode([('strength', DataType.FLOAT), ('color', DataType.RGBA)],
                                       [('normal', DataType.VEC3)]),
    'ShaderNodeBsdfToon': BuiltinNode([('color', DataType.RGBA), ('size', DataType.FLOAT), ('smooth', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                      [('bsdf', DataType.SHADER)]),
    'ShaderNodeVectorRotate': BuiltinNode([('vector', DataType.VEC3), ('center', DataType.VEC3), ('axis', DataType.VEC3), ('angle', DataType.FLOAT), ('rotation', DataType.VEC3)],
                                          [('vector', DataType.VEC3)]),
    'ShaderNodeGamma': BuiltinNode([('color', DataType.RGBA), ('gamma', DataType.FLOAT)],
                                   [('color', DataType.RGBA)]),
    'FunctionNodeInputColor': BuiltinNode([],
                                          [('color', DataType.RGBA)]),
    'ShaderNodeBsdfGlass': BuiltinNode([('color', DataType.RGBA), ('roughness', DataType.FLOAT), ('ior', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                       [('bsdf', DataType.SHADER)]),
    'GeometryNodeSetCurveNormal': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                              [('curve', DataType.GEOMETRY)]),
    'FunctionNodeFloatToInt': BuiltinNode([('float', DataType.FLOAT)],
                                          [('integer', DataType.INT)]),
    'GeometryNodeCaptureAttribute': BuiltinNode([('geometry', DataType.GEOMETRY), ('value', DataType.VEC3), ('value', DataType.FLOAT), ('value', DataType.RGBA), ('value', DataType.BOOL), ('value', DataType.INT)],
                                                [('geometry', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)]),
    'GeometryNodeSampleUVSurface': BuiltinNode([('mesh', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL), ('source_uv_map', DataType.VEC3), ('sample_uv', DataType.VEC3)],
                                               [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL), ('is_valid', DataType.BOOL)]),
    'GeometryNodeVertexOfCorner': BuiltinNode([('corner_index', DataType.INT)],
                                              [('vertex_index', DataType.INT)]),
    'ShaderNodeBsdfAnisotropic': BuiltinNode([('color', DataType.RGBA), ('roughness', DataType.FLOAT), ('anisotropy', DataType.FLOAT), ('rotation', DataType.FLOAT), ('normal', DataType.VEC3), ('tangent', DataType.VEC3), ('weight', DataType.FLOAT)],
                                             [('bsdf', DataType.SHADER)]),
    'ShaderNodeTangent': BuiltinNode([],
                                     [('tangent', DataType.VEC3)]),
    'GeometryNodeRotateInstances': BuiltinNode([('instances', DataType.GEOMETRY), ('selection', DataType.BOOL), ('rotation', DataType.VEC3), ('pivot_point', DataType.VEC3), ('local_space', DataType.BOOL)],
                                               [('instances', DataType.GEOMETRY)]),
    'GeometryNodeInputMeshFaceNeighbors': BuiltinNode([],
                                                      [('vertex_count', DataType.INT), ('face_count', DataType.INT)]),
    'GeometryNodeInputSplineCyclic': BuiltinNode([],
                                                 [('cyclic', DataType.BOOL)]),
    'ShaderNodeBlackbody': BuiltinNode([('temperature', DataType.FLOAT)],
                                       [('color', DataType.RGBA)]),
    'ShaderNodeCombineColor': BuiltinNode([('red', DataType.FLOAT), ('green', DataType.FLOAT), ('blue', DataType.FLOAT)],
                                          [('color', DataType.RGBA)]),
    'ShaderNodeFresnel': BuiltinNode([('ior', DataType.FLOAT), ('normal', DataType.VEC3)],
                                     [('fac', DataType.FLOAT)]),
    'GeometryNodeCurveArc': BuiltinNode([('resolution', DataType.INT), ('start', DataType.VEC3), ('middle', DataType.VEC3), ('end', DataType.VEC3), ('radius', DataType.FLOAT), ('start_angle', DataType.FLOAT), ('sweep_angle', DataType.FLOAT), ('offset_angle', DataType.FLOAT), ('connect_center', DataType.BOOL), ('invert_arc', DataType.BOOL)],
                                        [('curve', DataType.GEOMETRY), ('center', DataType.VEC3), ('normal', DataType.VEC3), ('radius', DataType.FLOAT)]),
    'GeometryNodeFieldAtIndex': BuiltinNode([('index', DataType.INT), ('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                            [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)]),
    'ShaderNodeMath': BuiltinNode([('value', DataType.FLOAT), ('value', DataType.FLOAT), ('value', DataType.FLOAT)],
                                  [('value', DataType.FLOAT)]),
    'GeometryNodeSplineParameter': BuiltinNode([],
                                               [('factor', DataType.FLOAT), ('length', DataType.FLOAT), ('index', DataType.INT)]),
    'GeometryNodeSplitEdges': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                          [('mesh', DataType.GEOMETRY)]),
    'FunctionNodeInputSpecialCharacters': BuiltinNode([],
                                                      [('line_break', DataType.STRING), ('tab', DataType.STRING)]),
    'GeometryNodeSeparateGeometry': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                                [('selection', DataType.GEOMETRY), ('inverted', DataType.GEOMETRY)]),
    'GeometryNodeInputMeshFaceIsPlanar': BuiltinNode([('threshold', DataType.FLOAT)],
                                                     [('planar', DataType.BOOL)]),
    'GeometryNodeMeshGrid': BuiltinNode([('size_x', DataType.FLOAT), ('size_y', DataType.FLOAT), ('vertices_x', DataType.INT), ('vertices_y', DataType.INT)],
                                        [('mesh', DataType.GEOMETRY), ('uv_map', DataType.VEC3)]),
    'GeometryNodeAttributeDomainSize': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                   [('point_count', DataType.INT), ('edge_count', DataType.INT), ('face_count', DataType.INT), ('face_corner_count', DataType.INT), ('spline_count', DataType.INT), ('instance_count', DataType.INT)]),
    'GeometryNodeSetID': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('id', DataType.INT)],
                                     [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeSetSplineCyclic': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('cyclic', DataType.BOOL)],
                                               [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeFieldOnDomain': BuiltinNode([('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)],
                                             [('value', DataType.FLOAT), ('value', DataType.INT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.BOOL)]),
    'GeometryNodeImageTexture': BuiltinNode([('image', DataType.IMAGE), ('vector', DataType.VEC3), ('frame', DataType.INT)],
                                            [('color', DataType.RGBA), ('alpha', DataType.FLOAT)]),
    'ShaderNodeOutputAOV': BuiltinNode([('color', DataType.RGBA), ('value', DataType.FLOAT)],
                                       []),
    'GeometryNodeMeshToCurve': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL)],
                                           [('curve', DataType.GEOMETRY)]),
    'ShaderNodeShaderToRGB': BuiltinNode([('shader', DataType.SHADER)],
                                         [('color', DataType.RGBA), ('alpha', DataType.FLOAT)]),
    'ShaderNodeCameraData': BuiltinNode([],
                                        [('view_vector', DataType.VEC3), ('view_z_depth', DataType.FLOAT), ('view_distance', DataType.FLOAT)]),
    'ShaderNodeTexNoise': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('detail', DataType.FLOAT), ('roughness', DataType.FLOAT), ('distortion', DataType.FLOAT)],
                                      [('fac', DataType.FLOAT), ('color', DataType.RGBA)]),
    'FunctionNodeInputString': BuiltinNode([],
                                           [('string', DataType.STRING)]),
    'GeometryNodeCurveSpiral': BuiltinNode([('resolution', DataType.INT), ('rotations', DataType.FLOAT), ('start_radius', DataType.FLOAT), ('end_radius', DataType.FLOAT), ('height', DataType.FLOAT), ('reverse', DataType.BOOL)],
                                           [('curve', DataType.GEOMETRY)]),
    'GeometryNodeResampleCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('count', DataType.INT), ('length', DataType.FLOAT)],
                                             [('curve', DataType.GEOMETRY)]),
    'GeometryNodeOffsetPointInCurve': BuiltinNode([('point_index', DataType.INT), ('offset', DataType.INT)],
                                                  [('is_valid_offset', DataType.BOOL), ('point_index', DataType.INT)]),
    'ShaderNodeVolumeScatter': BuiltinNode([('color', DataType.RGBA), ('density', DataType.FLOAT), ('anisotropy', DataType.FLOAT), ('weight', DataType.FLOAT)],
                                           [('volume', DataType.SHADER)]),
    'FunctionNodeCombineColor': BuiltinNode([('red', DataType.FLOAT), ('green', DataType.FLOAT), ('blue', DataType.FLOAT), ('alpha', DataType.FLOAT)],
                                            [('color', DataType.RGBA)]),
    'FunctionNodeRotateEuler': BuiltinNode([('rotation', DataType.VEC3), ('rotate_by', DataType.VEC3), ('axis', DataType.VEC3), ('angle', DataType.FLOAT)],
                                           [('rotation', DataType.VEC3)]),
    'GeometryNodeMaterialSelection': BuiltinNode([('material', DataType.MATERIAL)],
                                                 [('selection', DataType.BOOL)]),
    'ShaderNodeVectorTransform': BuiltinNode([('vector', DataType.VEC3)],
                                             [('vector', DataType.VEC3)]),
    'ShaderNodeTexVoronoi': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('smoothness', DataType.FLOAT), ('exponent', DataType.FLOAT), ('randomness', DataType.FLOAT)],
                                        [('distance', DataType.FLOAT), ('color', DataType.RGBA), ('position', DataType.VEC3), ('w', DataType.FLOAT), ('radius', DataType.FLOAT)]),
    'FunctionNodeInputBool': BuiltinNode([],
                                         [('boolean', DataType.BOOL)]),
    'GeometryNodeSetPosition': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('offset', DataType.VEC3)],
                                           [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeCurvePrimitiveLine': BuiltinNode([('start', DataType.VEC3), ('end', DataType.VEC3), ('direction', DataType.VEC3), ('length', DataType.FLOAT)],
                                                  [('curve', DataType.GEOMETRY)]),
    'ShaderNodeVertexColor': BuiltinNode([],
                                         [('color', DataType.RGBA), ('alpha', DataType.FLOAT)]),
    'FunctionNodeSliceString': BuiltinNode([('string', DataType.STRING), ('position', DataType.INT), ('length', DataType.INT)],
                                           [('string', DataType.STRING)]),
    'FunctionNodeValueToString': BuiltinNode([('value', DataType.FLOAT), ('decimals', DataType.INT)],
                                             [('string', DataType.STRING)]),
    'GeometryNodeInputSplineResolution': BuiltinNode([],
                                                     [('resolution', DataType.INT)]),
    'GeometryNodeMeshIcoSphere': BuiltinNode([('radius', DataType.FLOAT), ('subdivisions', DataType.INT)],
                                             [('mesh', DataType.GEOMETRY), ('uv_map', DataType.VEC3)]),
    'GeometryNodePoints': BuiltinNode([('count', DataType.INT), ('position', DataType.VEC3), ('radius', DataType.FLOAT)],
                                      [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeRaycast': BuiltinNode([('target_geometry', DataType.GEOMETRY), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT), ('source_position', DataType.VEC3), ('ray_direction', DataType.VEC3), ('ray_length', DataType.FLOAT)],
                                       [('is_hit', DataType.BOOL), ('hit_position', DataType.VEC3), ('hit_normal', DataType.VEC3), ('hit_distance', DataType.FLOAT), ('attribute', DataType.VEC3), ('attribute', DataType.FLOAT), ('attribute', DataType.RGBA), ('attribute', DataType.BOOL), ('attribute', DataType.INT)]),
    'ShaderNodeValue': BuiltinNode([],
                                   [('value', DataType.FLOAT)]),
    'GeometryNodeInputCurveHandlePositions': BuiltinNode([('relative', DataType.BOOL)],
                                                         [('left', DataType.VEC3), ('right', DataType.VEC3)]),
    'GeometryNodeSetCurveHandlePositions': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('position', DataType.VEC3), ('offset', DataType.VEC3)],
                                                       [('curve', DataType.GEOMETRY)]),
    'GeometryNodeOffsetCornerInFace': BuiltinNode([('corner_index', DataType.INT), ('offset', DataType.INT)],
                                                  [('corner_index', DataType.INT)]),
    'ShaderNodeWavelength': BuiltinNode([('wavelength', DataType.FLOAT)],
                                        [('color', DataType.RGBA)]),
    'GeometryNodeJoinGeometry': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                            [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeMapping': BuiltinNode([('vector', DataType.VEC3), ('location', DataType.VEC3), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                     [('vector', DataType.VEC3)]),
    'ShaderNodeSeparateXYZ': BuiltinNode([('vector', DataType.VEC3)],
                                         [('x', DataType.FLOAT), ('y', DataType.FLOAT), ('z', DataType.FLOAT)]),
    'ShaderNodeVectorCurve': BuiltinNode([('fac', DataType.FLOAT), ('vector', DataType.VEC3)],
                                         [('vector', DataType.VEC3)]),
    'GeometryNodeSubdivisionSurface': BuiltinNode([('mesh', DataType.GEOMETRY), ('level', DataType.INT), ('edge_crease', DataType.FLOAT), ('vertex_crease', DataType.FLOAT)],
                                                  [('mesh', DataType.GEOMETRY)]),
    'ShaderNodeBsdfHairPrincipled': BuiltinNode([('color', DataType.RGBA), ('melanin', DataType.FLOAT), ('melanin_redness', DataType.FLOAT), ('tint', DataType.RGBA), ('absorption_coefficient', DataType.VEC3), ('roughness', DataType.FLOAT), ('radial_roughness', DataType.FLOAT), ('coat', DataType.FLOAT), ('ior', DataType.FLOAT), ('offset', DataType.FLOAT), ('random_color', DataType.FLOAT), ('random_roughness', DataType.FLOAT), ('random', DataType.FLOAT), ('weight', DataType.FLOAT)],
                                                [('bsdf', DataType.SHADER)]),
    'GeometryNodeDistributePointsOnFaces': BuiltinNode([('mesh', DataType.GEOMETRY), ('selection', DataType.BOOL), ('distance_min', DataType.FLOAT), ('density_max', DataType.FLOAT), ('density', DataType.FLOAT), ('density_factor', DataType.FLOAT), ('seed', DataType.INT)],
                                                       [('points', DataType.GEOMETRY), ('normal', DataType.VEC3), ('rotation', DataType.VEC3)]),
    'GeometryNodeDuplicateElements': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('amount', DataType.INT)],
                                                 [('geometry', DataType.GEOMETRY), ('duplicate_index', DataType.INT)]),
    'GeometryNodeMeshBoolean': BuiltinNode([('mesh_1', DataType.GEOMETRY), ('mesh_2', DataType.GEOMETRY), ('self_intersection', DataType.BOOL), ('hole_tolerant', DataType.BOOL)],
                                           [('mesh', DataType.GEOMETRY), ('intersecting_edges', DataType.BOOL)]),
    'GeometryNodeEdgePathsToCurves': BuiltinNode([('mesh', DataType.GEOMETRY), ('start_vertices', DataType.BOOL), ('next_vertex_index', DataType.INT)],
                                                 [('curves', DataType.GEOMETRY)]),
    'ShaderNodeBsdfRefraction': BuiltinNode([('color', DataType.RGBA), ('roughness', DataType.FLOAT), ('ior', DataType.FLOAT), ('normal', DataType.VEC3), ('weight', DataType.FLOAT)],
                                            [('bsdf', DataType.SHADER)]),
    'ShaderNodeMapRange': BuiltinNode([('value', DataType.FLOAT), ('from_min', DataType.FLOAT), ('from_max', DataType.FLOAT), ('to_min', DataType.FLOAT), ('to_max', DataType.FLOAT), ('steps', DataType.FLOAT), ('vector', DataType.VEC3), ('from_min', DataType.VEC3), ('from_max', DataType.VEC3), ('to_min', DataType.VEC3), ('to_max', DataType.VEC3), ('steps', DataType.VEC3)],
                                      [('result', DataType.FLOAT), ('vector', DataType.VEC3)]),
    'ShaderNodeTexMusgrave': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT), ('scale', DataType.FLOAT), ('detail', DataType.FLOAT), ('dimension', DataType.FLOAT), ('lacunarity', DataType.FLOAT), ('offset', DataType.FLOAT), ('gain', DataType.FLOAT)],
                                         [('fac', DataType.FLOAT)]),
    'GeometryNodeCurveToMesh': BuiltinNode([('curve', DataType.GEOMETRY), ('profile_curve', DataType.GEOMETRY), ('fill_caps', DataType.BOOL)],
                                           [('mesh', DataType.GEOMETRY)]),
    'ShaderNodeHairInfo': BuiltinNode([],
                                      [('is_strand', DataType.FLOAT), ('intercept', DataType.FLOAT), ('length', DataType.FLOAT), ('thickness', DataType.FLOAT), ('tangent_normal', DataType.VEC3), ('random', DataType.FLOAT)]),
    'ShaderNodeObjectInfo': BuiltinNode([],
                                        [('location', DataType.VEC3), ('color', DataType.RGBA), ('alpha', DataType.FLOAT), ('object_index', DataType.FLOAT), ('material_index', DataType.FLOAT), ('random', DataType.FLOAT)]),
    'GeometryNodeInputInstanceScale': BuiltinNode([],
                                                  [('scale', DataType.VEC3)]),
    'ShaderNodeOutputLineStyle': BuiltinNode([('color', DataType.RGBA), ('color_fac', DataType.FLOAT), ('alpha', DataType.FLOAT), ('alpha_fac', DataType.FLOAT)],
                                             []),
    'GeometryNodeMeshCone': BuiltinNode([('vertices', DataType.INT), ('side_segments', DataType.INT), ('fill_segments', DataType.INT), ('radius_top', DataType.FLOAT), ('radius_bottom', DataType.FLOAT), ('depth', DataType.FLOAT)],
                                        [('mesh', DataType.GEOMETRY), ('top', DataType.BOOL), ('bottom', DataType.BOOL), ('side', DataType.BOOL), ('uv_map', DataType.VEC3)]),
    'GeometryNodeReplaceMaterial': BuiltinNode([('geometry', DataType.GEOMETRY), ('old', DataType.MATERIAL), ('new', DataType.MATERIAL)],
                                               [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeDualMesh': BuiltinNode([('mesh', DataType.GEOMETRY), ('keep_boundaries', DataType.BOOL)],
                                        [('dual_mesh', DataType.GEOMETRY)]),
    'ShaderNodeAttribute': BuiltinNode([],
                                       [('color', DataType.RGBA), ('vector', DataType.VEC3), ('fac', DataType.FLOAT), ('alpha', DataType.FLOAT)]),
    'GeometryNodeInputMeshEdgeAngle': BuiltinNode([],
                                                  [('unsigned_angle', DataType.FLOAT), ('signed_angle', DataType.FLOAT)]),
    'GeometryNodeSetMaterialIndex': BuiltinNode([('geometry', DataType.GEOMETRY), ('selection', DataType.BOOL), ('material_index', DataType.INT)],
                                                [('geometry', DataType.GEOMETRY)]),
    'GeometryNodeSampleNearest': BuiltinNode([('geometry', DataType.GEOMETRY), ('sample_position', DataType.VEC3)],
                                             [('index', DataType.INT)]),
    'ShaderNodeBackground': BuiltinNode([('color', DataType.RGBA), ('strength', DataType.FLOAT), ('weight', DataType.FLOAT)],
                                        [('background', DataType.SHADER)]),
    'ShaderNodeRGB': BuiltinNode([],
                                 [('color', DataType.RGBA)]),
    'GeometryNodeTrimCurve': BuiltinNode([('curve', DataType.GEOMETRY), ('selection', DataType.BOOL), ('start', DataType.FLOAT), ('end', DataType.FLOAT), ('start', DataType.FLOAT), ('end', DataType.FLOAT)],
                                         [('curve', DataType.GEOMETRY)]),
    'ShaderNodeLayerWeight': BuiltinNode([('blend', DataType.FLOAT), ('normal', DataType.VEC3)],
                                         [('fresnel', DataType.FLOAT), ('facing', DataType.FLOAT)]),
    'GeometryNodeInstanceOnPoints': BuiltinNode([('points', DataType.GEOMETRY), ('selection', DataType.BOOL), ('instance', DataType.GEOMETRY), ('pick_instance', DataType.BOOL), ('instance_index', DataType.INT), ('rotation', DataType.VEC3), ('scale', DataType.VEC3)],
                                                [('instances', DataType.GEOMETRY)]),
    'ShaderNodeMixRGB': BuiltinNode([('fac', DataType.FLOAT), ('color1', DataType.RGBA), ('color2', DataType.RGBA)],
                                    [('color', DataType.RGBA)]),
    'ShaderNodePointInfo': BuiltinNode([],
                                       [('position', DataType.VEC3), ('radius', DataType.FLOAT), ('random', DataType.FLOAT)]),
    'ShaderNodeBsdfHair': BuiltinNode([('color', DataType.RGBA), ('offset', DataType.FLOAT), ('roughnessu', DataType.FLOAT), ('roughnessv', DataType.FLOAT), ('tangent', DataType.VEC3), ('weight', DataType.FLOAT)],
                                      [('bsdf', DataType.SHADER)]),
    'ShaderNodeOutputWorld': BuiltinNode([('surface', DataType.SHADER), ('volume', DataType.SHADER)],
                                         []),
    'GeometryNodeEdgePathsToSelection': BuiltinNode([('start_vertices', DataType.BOOL), ('next_vertex_index', DataType.INT)],
                                                    [('selection', DataType.BOOL)]),
    'GeometryNodeViewer': BuiltinNode([('geometry', DataType.GEOMETRY), ('value', DataType.FLOAT), ('value', DataType.VEC3), ('value', DataType.RGBA), ('value', DataType.INT), ('value', DataType.BOOL)],
                                      []),
    'GeometryNodeCurveEndpointSelection': BuiltinNode([('start_size', DataType.INT), ('end_size', DataType.INT)],
                                                      [('selection', DataType.BOOL)]),
    'GeometryNodeFaceOfCorner': BuiltinNode([('corner_index', DataType.INT)],
                                            [('face_index', DataType.INT), ('index_in_face', DataType.INT)]),
    'GeometryNodeRemoveAttribute': BuiltinNode([('geometry', DataType.GEOMETRY), ('name', DataType.STRING)],
                                               [('geometry', DataType.GEOMETRY)]),
    'ShaderNodeParticleInfo': BuiltinNode([],
                                          [('index', DataType.FLOAT), ('random', DataType.FLOAT), ('age', DataType.FLOAT), ('lifetime', DataType.FLOAT), ('location', DataType.VEC3), ('size', DataType.FLOAT), ('velocity', DataType.VEC3), ('angular_velocity', DataType.VEC3)]),
    'GeometryNodeProximity': BuiltinNode([('target', DataType.GEOMETRY), ('source_position', DataType.VEC3)],
                                         [('position', DataType.VEC3), ('distance', DataType.FLOAT)]),
    'GeometryNodeInputMaterialIndex': BuiltinNode([],
                                                  [('material_index', DataType.INT)]),
    'GeometryNodeBoundBox': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                        [('bounding_box', DataType.GEOMETRY), ('min', DataType.VEC3), ('max', DataType.VEC3)]),
    'GeometryNodeSeparateComponents': BuiltinNode([('geometry', DataType.GEOMETRY)],
                                                  [('mesh', DataType.GEOMETRY), ('point_cloud', DataType.GEOMETRY), ('curve', DataType.GEOMETRY), ('volume', DataType.GEOMETRY), ('instances', DataType.GEOMETRY)]),
    'ShaderNodeEeveeSpecular': BuiltinNode([('base_color', DataType.RGBA), ('specular', DataType.RGBA), ('roughness', DataType.FLOAT), ('emissive_color', DataType.RGBA), ('transparency', DataType.FLOAT), ('normal', DataType.VEC3), ('clear_coat', DataType.FLOAT), ('clear_coat_roughness', DataType.FLOAT), ('clear_coat_normal', DataType.VEC3), ('ambient_occlusion', DataType.FLOAT), ('weight', DataType.FLOAT)],
                                           [('bsdf', DataType.SHADER)]),
    'ShaderNodeEmission': BuiltinNode([('color', DataType.RGBA), ('strength', DataType.FLOAT), ('weight', DataType.FLOAT)],
                                      [('emission', DataType.SHADER)]),
    'ShaderNodeTexCoord': BuiltinNode([],
                                      [('generated', DataType.VEC3), ('normal', DataType.VEC3), ('uv', DataType.VEC3), ('object', DataType.VEC3), ('camera', DataType.VEC3), ('window', DataType.VEC3), ('reflection', DataType.VEC3)]),
    'ShaderNodeTexWhiteNoise': BuiltinNode([('vector', DataType.VEC3), ('w', DataType.FLOAT)],
                                           [('value', DataType.FLOAT), ('color', DataType.RGBA)]),
}


instances = {
    'add': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'ADD')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'ADD')])],
    'sub': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'SUBTRACT')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'SUBTRACT')])],
    'mul': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MULTIPLY')]),
            NodeInstance('ShaderNodeVectorMath', [0, 3], [
                         0], [('operation', 'SCALE')]),
            NodeInstance('ShaderNodeVectorMath', [3, 0], [
                         0], [('operation', 'SCALE')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MULTIPLY')])],
    'div': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'DIVIDE')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'DIVIDE')])],
    'mul_add': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'MULTIPLY_ADD')]),
                NodeInstance('ShaderNodeVectorMath', [0, 1, 2], [0], [('operation', 'MULTIPLY_ADD')])],
    'pow': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'POWER')])],
    'log': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'LOGARITHM')])],
    'sqrt': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SQRT')])],
    'inv_sqrt': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'INVERSE_SQRT')])],
    'abs': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ABSOLUTE')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'ABSOLUTE')])],
    'exp': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'EXPONENT')])],
    'min': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MINIMUM')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MINIMUM')])],
    'max': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MAXIMUM')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MAXIMUM')])],
    'less_than': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'LESS_THAN')])],
    'greater_than': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'GREATER_THAN')])],
    'sign': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SIGN')])],
    'compare': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'COMPARE')])],
    'smin': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'SMOOTH_MIN')])],
    'smax': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'SMOOTH_MAX')])],
    'round': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ROUND')])],
    'floor': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'FLOOR')]),
              NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'FLOOR')])],
    'ceil': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'CEIL')]),
             NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'CEIL')])],
    'trunc': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'TRUNC')])],
    'fract': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'FRACT')]),
              NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'FRACTION')])],
    'mod': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'MODULO')]),
            NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'MODULO')])],
    'wrap': [NodeInstance('ShaderNodeMath', [0, 1, 2], [0], [('operation', 'WRAP')]),
             NodeInstance('ShaderNodeVectorMath', [0, 1, 2], [0], [('operation', 'WRAP')])],
    'snap': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'SNAP')]),
             NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'SNAP')])],
    'pingpong': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'PINGPONG')])],
    'sin': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SINE')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'SINE')])],
    'cos': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'COSINE')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'COSINE')])],
    'tan': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'TANGENT')]),
            NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'TANGENT')])],
    'asin': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ARCSINE')])],
    'acos': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ARCCOSINE')])],
    'atan': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'ARCTANGENT')])],
    'atan2': [NodeInstance('ShaderNodeMath', [0, 1], [0], [('operation', 'ARCTAN2')])],
    'sinh': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'SINH')])],
    'cosh': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'COSH')])],
    'tanh': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'TANH')])],
    'radians': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'RADIANS')])],
    'degrees': [NodeInstance('ShaderNodeMath', [0], [0], [('operation', 'DEGREES')])],
    'vec3': [NodeInstance('ShaderNodeCombineXYZ', [0, 1, 2], [0], [])],
    'sep_xyz': [NodeInstance('ShaderNodeSeparateXYZ', [0], [0, 1, 2], [])],
    'cross': [NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'CROSS_PRODUCT')])],
    'project': [NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'PROJECT')])],
    'reflect': [NodeInstance('ShaderNodeVectorMath', [0, 1], [0], [('operation', 'REFLECT')])],
    'refract': [NodeInstance('ShaderNodeVectorMath', [0, 1, 3], [0], [('operation', 'REFRACT')])],
    'face_forward': [NodeInstance('ShaderNodeVectorMath', [0, 1, 2], [0], [('operation', 'FACE_FORWARD')])],
    'dot': [NodeInstance('ShaderNodeVectorMath', [0, 1], [1], [('operation', 'DOT_PRODUCT')])],
    'dist': [NodeInstance('ShaderNodeVectorMath', [0, 1], [1], [('operation', 'DISTANCE')])],
    'length': [NodeInstance('ShaderNodeVectorMath', [0], [1], [('operation', 'LENGTH')])],
    'scale': [NodeInstance('ShaderNodeVectorMath', [0, 3], [0], [('operation', 'SCALE')])],
    'normalize': [NodeInstance('ShaderNodeVectorMath', [0], [0], [('operation', 'NORMALIZE')])],
    'map': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4], [0], []),
            NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR')])],
    'map_stepped': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4, 5], [0], [('interpolation_type', 'STEPPED')]),
                    NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9, 5], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'STEPPED')])],
    'smoothstep': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4], [0], [('interpolation_type', 'SMOOTHSTEP')]),
                   NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'SMOOTHSTEP')])],
    'smootherstep': [NodeInstance('ShaderNodeMapRange', [0, 1, 2, 3, 4], [0], [('interpolation_type', 'SMOOTHERSTEP')]),
                     NodeInstance('ShaderNodeMapRange', [0, 6, 7, 8, 9], [1], [('data_type', 'FLOAT_VECTOR'), ('interpolation_type', 'SMOOTHERSTEP')])],
    'clamp': [NodeInstance('ShaderNodeClamp', [0, 1, 2], [0], [])],
    'clamp_range': [NodeInstance('ShaderNodeClamp', [0, 1, 2], [0], [('clamp_type', 'RANGE')])],
    'mix': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'MIX')])],
    'darken': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'DARKEN')])],
    'burn': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'BURN')])],
    'lighten': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'LIGHTEN')])],
    'screen': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'SCREEN')])],
    'dodge': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'DODGE')])],
    'overlay': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'OVERLAY')])],
    'soft_light': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'SOFT_LIGHT')])],
    'lin_light': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'LINEAR_LIGHT')])],
    'mix_hue': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'HUE')])],
    'mix_saturation': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'SATURATION')])],
    'mix_color': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'COLOR')])],
    'mix_value': [NodeInstance('ShaderNodeMixRGB', [0, 1, 2], [0], [('blend_type', 'VALUE')])],
    'rotate_axis': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 2, 3], [0], [('rotation_type', 'AXIS_ANGLE')])],
    'rotate_x': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 3], [0], [('rotation_type', 'X_AXIS')])],
    'rotate_y': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 3], [0], [('rotation_type', 'Y_AXIS')])],
    'rotate_z': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 3], [0], [('rotation_type', 'Z_AXIS')])],
    'rotate_euler': [NodeInstance('ShaderNodeVectorRotate', [0, 1, 4], [0], [('rotation_type', 'EULER_XYZ')])],
    'white_noise': [NodeInstance('ShaderNodeTexWhiteNoise', [0], [0, 1], [('noise_dimensions', '3D')]),
                    NodeInstance('ShaderNodeTexWhiteNoise', [1], [0, 1], [('noise_dimensions', '1D')]), ],
    'white_noise_2d': [NodeInstance('ShaderNodeTexWhiteNoise', [0], [0, 1], [('noise_dimensions', '2D')])],
    'white_noise_4d': [NodeInstance('ShaderNodeTexWhiteNoise', [0, 1], [0, 1], [('noise_dimensions', '4D')])],
    'noise': [NodeInstance('ShaderNodeTexNoise', [0, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '3D')]),
              NodeInstance('ShaderNodeTexNoise', [1, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '1D')]), ],
    'noise_2d': [NodeInstance('ShaderNodeTexNoise', [0, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '2D')])],
    'noise_4d': [NodeInstance('ShaderNodeTexNoise', [0, 1, 2, 3, 4, 5], [0, 1], [('noise_dimensions', '4D')])],
    'voronoi': [NodeInstance('ShaderNodeTexVoronoi', [0, 2, 5], [0, 1, 2], [('voronoi_dimensions', '3D')]),
                NodeInstance('ShaderNodeTexVoronoi', [1, 2, 5], [0, 1, 3], [('voronoi_dimensions', '1D')]), ],
    'voronoi_2d': [NodeInstance('ShaderNodeTexVoronoi', [0, 2, 5], [0, 1, 2], [('voronoi_dimensions', '2D')])],
    'voronoi_4d': [NodeInstance('ShaderNodeTexVoronoi', [0, 1, 2, 5], [0, 1, 3], [('voronoi_dimensions', '4D')])],
}
